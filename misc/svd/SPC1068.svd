<?xml version="1.0" encoding="utf-8"?>

<!-- File naming: <part/series name>.svd -->

<!--
  Copyright (C) 2014-2020 ARM Limited. All rights reserved.

  Purpose: System Viewer Description (SVD) Example (Schema Version 1.1)
           This is a description of a none-existent and incomplete device
          for demonstration purposes only.
          
  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:
   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.
   - Neither the name of ARM nor the names of its contributors may be used 
     to endorse or promote products derived from this software without 
     specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGE.
 -->

<device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" >
  <name>SPC1068</name>                                            <!-- name of part-->
  <version>20180100_70611510</version>                            <!-- version of this description, adding CMSIS-SVD 1.1 tags -->
  <description>Information about Spc1068</description>

  <licenseText>                                                   <!-- this license text will appear in header file. \n force line breaks -->
    ARM Limited (ARM) is supplying this software for use with Cortex-M\n
    processor based microcontroller, but can be equally used for other\n
    suitable  processor architectures. This file can be freely distributed.\n
    Modifications to this file shall be clearly marked.\n
    \n
    THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED\n
    OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF\n
    MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.\n
    ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR\n
    CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  </licenseText>
  <cpu>                                                           <!-- details about the cpu embedded in the device -->
    <name>CM3</name>
    <revision>r2p1</revision>
    <endian>little</endian>
    <mpuPresent>true</mpuPresent>
    <fpuPresent>false</fpuPresent>
    <nvicPrioBits>4</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>

  <!--Bus Interface Properties-->
  <!--Cortex-CM3 is byte addressable-->
  <addressUnitBits>8</addressUnitBits>                            <!-- byte addressable memory -->
  <!--the maximum data bit width accessible within a single transfer-->
  <width>32</width>                                               <!-- bus width is 32 bits -->

  <!--Register Default Properties-->
  <size>32</size>                                                 <!-- this is the default size (number of bits) of all peripherals
                                                                       and register that do not define "size" themselves -->
  <access>read-write</access>                                     <!-- default access permission for all subsequent registers -->
  <resetValue>0x00000000</resetValue>                             <!-- by default all bits of the registers are initialized to 0 on reset -->
  <resetMask>0xFFFFFFFF</resetMask>                               <!-- by default all 32Bits of the registers are used -->

  <peripherals>

    <peripheral>
      <name>WDT1</name>
      <description>Watchdog 1</description>
      <groupName>WDT</groupName>
      <baseAddress>0x40000000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x24</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
         <name>WDT1</name>
         <description>WDT1      </description>
         <value>12</value>
      </interrupt>
      <registers>

        <!-- WDTLOAD: Watchdog Timer Load Register -->
        <register>
          <name>WDTLOAD</name>
          <displayName>WDTLOAD</displayName>
          <description>Watchdog Timer Load Register</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Load value The value from which the counter is to decrease. When this register is written to, the count is immediately restarted from the new value. The minimum valid value is 1. -->
            <field>
              <name>VAL</name>
              <description>Load value\nThe value from which the counter is to decrease. When this register is written to, the count is immediately restarted from the new value. The minimum valid value is 1.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- WDTCNT: Watchdog Timer Current Value Register -->
        <register>
          <name>WDTCNT</name>
          <displayName>WDTCNT</displayName>
          <description>Watchdog Timer Current Value Register</description>
          <addressOffset>0x00000004</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Current value of the decrementing counter -->
            <field>
              <name>VAL</name>
              <description>Current value of the decrementing counter</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- WDTCTL: Watchdog Timer Control Register -->
        <register>
          <name>WDTCTL</name>
          <displayName>WDTCTL</displayName>
          <description>Watchdog Timer Control Register</description>
          <addressOffset>0x00000008</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- RSTEN: Enable watchdog reset output, Acts as a mask for the reset output -->
            <field>
              <name>RSTEN</name>
              <description>Enable watchdog reset output, Acts as a mask for the reset output</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable the reset request</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable the reset request</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INTEN: Enable the interrupt event Reloads the counter from WDTLOAD when the interrupt upon a rising edge of this bit. -->
            <field>
              <name>INTEN</name>
              <description>Enable the interrupt event\nReloads the counter from WDTLOAD when the interrupt upon a rising edge of this bit.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable the counter and the interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable the counter and the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- WDTIC: Watchdog Timer Clear Interrupt Register  -->
        <register>
          <name>WDTIC</name>
          <displayName>WDTIC</displayName>
          <description>Watchdog Timer Clear Interrupt Register </description>
          <addressOffset>0x0000000C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Interrupt clear register A write of any value to this register clears the watchdog interrupt, and reloads the counter from WDTLOAD. -->
            <field>
              <name>VAL</name>
              <description>Interrupt clear register\nA write of any value to this register clears the watchdog interrupt, and reloads the counter from WDTLOAD.</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- WDTRAWIF: Watchdog Timer Raw Interrupt Status Register -->
        <register>
          <name>WDTRAWIF</name>
          <displayName>WDTRAWIF</displayName>
          <description>Watchdog Timer Raw Interrupt Status Register</description>
          <addressOffset>0x00000010</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- RAWINT: Raw interrupt status from the counter This register indicates the raw interrupt status from the counter. The value is ANDed with WDTCTL.INTEN to create the masked interrupt, which is passed to the interrupt output pin. -->
            <field>
              <name>RAWINT</name>
              <description>Raw interrupt status from the counter\nThis register indicates the raw interrupt status from the counter. The value is ANDed with WDTCTL.INTEN to create the masked interrupt, which is passed to the interrupt output pin.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Interrupt not occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Interrupt occurred</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- WDTIF: Watchdog Timer Interrupt Status Register -->
        <register>
          <name>WDTIF</name>
          <displayName>WDTIF</displayName>
          <description>Watchdog Timer Interrupt Status Register</description>
          <addressOffset>0x00000014</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- INT: Masked interrupt status from the counter This register indicates the masked interrupt status from the counter. This value is the logical AND of WDTRAWIF.RAWINT and WDTCTL.INTEN, and is the same value that is passed to the interrupt output pin. -->
            <field>
              <name>INT</name>
              <description>Masked interrupt status from the counter\nThis register indicates the masked interrupt status from the counter. This value is the logical AND of WDTRAWIF.RAWINT and WDTCTL.INTEN, and is the same value that is passed to the interrupt output pin.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Interrupt not occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Interrupt occurred</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- WDTLOCK: Watchdog Timer Lock Register -->
        <register>
          <name>WDTLOCK</name>
          <displayName>WDTLOCK</displayName>
          <description>Watchdog Timer Lock Register</description>
          <addressOffset>0x00000018</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- LCKCTL: Enable register writes Enable write access to all other registers by writing 0x1ACCE551. Disable write access by writing any other value. -->
            <field>
              <name>LCKCTL</name>
              <description>Enable register writes\nEnable write access to all other registers by writing 0x1ACCE551.\nDisable write access by writing any other value.</description>
              <bitRange>[31:1]</bitRange>
              <access>read-write</access>
            </field>

            <!-- LCKSTS: Register write lock status -->
            <field>
              <name>LCKSTS</name>
              <description>Register write lock status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNLOCK</name>
                  <description>Write access to all other registers is enabled (not locked)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOCK</name>
                  <description>Write access to all other registers is disabled (locked)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>TIMER0</name>
      <description>NOEN</description>
      <groupName>TIMER</groupName>
      <baseAddress>0x40001000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x10</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>

        <!-- TMRCTL: Timer Control Register -->
        <register>
          <name>TMRCTL</name>
          <displayName>TMRCTL</displayName>
          <description>Timer Control Register</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- INTEN: Timer interrupt enable bit -->
            <field>
              <name>INTEN</name>
              <description>Timer interrupt enable bit</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable timer interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable timer interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EXINT4CLK: Select external input as timer clock -->
            <field>
              <name>EXINT4CLK</name>
              <description>Select external input as timer clock</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SEL_INTERNAL_CLK</name>
                  <description>Disable select external input as timer clock</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SEL_EXTERNAL_CLK</name>
                  <description>Enable Select external input as timer clock</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EXINT4EN: Select external input as timer enable -->
            <field>
              <name>EXINT4EN</name>
              <description>Select external input as timer enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_SEL_EXTERNAL</name>
                  <description>Disable select external input as timer enable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SEL_EXTERNAL</name>
                  <description>Enable select external input as timer enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN: Timer Enable bit -->
            <field>
              <name>EN</name>
              <description>Timer Enable bit</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Timer</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Timer</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- TMRCNT: Timer Counter Value Register -->
        <register>
          <name>TMRCNT</name>
          <displayName>TMRCNT</displayName>
          <description>Timer Counter Value Register</description>
          <addressOffset>0x00000004</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Current value of timer counter -->
            <field>
              <name>VAL</name>
              <description>Current value of timer counter</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- TMRRELOAD: Timer Reload Value Register -->
        <register>
          <name>TMRRELOAD</name>
          <displayName>TMRRELOAD</displayName>
          <description>Timer Reload Value Register</description>
          <addressOffset>0x00000008</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Reload value, A Write to this registers sets the current value -->
            <field>
              <name>VAL</name>
              <description>Reload value, A Write to this registers sets the current value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- TMRIF: Timer Interrupt Status Register -->
        <register>
          <name>TMRIF</name>
          <displayName>TMRIF</displayName>
          <description>Timer Interrupt Status Register</description>
          <addressOffset>0x0000000C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- INT: Timer interrupt, Write one to clear -->
            <field>
              <name>INT</name>
              <description>Timer interrupt, Write one to clear</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Read a 0 indicates there is no timer interrupt\nWrite a 0 has no effect</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Read a 1 indicates a timer interrupt event\nWrite a 1 clear the timer interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral derivedFrom="TIMER0">
      <name>TIMER1</name>
      <baseAddress>0x40002000</baseAddress>
    </peripheral>

    <peripheral>
      <name>GPIO</name>
      <description>General purpose input and output</description>
      <groupName>GPIO</groupName>
      <baseAddress>0x40003000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0xA4</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>

        <!-- GPLR[2]: GPIO Pin Level Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GPLR[%s]</name>
          <displayName>GPLR[%s]</displayName>
          <description>GPIO Pin Level Register 0</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x0E000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: GPIOn pin level readback (n = 0~31) 0: GPIOn is low level 1: GPIOn is high level -->
            <field>
              <name>VAL</name>
              <description>GPIOn pin level readback (n = 0~31)\n0: GPIOn is low level\n1: GPIOn is high level</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- GPDR[2]: GPIO Pin Direction Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GPDR[%s]</name>
          <displayName>GPDR[%s]</displayName>
          <description>GPIO Pin Direction Register 0</description>
          <addressOffset>0x0000000C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Set GPIOn direction (n = 0~31) 0: Set GPIOn as input 1: Set GPIOn as output -->
            <field>
              <name>VAL</name>
              <description>Set GPIOn direction (n = 0~31)\n0: Set GPIOn as input\n1: Set GPIOn as output</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- GPSR[2]: GPIO Pin Output Set Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GPSR[%s]</name>
          <displayName>GPSR[%s]</displayName>
          <description>GPIO Pin Output Set Register 0</description>
          <addressOffset>0x00000018</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Set GPIOn output high (n = 0~31) 0: Unaffected 1: Set GPIOn output to high -->
            <field>
              <name>VAL</name>
              <description>Set GPIOn output high (n = 0~31)\n0: Unaffected\n1: Set GPIOn output to high</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- GPCR[2]: GPIO Pin Output Clear Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GPCR[%s]</name>
          <displayName>GPCR[%s]</displayName>
          <description>GPIO Pin Output Clear Register 0</description>
          <addressOffset>0x00000024</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Set GPIOn output low (n = 0~31) 0: Unaffected 1: Set GPIOn output to low -->
            <field>
              <name>VAL</name>
              <description>Set GPIOn output low (n = 0~31)\n0: Unaffected\n1: Set GPIOn output to low</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- GRER[2]: GPIO Rising Edge detect Enable Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GRER[%s]</name>
          <displayName>GRER[%s]</displayName>
          <description>GPIO Rising Edge detect Enable Register 0</description>
          <addressOffset>0x00000030</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Enable GPIOn rising edge detect (n = 0~31) 0: Disable rising edge detection on GPIOn 1: Enable rising edge detection on GPIOn -->
            <field>
              <name>VAL</name>
              <description>Enable GPIOn rising edge detect (n = 0~31)\n0: Disable rising edge detection on GPIOn\n1: Enable rising edge detection on GPIOn</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- GFER[2]: GPIO Falling Edge detect Enable Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GFER[%s]</name>
          <displayName>GFER[%s]</displayName>
          <description>GPIO Falling Edge detect Enable Register 0</description>
          <addressOffset>0x0000003C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Enable GPIOn falling edge detect (n = 0~31) 0: Disable falling edge detection on GPIOn 1: Enable falling edge detection on GPIOn -->
            <field>
              <name>VAL</name>
              <description>Enable GPIOn falling edge detect (n = 0~31)\n0: Disable falling edge detection on GPIOn\n1: Enable falling edge detection on GPIOn</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- GEDR[2]: GPIO Edge detect Status Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GEDR[%s]</name>
          <displayName>GEDR[%s]</displayName>
          <description>GPIO Edge detect Status Register 0</description>
          <addressOffset>0x00000048</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: GPIOn edge detect status (n = 0~31) 0: Read 0 indicates no detected rising or falling edge      Write a 0 has no effect 1: Read 1 indicates edge was detected     Write 1 will clear the latched status -->
            <field>
              <name>VAL</name>
              <description>GPIOn edge detect status (n = 0~31)\n0: Read 0 indicates no detected rising or falling edge\n     Write a 0 has no effect\n1: Read 1 indicates edge was detected\n    Write 1 will clear the latched status</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- GSDR[2]: GPIO Pin Bitwise Set Direction Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GSDR[%s]</name>
          <displayName>GSDR[%s]</displayName>
          <description>GPIO Pin Bitwise Set Direction Register 0</description>
          <addressOffset>0x00000054</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Set GPDR register bit (n = 0~31) 0: Unaffected 1: Set  GPDR bit and set GPIOn as output -->
            <field>
              <name>VAL</name>
              <description>Set GPDR register bit (n = 0~31)\n0: Unaffected\n1: Set  GPDR bit and set GPIOn as output</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- GCDR[2]: GPIO Pin Bitwise Clear Direction Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GCDR[%s]</name>
          <displayName>GCDR[%s]</displayName>
          <description>GPIO Pin Bitwise Clear Direction Register 0</description>
          <addressOffset>0x00000060</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Clear GPDR register bit (n = 0~31) 0: Unaffected 1: Clear  GPDR bit and set GPIOn as input -->
            <field>
              <name>VAL</name>
              <description>Clear GPDR register bit (n = 0~31)\n0: Unaffected\n1: Clear  GPDR bit and set GPIOn as input</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- GSRER[2]: GPIO Bitwise Set Rising Edge detect Enable Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GSRER[%s]</name>
          <displayName>GSRER[%s]</displayName>
          <description>GPIO Bitwise Set Rising Edge detect Enable Register 0</description>
          <addressOffset>0x0000006C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Set GRER register bit (n = 0~31) 0: Unaffected 1: Set GRER bit and enable rising edge detect for GPIOn -->
            <field>
              <name>VAL</name>
              <description>Set GRER register bit (n = 0~31)\n0: Unaffected\n1: Set GRER bit and enable rising edge detect for GPIOn</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- GCRER[2]: GPIO Bitwise Clear Rising Edge detect Enable Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GCRER[%s]</name>
          <displayName>GCRER[%s]</displayName>
          <description>GPIO Bitwise Clear Rising Edge detect Enable Register 0</description>
          <addressOffset>0x00000078</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Clear GRER register bit (n = 0~31) 0: Unaffected 1: Clear GRER bit and disable rising edge detect for GPIOn -->
            <field>
              <name>VAL</name>
              <description>Clear GRER register bit (n = 0~31)\n0: Unaffected\n1: Clear GRER bit and disable rising edge detect for GPIOn</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- GSFER[2]: GPIO Bitwise Set Falling Edge detect Enable Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GSFER[%s]</name>
          <displayName>GSFER[%s]</displayName>
          <description>GPIO Bitwise Set Falling Edge detect Enable Register 0</description>
          <addressOffset>0x00000084</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Set GFER register bit (n = 0~31) 0: Unaffected 1: Set GFER bit and enable falling edge detect for GPIOn -->
            <field>
              <name>VAL</name>
              <description>Set GFER register bit (n = 0~31)\n0: Unaffected\n1: Set GFER bit and enable falling edge detect for GPIOn</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- GCFER[2]: GPIO Bitwise Clear Falling Edge detect Enable Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GCFER[%s]</name>
          <displayName>GCFER[%s]</displayName>
          <description>GPIO Bitwise Clear Falling Edge detect Enable Register 0</description>
          <addressOffset>0x00000090</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Clear GFER register bit (n = 0~31) 0: Unaffected 1: Clear GFER bit and disable falling edge detect for GPIOn -->
            <field>
              <name>VAL</name>
              <description>Clear GFER register bit (n = 0~31)\n0: Unaffected\n1: Clear GFER bit and disable falling edge detect for GPIOn</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- APMSK[2]: GPIO Bitwise mask of Edge detect Status Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>APMSK[%s]</name>
          <displayName>APMSK[%s]</displayName>
          <description>GPIO Bitwise mask of Edge detect Status Register 0</description>
          <addressOffset>0x0000009C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Enable GPIOn edge detect (n = 0~31) 0: Disable GPIOn edge detect 1: Enable GPIOn edge detect -->
            <field>
              <name>VAL</name>
              <description>Enable GPIOn edge detect (n = 0~31)\n0: Disable GPIOn edge detect\n1: Enable GPIOn edge detect</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>UART</name>
      <description>NOEN</description>
      <groupName>UART</groupName>
      <baseAddress>0x40004000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x30</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
         <name>UART</name>
         <description>UART      </description>
         <value>0</value>
      </interrupt>
      <registers>

        <!-- UARTDLL: UART Divisor Latch Low Byte Register -->
        <register>
          <name>UARTDLL</name>
          <displayName>UARTDLL</displayName>
          <description>UART Divisor Latch Low Byte Register</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Low-byte compare value to generate baud rate -->
            <field>
              <name>VAL</name>
              <description>Low-byte compare value to generate baud rate</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- UARTRBR: UART Receive Buffer Register -->
        <register>
          <name>UARTRBR</name>
          <displayName>UARTRBR</displayName>
          <alternateRegister>UARTDLL</alternateRegister>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: In non-FIFO mode, this register holds the characters received by the UART Receive Shift Register. If this register is configured to use fewer than eight bits, the bits are right-justified and the most significant bits (MSB) are zeroed. Reading the register empties the register and clears the &amp;lt;Data Ready&amp;gt; field in the Line Status Register. UARTRBR latches the value of the data byte at the front of the FIFO in FIFO mode. -->
            <field>
              <name>VAL</name>
              <description>In non-FIFO mode, this register holds the characters received by the UART Receive Shift Register. If this register is configured to use fewer than eight bits, the bits are right-justified and the most significant bits (MSB) are zeroed. Reading the register empties the register and clears the &amp;lt;Data Ready&amp;gt; field in the Line Status Register. UARTRBR latches the value of the data byte at the front of the FIFO in FIFO mode.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- UARTTHR: UART Transmit Holding Register -->
        <register>
          <name>UARTTHR</name>
          <displayName>UARTTHR</displayName>
          <alternateRegister>UARTDLL</alternateRegister>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: This register holds the data byte to be transmitted next in non-FIFO mode. When the Transmit Shift Register (TSR) is emptied, the contents of this register are loaded into the Transmit Shift Register and the &amp;lt;Transmit Data Request&amp;gt; field in the Line Status Register is set. A write to Transmit Holding Register puts data into the top of the FIFO in FIFO mode. The data at the front of the FIFO is loaded into the TSR when the TSR is empty. -->
            <field>
              <name>VAL</name>
              <description>This register holds the data byte to be transmitted next in non-FIFO mode. When the Transmit Shift Register (TSR) is emptied, the contents of this register are loaded into the Transmit Shift Register and the &amp;lt;Transmit Data Request&amp;gt; field in the Line Status Register is set.\nA write to Transmit Holding Register puts data into the top of the FIFO in FIFO mode. The data at the front of the FIFO is loaded into the TSR when the TSR is empty.</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- UARTDLH: UART Divisor Latch High Byte Register -->
        <register>
          <name>UARTDLH</name>
          <displayName>UARTDLH</displayName>
          <description>UART Divisor Latch High Byte Register</description>
          <addressOffset>0x00000004</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: High-byte compare value to generate baud rate -->
            <field>
              <name>VAL</name>
              <description>High-byte compare value to generate baud rate</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- UARTIER: UART Interrupt Enable Register -->
        <register>
          <name>UARTIER</name>
          <displayName>UARTIER</displayName>
          <alternateRegister>UARTDLH</alternateRegister>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x00000004</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- UUE: UART Unit Enable  -->
            <field>
              <name>UUE</name>
              <description>UART Unit Enable\n</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UART_DISABLE</name>
                  <description>The unit is disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART_ENABLE</name>
                  <description>The unit is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NRZE: NRZ coding Enable NRZ encoding/decoding is used only in UART mode, not in Infrared mode. If the serial infrared receiver or transmitter is enabled, NRZ coding is disabled.  -->
            <field>
              <name>NRZE</name>
              <description>NRZ coding Enable\nNRZ encoding/decoding is used only in UART mode, not in Infrared mode. If the serial infrared receiver or transmitter is enabled, NRZ coding is disabled.\n</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NRZ_DISABLE</name>
                  <description>NRZ coding disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NRZ_ENABLE</name>
                  <description>NRZ coding enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RTOIE: Receiver Time-out Interrupt Enable Receiver Time-out Interrupt Enable (Source UARTIIR[TOD]) -->
            <field>
              <name>RTOIE</name>
              <description>Receiver Time-out Interrupt Enable\nReceiver Time-out Interrupt Enable (Source UARTIIR[TOD])</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_TIMEOUT_INT_DISABLE</name>
                  <description>Receiver data time-out interrupt disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_TIMEOUT_INT_ENABLE</name>
                  <description>Receiver data time-out interrupt enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- MIE: Modem Interrupt Enable Modem Interrupt Enable (Source UARTIIR[IID])  -->
            <field>
              <name>MIE</name>
              <description>Modem Interrupt Enable\nModem Interrupt Enable (Source UARTIIR[IID])\n</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODEM_INT_DISABLE</name>
                  <description>Modem status interrupt disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODEM_INT_ENABLE</name>
                  <description>Modem status interrupt enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RLSE: Receiver Line Status Interrupt Enable Receiver Line Status Interrupt Enable (Source UARTIIR[IID])  -->
            <field>
              <name>RLSE</name>
              <description>Receiver Line Status Interrupt Enable\nReceiver Line Status Interrupt Enable (Source UARTIIR[IID])\n</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_LINE_INT_DISABLE</name>
                  <description>Receiver line status interrupt disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_LINE_INT_ENABLE</name>
                  <description>Receiver line status interrupt enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TIE: Transmit Data Request Interrupt Enable Transmit Data Request Interrupt Enable (Source UARTIIR[IID])  -->
            <field>
              <name>TIE</name>
              <description>Transmit Data Request Interrupt Enable\nTransmit Data Request Interrupt Enable (Source UARTIIR[IID])\n</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_FIFO_INT_DISABLE</name>
                  <description>Transmit FIFO data request interrupt disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_FIFO_INT_ENABLE</name>
                  <description>Transmit FIFO data request interrupt enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RAVIE: Receiver Data Available Interrupt Enable Receiver Data Available Interrupt Enable (Source UARTIIR[IID])  -->
            <field>
              <name>RAVIE</name>
              <description>Receiver Data Available Interrupt Enable\nReceiver Data Available Interrupt Enable (Source UARTIIR[IID])\n</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DATA_INT_DISABLE</name>
                  <description>Receiver data available (trigger threshold reached) interrupt disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_DATA_INT_ENABLE</name>
                  <description>Receiver data available (trigger threshold reached) interrupt enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- UARTFCR: UART FIFO Control Register -->
        <register>
          <name>UARTFCR</name>
          <displayName>UARTFCR</displayName>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x00000008</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- ITL: Interrupt Trigger Level (threshold) When the number of bytes in the Receive FIFO equals the interrupt trigger threshold programmed into this field and the received-data-available interrupt is enabled via the UARTIER, an interrupt is generated and appropriate bits are set in the UARTIIR.  -->
            <field>
              <name>ITL</name>
              <description>Interrupt Trigger Level (threshold)\nWhen the number of bytes in the Receive FIFO equals the interrupt trigger threshold programmed into this field and the received-data-available interrupt is enabled via the UARTIER, an interrupt is generated and appropriate bits are set in the UARTIIR.\n</description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_FIFO_THRESHOLD_1</name>
                  <description>1 byte or more in FIFO causes interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_FIFO_THRESHOLD_8</name>
                  <description>8 bytes or more in FIFO causes interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_FIFO_THRESHOLD_16</name>
                  <description>16 bytes or more in FIFO causes interrupt</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_FIFO_THRESHOLD_32</name>
                  <description>32 bytes or more in FIFO causes interrupt </description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TIL: Transmitter Interrupt Level  -->
            <field>
              <name>TIL</name>
              <description>Transmitter Interrupt Level\n</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TXFIFO_HALF_EMPTY</name>
                  <description>Interrupt request when FIFO is half empty</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TXFIFO_EMPTY</name>
                  <description>Interrupt request when FIFO is empty</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RSTTF: Reset Transmit FIFO When this one is set, all the bytes in the Transmit FIFO are cleared. The TDRQ bit in the LSR is set and the UARTIIR shows a transmitter requests data interrupt, if the TIE bit in the UARTIER register is set. The transmit Shift register is not cleared, and it completes the current transmission. -->
            <field>
              <name>RSTTF</name>
              <description>Reset Transmit FIFO\nWhen this one is set, all the bytes in the Transmit FIFO are cleared. The TDRQ bit in the LSR is set and the UARTIIR shows a transmitter requests data interrupt, if the TIE bit in the UARTIER register is set. The transmit Shift register is not cleared, and it completes the current transmission.</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Writing 0 has no effect</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_TX_FIFO</name>
                  <description>The transmit FIFO is cleared</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RSTRF: Reset Receive FIFO When RESETRF is set, all the bytes in the Receive FIFO are cleared. The DR bit in the UARTLSR is cleared to 0. All the error bits in the FIFO and the FIFOE bit in the UARTLSR are cleared. Any error bits, OE, PE, FE or BI, that has been set in UARTLSR are still set. The Receive Shift Register is not cleared. If the UARTIIR has been set to &quot;received data available&quot;, it is cleared. -->
            <field>
              <name>RSTRF</name>
              <description>Reset Receive FIFO\nWhen RESETRF is set, all the bytes in the Receive FIFO are cleared. The DR bit in the UARTLSR is cleared to 0. All the error bits in the FIFO and the FIFOE bit in the UARTLSR are cleared. Any error bits, OE, PE, FE or BI, that has been set in UARTLSR are still set. The Receive Shift Register is not cleared. If the UARTIIR has been set to &quot;received data available&quot;, it is cleared.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Writing 0 has no effect</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_RX_FIFO</name>
                  <description>The receive FIFO is cleared</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TRFIFOE: Transmit and Receive FIFO Enable TRFIFOE enable or disables the Transmit and Receive FIFOs. When TRFIFOE is set, both FIFOs are enabled (FIFO mode). When TRFIFOE is clear, the FIFOs are both disabled (non-FIFO mode). Writing 0b0 to this bit clears all bytes in both FIFOs. When changing from FIFO mode to non-FIFO mode and vice versa, data is cleared automatically from the FIFOs. This bit must be set when other bits in this register are written or the othe					r bits are not programmed. -->
            <field>
              <name>TRFIFOE</name>
              <description>Transmit and Receive FIFO Enable\nTRFIFOE enable or disables the Transmit and Receive FIFOs. When TRFIFOE is set, both FIFOs are enabled (FIFO mode). When TRFIFOE is clear, the FIFOs are both disabled (non-FIFO mode). Writing 0b0 to this bit clears all bytes in both FIFOs. When changing from FIFO mode to non-FIFO mode and vice versa, data is cleared automatically from the FIFOs. This bit must be set when other bits in this register are written or the othe					r bits are not programmed.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_DISABLE</name>
                  <description>FIFOs are disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_ENABLE</name>
                  <description>FIFOs are enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- UARTIIR: UART Interrupt Identification Register -->
        <register>
          <name>UARTIIR</name>
          <displayName>UARTIIR</displayName>
          <alternateRegister>UARTFCR</alternateRegister>
          <description>UART Interrupt Identification Register</description>
          <addressOffset>0x00000008</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- FIFOSTS: FIFO Mode Enable Status  -->
            <field>
              <name>FIFOSTS</name>
              <description>FIFO Mode Enable Status\n</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_FIFO_MODE</name>
                  <description>Non-FIFO mode is selected</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_MODE</name>
                  <description>FIFO mode is selected (&amp;lt;Transmit and Receive FIFO Enable&amp;gt; field in the FIFO Control Register = 1)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ABL: Auto-baud Lock  -->
            <field>
              <name>ABL</name>
              <description>Auto-baud Lock\n</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AUTO_BAUD_NOT_LOCK</name>
                  <description>Auto-baud circuitry has not programmed Divisor Latch registers (DLR)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AUTO_BAUD_LOCK</name>
                  <description>Divisor Latch registers (DLR) programmed by auto-baud circuitry</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TOD: Time Out Detected  -->
            <field>
              <name>TOD</name>
              <description>Time Out Detected\n</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TIMEOUT_NOT_OCCUR</name>
                  <description>No time out interrupt is pending</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TIMEOUT_OCCUR</name>
                  <description>Time out interrupt is pending (FIFO mode only)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IID: Interrupt Source Encoded  -->
            <field>
              <name>IID</name>
              <description>Interrupt Source Encoded\n</description>
              <bitRange>[2:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODEM_INT</name>
                  <description>Modem Status (CTS, DSR, RI, DCD modem signals changed state), Do not support in SPC1068</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_FIFO_REQUEST_DATA_INT</name>
                  <description>Transmit FIFO requests data</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_DATA_READY_INT</name>
                  <description>Received data available</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_ERROR_INT</name>
                  <description>Receive error (Overrun, parity, framing, break, FIFO error)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NIP: No Interrupt Pending  -->
            <field>
              <name>NIP</name>
              <description>No Interrupt Pending\n</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INT_OCCUR</name>
                  <description>Interrupt is pending (active low)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INT_NOT_OCCUR</name>
                  <description>No interrupt is pending</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- UARTLCR: UART Line Control Register -->
        <register>
          <name>UARTLCR</name>
          <displayName>UARTLCR</displayName>
          <description>UART Line Control Register</description>
          <addressOffset>0x0000000C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DLAB: Divisor Latch Access Bit Must be set to access the Divisor Latch registers of the baud-rate generator during a Read or Write operation. Must be clear to access the Receive buffer, the Transmit Holding Register, or the UARTIER. -->
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit\nMust be set to access the Divisor Latch registers of the baud-rate generator during a Read or Write operation. Must be clear to access the Receive buffer, the Transmit Holding Register, or the UARTIER.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DIVISOR_LOCK</name>
                  <description>Access Transmit Holding Register, Receive Buffer Register, and Interrupt Enable Register</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DIVISOR_ACCESS</name>
                  <description>Access Divisor Latch registers (UARTDLL and UARTDLH)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SB: Set Break Causes a break condition to be transmitted to the receiving UART. Acts only on the TXD pin and has no effect on the Transmit logic. In FIFO mode, wait until the transmitter is idle (UARTLSR[TXEMPTY]=1) to set and clear SB. -->
            <field>
              <name>SB</name>
              <description>Set Break\nCauses a break condition to be transmitted to the receiving UART. Acts only on the TXD pin and has no effect on the Transmit logic. In FIFO mode, wait until the transmitter is idle (UARTLSR[TXEMPTY]=1) to set and clear SB.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect on TXD output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_TX_0</name>
                  <description>Forces TXD output to 0 (space)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- STKYP: Sticky Parity Forces the bit value at the parity bit location to be the opposite of the EPS bit rather than the parity value. This stops parity generation. If PEN=0, STKYP is ignored. -->
            <field>
              <name>STKYP</name>
              <description>Sticky Parity\nForces the bit value at the parity bit location to be the opposite of the EPS bit rather than the parity value. This stops parity generation. If PEN=0, STKYP is ignored.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect on parity bit</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PARITY_EQU_INVERT_EPS</name>
                  <description>Forces parity bit to be opposite of EPS bit value</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EPS: Even Parity Select If PEN = 0, EPS is ignored. -->
            <field>
              <name>EPS</name>
              <description>Even Parity Select\nIf PEN = 0, EPS is ignored.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ODD_PARITY</name>
                  <description>Sends or checks for odd parity</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVEN_PARITY</name>
                  <description>Sends or checks for even parity</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PEN: Parity Enable Enables a parity bit to be generated on transmission or checked on reception.  -->
            <field>
              <name>PEN</name>
              <description>Parity Enable\nEnables a parity bit to be generated on transmission or checked on reception.\n</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PARITY</name>
                  <description>No parity</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PARITY_ENABLE</name>
                  <description>Parity</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- STB: Stop bits Specifies the number of stop bits transmitted and received in each character. When receiving, the receiver checks only the first stop bit. -->
            <field>
              <name>STB</name>
              <description>Stop bits\nSpecifies the number of stop bits transmitted and received in each character. When receiving, the receiver checks only the first stop bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1_STOP_BIT</name>
                  <description>1 stop bit</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2_STOP_BIT</name>
                  <description>1.5 stop bits for 5-bit character\n2 stop bits for 6/7/8 bit character</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WLS: Word Length Select Specifies the number of data bits in each transmitted or received character. -->
            <field>
              <name>WLS</name>
              <description>Word Length Select\nSpecifies the number of data bits in each transmitted or received character.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>5_DATA_BIT</name>
                  <description>5-bit character</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>6_DATA_BIT</name>
                  <description>6-bit character</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>7_DATA_BIT</name>
                  <description>7-bit character</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>8_DATA_BIT</name>
                  <description>8-bit character</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- UARTMCR: UART Modem Control Register -->
        <register>
          <name>UARTMCR</name>
          <displayName>UARTMCR</displayName>
          <description>UART Modem Control Register</description>
          <addressOffset>0x00000010</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- LOOP: Loopback Mode This bit provides a local loopback feature for diagnostic testing of the UART. When LOOP is set, the following occurs: The transmitter serial output is set to a logic 1 state. The receiver serial input is disconnected from the pin. The output of the Transmit Shift Register is looped back into the Receive Shift Register input. Loopback mode must be configured before the UART is enabled. In Loopback mode, data that is transmitted is received immediately. This feature allows the CPU to verify the Transmit and Receive data paths of the UART. A break signal can also be transferred from the transmitter section to the receiver section in Loopback mode.  -->
            <field>
              <name>LOOP</name>
              <description>Loopback Mode\nThis bit provides a local loopback feature for diagnostic testing of the UART. When LOOP is set, the following occurs: The transmitter serial output is set to a logic 1 state. The receiver serial input is disconnected from the pin. The output of the Transmit Shift Register is looped back into the Receive Shift Register input.\nLoopback mode must be configured before the UART is enabled.\nIn Loopback mode, data that is transmitted is received immediately. This feature allows the CPU to verify the Transmit and Receive data paths of the UART. A break signal can also be transferred from the transmitter section to the receiver section in Loopback mode.\n</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL_MODE</name>
                  <description>Normal UART operation</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOOPBACK_MODE</name>
                  <description>Loopback-mode UART operation</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OUT2: OUT2 Signal Control OUT2 connects the UART interrupt output to the Interrupt Controller unit when LOOP is clear. When LOOP is set, interrupts always go to the CPU.  -->
            <field>
              <name>OUT2</name>
              <description>OUT2 Signal Control\nOUT2 connects the UART interrupt output to the Interrupt Controller unit when LOOP is clear.\nWhen LOOP is set, interrupts always go to the CPU.\n</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INT_DISABLE</name>
                  <description>Disable UART interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INT_ENABLE</name>
                  <description>Enable UART interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- UARTLSR: UART Line Status Register -->
        <register>
          <name>UARTLSR</name>
          <displayName>UARTLSR</displayName>
          <description>UART Line Status Register</description>
          <addressOffset>0x00000014</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000060</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- FIFOERR: FIFO Error Status This bit is clear in non-FIFO mode. In FIFO mode, FIFOERR is set when there is at least one parity error, framing error, or break indication for any of the characters in the FIFO. The CPU read of the UARTLSR does not reset this bit. FIFOERR is reset when all errorneous characters have been read from the FIFO.  -->
            <field>
              <name>FIFOERR</name>
              <description>FIFO Error Status\nThis bit is clear in non-FIFO mode. In FIFO mode, FIFOERR is set when there is at least one parity error, framing error, or break indication for any of the characters in the FIFO. The CPU read of the UARTLSR does not reset this bit. FIFOERR is reset when all errorneous characters have been read from the FIFO.\n</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_ERROR_NOT_OCCUR</name>
                  <description>No FIFO or no errors in receive FIFO</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_ERROR_OCCUR</name>
                  <description>At least one character in receive FIFO has errors</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TXEMPTY: Transmitter Empty Set when the Transmit Holding Register and the Transmit Shift Register are both empty. It is cleared when either the Transmit Holding Register or the Transmit Shift Register contains a data character. In FIFO mode, TXEMPTY is set when the Transmit FIFO and the Transmit Shift Register are both empty.  -->
            <field>
              <name>TXEMPTY</name>
              <description>Transmitter Empty\nSet when the Transmit Holding Register and the Transmit Shift Register are both empty. It is cleared when either the Transmit Holding Register or the Transmit Shift Register contains a data character. In FIFO mode, TXEMPTY is set when the Transmit FIFO and the Transmit Shift Register are both empty.\n</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TXFIFO_NOT_EMPTY</name>
                  <description>There is data in the transmit shift register, the Transmit Holding Register, or the FIFO.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TXFIFO_EMPTY</name>
                  <description>All the data in the transmitter has been shifted out</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TDRQ: Transmit Data Request Indicates that the UART is ready to accept a new character for transmission. In addition, this bit causes the UART to issue an interrupt to the CPU when the transmit-data request interrupt enable is set. The TDRQ bit is set when a character is transferred from the Transmit Holding Register into the Transmit Shift Register. The bit is cleared with the loading of the Transmit Holding Register. In FIFO mode, TDRQ is set when half of the characters in the FIFO have been loaded into the Shift Register or the RESETTF bit in UARTFCR has been set. It is cleared when the FIFO has more than half data. If more than 64 characters are loaded into the FIFO, the excess characters are lost.  -->
            <field>
              <name>TDRQ</name>
              <description>Transmit Data Request\nIndicates that the UART is ready to accept a new character for transmission. In addition, this bit causes the UART to issue an interrupt to the CPU when the transmit-data request interrupt enable is set. The TDRQ bit is set when a character is transferred from the Transmit Holding Register into the Transmit Shift Register. The bit is cleared with the loading of the Transmit Holding Register. In FIFO mode, TDRQ is set when half of the characters in the FIFO have been loaded into the Shift Register or the RESETTF bit in UARTFCR has been set. It is cleared when the FIFO has more than half data. If more than 64 characters are loaded into the FIFO, the excess characters are lost.\n</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TXFIFO_MORE_THAN_HALF</name>
                  <description>There is data in the holding register or FIFO waiting to be shifted out</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TXFIFO_LESS_THAN_HALF</name>
                  <description>The transmit FIFO has half or less than half data</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- BI: Break Interrupt BI is set when the received data input is held low for longer than a full-word transmission time (the total time of start bit + data bits + parity bit + stop bit). BI is cleared when the CPU reads the UARTLSR. In FIFO mode, only one character equal to 0x00, is loaded into the FIFO regardless of the length of the break condition. BI shows the break condition for the character at the front of the FIFO, not the most recently received character.  -->
            <field>
              <name>BI</name>
              <description>Break Interrupt\nBI is set when the received data input is held low for longer than a full-word transmission time (the total time of start bit + data bits + parity bit + stop bit). BI is cleared when the CPU reads the UARTLSR. In FIFO mode, only one character equal to 0x00, is loaded into the FIFO regardless of the length of the break condition. BI shows the break condition for the character at the front of the FIFO, not the most recently received character.\n</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BREAK_SIGNAL_NOT_OCCUR</name>
                  <description>No break signal has been received</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BREAK_SIGNAL_OCCUR</name>
                  <description>Break signal received</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FE: Framing Error FE indicates that the received character did not have a valid stop bit. FE is set when the bit following the last data bit or parity bit is detected to be 0. FE is cleared when the CPU reads the LSR. The UART resynchronizes after a framing error. To do this, it assumes that the framing error was due to the next start bit, so it samples this start bit twice and then reads in the data. In FIFO mode, FE shows a framing error for the character at the front of the FIFO, not for the most recently received character.  -->
            <field>
              <name>FE</name>
              <description>Framing Error\nFE indicates that the received character did not have a valid stop bit. FE is set when the bit following the last data bit or parity bit is detected to be 0. FE is cleared when the CPU reads the LSR. The UART resynchronizes after a framing error. To do this, it assumes that the framing error was due to the next start bit, so it samples this start bit twice and then reads in the data. In FIFO mode, FE shows a framing error for the character at the front of the FIFO, not for the most recently received character.\n</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FRAME_ERROR_NOT_OCCUR</name>
                  <description>No Framing error</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_ERROR_OCCUR</name>
                  <description>Invalid stop bit has been detected</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PE: Parity Error Indicates that the received data character does not have the correct even or odd parity, as selected by the even parity select bit. PE is set upon detection of a parity error and is cleared when the CPU reads the UARTLSR. In FIFO mode, PE shows a parity error for the character at the front of the FIFO, not the most recently received character.  -->
            <field>
              <name>PE</name>
              <description>Parity Error\nIndicates that the received data character does not have the correct even or odd parity, as selected by the even parity select bit. PE is set upon detection of a parity error and is cleared when the CPU reads the UARTLSR. In FIFO mode, PE shows a parity error for the character at the front of the FIFO, not the most recently received character.\n</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PARITY_ERROR_NOT_OCCUR</name>
                  <description>No Parity Error</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PARITY_ERROR_OCCUR</name>
                  <description>Parity error has occurred</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OE: Overrun Error In non-FIFO mode, indicates that data in Receive Buffer register was not read by the CPU before the next character was received. The new character is lost. In FIFO mode, OE indicates that all 64 bytes of the FIFO are full and the most recently received byte has been discarded. OE is set upon detection of an overrun condition and cleared when the CPU reads the UARTLSR.  -->
            <field>
              <name>OE</name>
              <description>Overrun Error\nIn non-FIFO mode, indicates that data in Receive Buffer register was not read by the CPU before the next character was received. The new character is lost. In FIFO mode, OE indicates that all 64 bytes of the FIFO are full and the most recently received byte has been discarded. OE is set upon detection of an overrun condition and cleared when the CPU reads the UARTLSR.\n</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_OVERRUN_NOT_OCCUR</name>
                  <description>No data has been overrun</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_OVERRUN_OCCUR</name>
                  <description>Receive data has been overrun</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DR: Data Ready Set when a complete incoming character has been received and transferred into the Receive Buffer Register or the FIFO. In non-FIFO mode, DR is cleared when the Receive buffer is read. In FIFO mode, DR is cleared if the FIFO is empty (last character has been read from UARTRBR) or the FIFO is reset with UARTFCR[RESETRF].  -->
            <field>
              <name>DR</name>
              <description>Data Ready\nSet when a complete incoming character has been received and transferred into the Receive Buffer Register or the FIFO. In non-FIFO mode, DR is cleared when the Receive buffer is read. In FIFO mode, DR is cleared if the FIFO is empty (last character has been read from UARTRBR) or the FIFO is reset with UARTFCR[RESETRF].\n</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_DATA_RECEVIED</name>
                  <description>No data has been received</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA_RECEVIED</name>
                  <description>Data is available in UARTRBR or the FIFO</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- UARTISR: UART Infrared Selection Register -->
        <register>
          <name>UARTISR</name>
          <displayName>UARTISR</displayName>
          <description>UART Infrared Selection Register</description>
          <addressOffset>0x00000020</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- RXPL: Receive Data Polarity -->
            <field>
              <name>RXPL</name>
              <description>Receive Data Polarity</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>REV_POSITIVE_ZERO</name>
                  <description>SIR decoder takes positive pulses as zeros</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REV_NEGATIVE_ZERO</name>
                  <description>SIR decoder takes negative pulses as zeros</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TXPL: Transmit Data Polarity -->
            <field>
              <name>TXPL</name>
              <description>Transmit Data Polarity</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SEND_POSITIVE_ZERO</name>
                  <description>SIR encoder generates a positive pulse for a data bit of zero</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SEND_NEGATIVE_ZERO</name>
                  <description>SIR encoder generates a negative pulse for a data bit of zero</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- XMODE: Transmit Pulse Width Select When XMODE is clear, the UART 16x clock is used to clock the lrDA Transmit and Receive logic. When XMDOE is set, Receive decoder operaton does not change, and the Transmit encoder generates 1.6 ms pulses (that are 3/16 of a bit time at 115.2 kbps) instead of pulses 3/16 of a bit time wide. Spintrol recommends setting XMDOE. -->
            <field>
              <name>XMODE</name>
              <description>Transmit Pulse Width Select\nWhen XMODE is clear, the UART 16x clock is used to clock the lrDA Transmit and Receive logic. When XMDOE is set, Receive decoder operaton does not change, and the Transmit encoder generates 1.6 ms pulses (that are 3/16 of a bit time at 115.2 kbps) instead of pulses 3/16 of a bit time wide. Spintrol recommends setting XMDOE.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WIDTH_3OVER16</name>
                  <description>Transmit pulse width is 3/16 of a bit time wide</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WIDTH_1DOT6_MS</name>
                  <description>Transmit pulse width is 1.6ms</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RCVEIR: Receiver SIR Enable When RCVEIR is set, the signal from the RXD pin is processed by lrDA decoder before it is fed to the UART. IF RCVEIR is clear, than all clocking to the lrDA decoder is blocked and the RXD pin is fed directly to the UART. -->
            <field>
              <name>RCVEIR</name>
              <description>Receiver SIR Enable\nWhen RCVEIR is set, the signal from the RXD pin is processed by lrDA decoder before it is fed to the UART. IF RCVEIR is clear, than all clocking to the lrDA decoder is blocked and the RXD pin is fed directly to the UART.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UART</name>
                  <description>Receiver is in UART mode</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INFRARED</name>
                  <description>Receiver is in infrared mode</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- XMITIR: Transmitter SIR Enable When XMITIR is set, the normal TXD output from the UART is processed by the lrDA encoder before it is fed to the device pin. If XMITIR is clear, all clocking to the lrDA encoder is blocked and the UART&apos;s TXD signal is connected directly to the device pin. -->
            <field>
              <name>XMITIR</name>
              <description>Transmitter SIR Enable\nWhen XMITIR is set, the normal TXD output from the UART is processed by the lrDA encoder before it is fed to the device pin. If XMITIR is clear, all clocking to the lrDA encoder is blocked and the UART&apos;s TXD signal is connected directly to the device pin.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TXD_BY_IRDA</name>
                  <description>TXD output from the UART is processed by the lrDA encoder </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TXD_DIRECT</name>
                  <description>TXD signal is connected directly </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- UARTFOR: UART Receive FIFO Occupancy Register -->
        <register>
          <name>UARTFOR</name>
          <displayName>UARTFOR</displayName>
          <description>UART Receive FIFO Occupancy Register</description>
          <addressOffset>0x00000024</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- BYTECNT: Number of bytes (0-63) remaining in the Receive FIFO -->
            <field>
              <name>BYTECNT</name>
              <description>Number of bytes (0-63) remaining in the Receive FIFO</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- UARTABR: UART Auto-Baud Control Register -->
        <register>
          <name>UARTABR</name>
          <displayName>UARTABR</displayName>
          <description>UART Auto-Baud Control Register</description>
          <addressOffset>0x00000028</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- ABT: Method to calculate baud rates -->
            <field>
              <name>ABT</name>
              <description>Method to calculate baud rates</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FORMULA</name>
                  <description>Formula used to calculate baud rates, allowing all possible baud rates to be chosen by UART as shown in this chapter</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TABLE</name>
                  <description>Table used to calculate baud rates, which limits UART to choosing common baud rates</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ABUP: Method to program Divisor Latch registers  -->
            <field>
              <name>ABUP</name>
              <description>Method to program Divisor Latch registers\n</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SOFTWARE_PROG_DIVISOR</name>
                  <description>Software Programs Divisor Latch registers</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART_PROG_DIVISOR</name>
                  <description>UART Programs Divisor Latch registers</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ABLIE: Auto-baud-lock interrupt enable -->
            <field>
              <name>ABLIE</name>
              <description>Auto-baud-lock interrupt enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Auto-baud-lock interrupt disabled (Source UARTIIR[ABL])</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Auto-baud-lock interrupt enabled (Source UARTIIR[ABL])</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ABE: Auto-baud detection enable -->
            <field>
              <name>ABE</name>
              <description>Auto-baud detection enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Auto-baud disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Auto-baud enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- UARTACR: UART Auto-Baud Count Register -->
        <register>
          <name>UARTACR</name>
          <displayName>UARTACR</displayName>
          <description>UART Auto-Baud Count Register</description>
          <addressOffset>0x0000002C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CNTVAL: Number of UART clock cycles within a start-bit pulse -->
            <field>
              <name>CNTVAL</name>
              <description>Number of UART clock cycles within a start-bit pulse</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>SSP</name>
      <description>NOEN</description>
      <groupName>SSP</groupName>
      <baseAddress>0x40005000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x3C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
         <name>SSP</name>
         <description>SSP       </description>
         <value>2</value>
      </interrupt>
      <registers>

        <!-- SSPCTL0: SSP Control Register 0 -->
        <register>
          <name>SSPCTL0</name>
          <displayName>SSPCTL0</displayName>
          <description>SSP Control Register 0</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- MODE: Mode -->
            <field>
              <name>MODE</name>
              <description>Mode</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI</name>
                  <description>Normal SSP mode</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_NETWORK</name>
                  <description>Network mode</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FPACKEN: FIFO Packing Enable -->
            <field>
              <name>FPACKEN</name>
              <description>FIFO Packing Enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_PACK_DISABLE</name>
                  <description>FIFO packing mode disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_PACK_ENABLE</name>
                  <description>FIFO packing mode enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRMRATE: Frame Rate Divider Control Value of 0x0-0x7 specifies the number of time slots per frame when in network mode (the actual number of time slots is this field +1, so 1 to 8 time slots can be specified). -->
            <field>
              <name>FRMRATE</name>
              <description>Frame Rate Divider Control\nValue of 0x0-0x7 specifies the number of time slots per frame when in network mode (the actual number of time slots is this field +1, so 1 to 8 time slots can be specified).</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1_SLOT_PER_FRAME</name>
                  <description>1 slot per frame</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2_SLOT_PER_FRAME</name>
                  <description>2 slot per frame</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3_SLOT_PER_FRAME</name>
                  <description>3 slot per frame</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4_SLOT_PER_FRAME</name>
                  <description>4 slot per frame</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>5_SLOT_PER_FRAME</name>
                  <description>5 slot per frame</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>6_SLOT_PER_FRAME</name>
                  <description>6 slot per frame</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>7_SLOT_PER_FRAME</name>
                  <description>7 slot per frame</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>8_SLOT_PER_FRAME</name>
                  <description>8 slot per frame</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TFINTMSK: Transmit FIFO Underflow Interrupt Mask -->
            <field>
              <name>TFINTMSK</name>
              <description>Transmit FIFO Underflow Interrupt Mask</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TXFIFO_UNDERFLOW_INT_UNMASK</name>
                  <description>TFUDF events generate an SSP interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TXFIFO_UNDERFLOW_INT_MASK</name>
                  <description>TFUDF events do NOT generate an SSP interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFINTMSK: Receive FIFO Overflow Interrupt Mask -->
            <field>
              <name>RFINTMSK</name>
              <description>Receive FIFO Overflow Interrupt Mask</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RXFIFO_OVERFLOW_INT_UNMASK</name>
                  <description>RFOVF events generate an SSP interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RXFIFO_OVERFLOW_INT_MASK</name>
                  <description>RFOVF events do NOT generate an SSP interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ESIZESEL: Extended Data Size Select -->
            <field>
              <name>ESIZESEL</name>
              <description>Extended Data Size Select</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>A 0 is pre-appended to the SIZESEL value to set the SIZESEL range from 1 to 16 bits</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>A 1 is pre-appended to the SIZESEL value to set the SIZESEL range from 17 to 32 bits</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN: Synchronous Serial Port Enable -->
            <field>
              <name>EN</name>
              <description>Synchronous Serial Port Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>SSP port is disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>SSP port is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRMSEL: Frame Format This field must be written with 0x3 = to select the PSP format. -->
            <field>
              <name>FRMSEL</name>
              <description>Frame Format\nThis field must be written with 0x3 = to select the PSP format.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI_MOTOROLA</name>
                  <description>Motorola Serial Peripheral Interface (SPI)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SSP_TI</name>
                  <description>Texas Instruments Synchronous Serial Protocol (SSP)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PSP</name>
                  <description>Programmable Serial Protocol (PSP)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SIZESEL: Data Size Select ESIZESEL  SIZESEL  Data Size 1         0000     17-bit data 1         0001     18-bit data 1         0010     19-bit data 1         0011     20-bit data 1         0100     21-bit data 1         0101     22-bit data 1         0110     23-bit data 1         0111     24-bit data 1         1000     25-bit data 1         1001     26-bit data 1         1010     27-bit data 1         1011     28-bit data 1         1100     29-bit data 1         1101     30-bit data 1         1110     31-bit data 1         1111     32-bit data ESIZESEL  SIZESEL  Data Size 0         0000     1-bit data 0         0001     2-bit data 0         0010     3-bit data 0         0011     4-bit data 0         0100     5-bit data 0         0101     6-bit data 0         0110     7-bit data 0         0111     8-bit data 0         1000     9-bit data 0         1001     10-bit data 0         1010     11-bit data 0         1011     12-bit data 0         1100     13-bit data 0         1101     14-bit data 0         1110     15-bit data 0         1111     16-bit data -->
            <field>
              <name>SIZESEL</name>
              <description>Data Size Select\nESIZESEL  SIZESEL  Data Size\n1         0000     17-bit data\n1         0001     18-bit data\n1         0010     19-bit data\n1         0011     20-bit data\n1         0100     21-bit data\n1         0101     22-bit data\n1         0110     23-bit data\n1         0111     24-bit data\n1         1000     25-bit data\n1         1001     26-bit data\n1         1010     27-bit data\n1         1011     28-bit data\n1         1100     29-bit data\n1         1101     30-bit data\n1         1110     31-bit data\n1         1111     32-bit data\nESIZESEL  SIZESEL  Data Size\n0         0000     1-bit data\n0         0001     2-bit data\n0         0010     3-bit data\n0         0011     4-bit data\n0         0100     5-bit data\n0         0101     6-bit data\n0         0110     7-bit data\n0         0111     8-bit data\n0         1000     9-bit data\n0         1001     10-bit data\n0         1010     11-bit data\n0         1011     12-bit data\n0         1100     13-bit data\n0         1101     14-bit data\n0         1110     15-bit data\n0         1111     16-bit data</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FRAME_1_OR_17BIT</name>
                  <description>FRAME_1_OR_17BIT</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_2_OR_18BIT</name>
                  <description>FRAME_2_OR_18BIT</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_3_OR_19BIT</name>
                  <description>FRAME_3_OR_19BIT</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_4_OR_20BIT</name>
                  <description>FRAME_4_OR_20BIT</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_5_OR_21BIT</name>
                  <description>FRAME_5_OR_21BIT</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_6_OR_22BIT</name>
                  <description>FRAME_6_OR_22BIT</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_7_OR_23BIT</name>
                  <description>FRAME_7_OR_23BIT</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_8_OR_24BIT</name>
                  <description>FRAME_8_OR_24BIT</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_9_OR_25BIT</name>
                  <description>FRAME_9_OR_25BIT</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_10_OR_26BIT</name>
                  <description>FRAME_10_OR_26BIT</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_11_OR_27BIT</name>
                  <description>FRAME_11_OR_27BIT</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_12_OR_28BIT</name>
                  <description>FRAME_12_OR_28BIT</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_13_OR_29BIT</name>
                  <description>FRAME_13_OR_29BIT</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_14_OR_30BIT</name>
                  <description>FRAME_14_OR_30BIT</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_15_OR_31BIT</name>
                  <description>FRAME_15_OR_31BIT</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_16_OR_32BIT</name>
                  <description>FRAME_16_OR_32BIT</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- SSPCTL1: SSP Control Register 1 -->
        <register>
          <name>SSPCTL1</name>
          <displayName>SSPCTL1</displayName>
          <description>SSP Control Register 1</description>
          <addressOffset>0x00000004</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- TXTRITIME: TXD Tri-stated Enable On Last Phase -->
            <field>
              <name>TXTRITIME</name>
              <description>TXD Tri-stated Enable On Last Phase</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_TRISTATE_MODE_0</name>
                  <description>SSP_TXD is tri-stated 1/2 clock cycle after the beginning of the LSB</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_TRISTATE_MODE_1</name>
                  <description>SSP_TXD output signal is tri-stated on the clock edge that ends the LSB</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TXTRIEN: TXD Tri-Stated Enable -->
            <field>
              <name>TXTRIEN</name>
              <description>TXD Tri-Stated Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_TRISTATE_DISABLE</name>
                  <description>SSP_TXD output signal is not tri-stated</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_TRISTATE_ENALBLE</name>
                  <description>SSP_TXD is tri-stated when not transmitting data</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- BITCNTERRIE: Enable Bit Count Error Interrupt -->
            <field>
              <name>BITCNTERRIE</name>
              <description>Enable Bit Count Error Interrupt</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BCE_INT_DISABLE</name>
                  <description>Interrupt due to a bit count error is disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCE_INT_ENABLE</name>
                  <description>Interrupt due to a bit count error is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLVCLKSEL: Slave Clock Free Running -->
            <field>
              <name>SLVCLKSEL</name>
              <description>Slave Clock Free Running</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SLAVE_INTERNAL_SCLK</name>
                  <description>Clock input to SSP_CLK is not active when SSPCTL1_CLKDIR is set to 1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SLAVE_EXTENAL_SCLK</name>
                  <description>Clock input to SSP_CLK is active when SSPCTL1_CLKDIR is set to 1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLKDIR: SSP Serial Bit Rate Clock (SSP_CLK) Direction -->
            <field>
              <name>CLKDIR</name>
              <description>SSP Serial Bit Rate Clock (SSP_CLK) Direction</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MASTER_MODE</name>
                  <description>Master mode, SSP port drives SSP_CLK</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SLAVE_MODE</name>
                  <description>Slave mode, SSP port receives SSP_CLK</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRMDIR: SSP Frame (SSP_FRM) Direction -->
            <field>
              <name>FRMDIR</name>
              <description>SSP Frame (SSP_FRM) Direction</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MASTER_MODE</name>
                  <description>Master mode, SSP port drives SSP_FRM</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SLAVE_MODE</name>
                  <description>Slave mode, SSP port receives SSP_FRM</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXONLY: Receive Without Transmit -->
            <field>
              <name>RXONLY</name>
              <description>Receive Without Transmit</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TXRX_MODE</name>
                  <description>Transmit/Receive mode</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_MODE</name>
                  <description>Receive without Transmit mode</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXTOIE: Receiver Time-out Interrupt Enable -->
            <field>
              <name>RXTOIE</name>
              <description>Receiver Time-out Interrupt Enable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_TIMEOUT_INT_DISABLE</name>
                  <description>Receiver time-out interrupt is disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_TIMEOUT_INT_ENABLE</name>
                  <description>Receiver time-out interrupt is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRMINV: Invert Frame Signal -->
            <field>
              <name>FRMINV</name>
              <description>Invert Frame Signal</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FRM_NOT_INVERT</name>
                  <description>SSP_FRM polarity is determined by the PSP polarity bits</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRM_INVERT</name>
                  <description>SSP_FRM is inverted from normal-SSP_FRM (as defined by the PSP polarity bits). (Works in all frame formats: SPI, SSP, and PSP)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- STRF: Select FIFO For EFWR Select FIFO For EFWR (Test Mode Bit). Only when EFWR = 1. -->
            <field>
              <name>STRF</name>
              <description>Select FIFO For EFWR\nSelect FIFO For EFWR (Test Mode Bit). Only when EFWR = 1.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SEL_TXFIFO</name>
                  <description>TXFIFO is selected for both writes and reads through the SSP Data Register</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SEL_RXFIFO</name>
                  <description>RXFIFO is selected for both writes and reads through the SSP Data Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EFWR: Enable FIFO Write/read Enable FIFO Write/read (Test Mode Bit) -->
            <field>
              <name>EFWR</name>
              <description>Enable FIFO Write/read\nEnable FIFO Write/read (Test Mode Bit)</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_TEST_DISABLED</name>
                  <description>FIFO write/read special function is disabled (normal SSP operational mode)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_TEST_ENABLED</name>
                  <description>FIFO write/read special function is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFTH: RXFIFO Trigger Threshold Sets threshold level at which RXFIFO asserts interrupt. Level should be set to the preferred threshold value minus 1. -->
            <field>
              <name>RFTH</name>
              <description>RXFIFO Trigger Threshold\nSets threshold level at which RXFIFO asserts interrupt. Level should be set to the preferred threshold value minus 1.</description>
              <bitRange>[13:10]</bitRange>
              <access>read-write</access>
            </field>

            <!-- TFTH: TXFIFO Trigger Threshold Sets threshold level at which TXFIFO asserts interrupt. Level should be set to the preferred threshold value minus 1. -->
            <field>
              <name>TFTH</name>
              <description>TXFIFO Trigger Threshold\nSets threshold level at which TXFIFO asserts interrupt. Level should be set to the preferred threshold value minus 1.</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>

            <!-- CLKPHS: Motorola SPI SSP_CLK phase setting -->
            <field>
              <name>CLKPHS</name>
              <description>Motorola SPI SSP_CLK phase setting</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SAMPLE_ON_1st_CLK_EDGE</name>
                  <description>SSP_CLK is inactive until one cycle after the start of a frame and active until 1/2 cycle before the end of a frame</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SAMPLE_ON_2nd_CLK_EDGE</name>
                  <description>SSP_CLK is inactive until 1/2 cycle after the start of a frame and active until one cycle</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLKPOL: Motorola SPI SSP_CLK Polarity Setting -->
            <field>
              <name>CLKPOL</name>
              <description>Motorola SPI SSP_CLK Polarity Setting</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLK_IDLE_LOW</name>
                  <description>The inactive or idle state of SSP_CLK is low</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK_IDLE_HIGH</name>
                  <description>The inactive or idle state of SSP_CLK is high</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- LOOP: Loopback Mode Loopback Mode (Test Mode Bit) -->
            <field>
              <name>LOOP</name>
              <description>Loopback Mode\nLoopback Mode (Test Mode Bit)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Normal serial port operation is enabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Output of TX serial shifter is internally connected to input of RX serial shifter</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TFIE: Transmit FIFO Interrupt Enable -->
            <field>
              <name>TFIE</name>
              <description>Transmit FIFO Interrupt Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TXFIFO_INT_DISABLE</name>
                  <description>TXFIFO threshold-level-reached interrupt is disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TXFIFO_INT_ENABLE</name>
                  <description>TXFIFO threshold-level-reached interrupt is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIE: Receive FIFO Interrupt Enable -->
            <field>
              <name>RFIE</name>
              <description>Receive FIFO Interrupt Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RXFIFO_INT_DISABLE</name>
                  <description>RXFIFO threshold-level-reached interrupt is disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RXFIFO_INT_ENABLE</name>
                  <description>RXFIFO threshold-level-reached interrupt is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- SSPSTS: SSP Status Register -->
        <register>
          <name>SSPSTS</name>
          <displayName>SSPSTS</displayName>
          <description>SSP Status Register</description>
          <addressOffset>0x00000008</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000F004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- RFODDSTS: RX FIFO Odd Sample Status Note: that this bit needs to be looked at only when FIFO Packing is enabled (&amp;lt;FIFO Packing Enable&amp;gt; field in SSP Control Register 0 is set). Otherwise this bit is zero. When SSP port is in Packed mode, and the CPU is used to read the RXFIFO, CPU should make sure that &amp;lt;Receive FIFO Not Empty&amp;gt;=1 AND this field=0 before it attempts to read the RXFIFO. -->
            <field>
              <name>RFODDSTS</name>
              <description>RX FIFO Odd Sample Status\nNote: that this bit needs to be looked at only when FIFO Packing is enabled (&amp;lt;FIFO Packing Enable&amp;gt; field in SSP Control Register 0 is set). Otherwise this bit is zero.\nWhen SSP port is in Packed mode, and the CPU is used to read the RXFIFO, CPU should make sure that &amp;lt;Receive FIFO Not Empty&amp;gt;=1 AND this field=0 before it attempts to read the RXFIFO.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>2_SAMPLE_IN_RXFIFO</name>
                  <description>RXFIFO entry has 2 samples</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1_SAMPLE_IN_RXFIFO</name>
                  <description>RXFIFO entry has 1 sample</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TFODDSTS: TX FIFO Odd Sample Status When SSP port is in packed mode, the number of samples in the TX FIFO is: (&amp;lt;Transmit FIFO Level&amp;gt;*2 + this field), when &amp;lt;Transmit FIFO Not Full&amp;gt;=1; 32, when &amp;lt;Transmit FIFO Not Full&amp;gt;=0.  The TX FIFO cannot accept new data when &amp;lt;Transmit FIFO Not Full&amp;gt;=1 and &amp;lt;Transmit FIFO Level&amp;gt;=15 and this field=1. (The TX FIFO has 31 samples).  Note: that this bit needs to be read only when FIFO Packing is enabled (&amp;lt;FIFO Packing Enable&amp;gt; in the SSP Control Register 0 set). Otherwise this bit is zero. -->
            <field>
              <name>TFODDSTS</name>
              <description>TX FIFO Odd Sample Status\nWhen SSP port is in packed mode, the number of samples in the TX FIFO is:\n(&amp;lt;Transmit FIFO Level&amp;gt;*2 + this field), when &amp;lt;Transmit FIFO Not Full&amp;gt;=1;\n32, when &amp;lt;Transmit FIFO Not Full&amp;gt;=0.\n\nThe TX FIFO cannot accept new data when &amp;lt;Transmit FIFO Not Full&amp;gt;=1 and &amp;lt;Transmit FIFO Level&amp;gt;=15 and this field=1. (The TX FIFO has 31 samples).\n\nNote: that this bit needs to be read only when FIFO Packing is enabled (&amp;lt;FIFO Packing Enable&amp;gt; in the SSP Control Register 0 set). Otherwise this bit is zero.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>EVEN_SAMPLE_IN_TXFIFO</name>
                  <description>TXFIFO entry has an even number of samples</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ODD_SAMPLE_IN_TXFIFO</name>
                  <description>TXFIFO entry has an even number of samples</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- BITCNTERR: Bit Count Error -->
            <field>
              <name>BITCNTERR</name>
              <description>Bit Count Error</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BCE_NOT_OCCUR</name>
                  <description>The SSP port has not experienced a bit count error</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCE_OCCUR</name>
                  <description>The SSP_FRM signal was asserted when the bit counter was not zero</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLVCLKSTS: Slave Clock Status -->
            <field>
              <name>SLVCLKSTS</name>
              <description>Slave Clock Status</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SLAVE_PORT_READY</name>
                  <description>The SSP port is ready for slave clock operations</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SLAVE_PORT_BUSY</name>
                  <description>The SSP port is currently busy synchronizing slave mode signals</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TFUDF: Transmit FIFO Underflow -->
            <field>
              <name>TFUDF</name>
              <description>Transmit FIFO Underflow</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TXFIFO_UNDERFLOW_NOT_OCCUR</name>
                  <description>The TXFIFO has not experienced an underflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TXFIFO_UNDERFLOW_OCCUR</name>
                  <description>A read from the TXFIFO was attempted when the TXFIFO was empty, causes an interrupt if it is enabled (&amp;lt;Transmit FIFO Underrun Interrupt Mask&amp;gt; in the SSP Control Register 0 is 0).</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXTOINT: Receiver Time-out Interrupt -->
            <field>
              <name>RXTOINT</name>
              <description>Receiver Time-out Interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_TIMEOUT_NOT_OCCUR</name>
                  <description>No receiver time-out is pending</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_TIMEOUT_OCCUR</name>
                  <description>Receiver time-out pending, causes an interrupt request</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFLVL: Receive FIFO Level Number of entries minus one in RXFIFO.  Note: When the value 0xF is read, the RXFIFO is either empty or full, and software should read the &amp;lt;Receive FIFO Not Empty&amp;gt; field. -->
            <field>
              <name>RFLVL</name>
              <description>Receive FIFO Level\nNumber of entries minus one in RXFIFO.\n\nNote: When the value 0xF is read, the RXFIFO is either empty or full, and software should read the &amp;lt;Receive FIFO Not Empty&amp;gt; field.</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>

            <!-- TFLVL: Transmit FIFO Level Number of entries in TXFIFO.  Note: When the value 0x0 is read, the TXFIFO is either empty or full, and software should read the &amp;lt;Transmit FIFO Not Full&amp;gt; field. -->
            <field>
              <name>TFLVL</name>
              <description>Transmit FIFO Level\nNumber of entries in TXFIFO.\n\nNote: When the value 0x0 is read, the TXFIFO is either empty or full, and software should read the &amp;lt;Transmit FIFO Not Full&amp;gt; field.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>

            <!-- RFOVF: Receive FIFO Overflow -->
            <field>
              <name>RFOVF</name>
              <description>Receive FIFO Overflow</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RXFIFO_OVERFLOW_NOT_OCCUR</name>
                  <description>Receive FIFO Overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RXFIFO_OVERFLOW_OCCUR</name>
                  <description>Attempted data write to full RXFIFO, causes an interrupt request</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFS: Receive FIFO Service Request -->
            <field>
              <name>RFS</name>
              <description>Receive FIFO Service Request</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RXFIFO_EVENT_NOT_OCCUR</name>
                  <description>RXFIFO level is at or below RFT threshold (RFT), or SSP port is disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RXFIFO_EVENT_OCCUR</name>
                  <description>RXFIFO level exceeds RFT threshold (RFT), causes an interrupt request</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TFS: Transmit FIFO Service Request -->
            <field>
              <name>TFS</name>
              <description>Transmit FIFO Service Request</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TXFIFO_EVENT_NOT_OCCUR</name>
                  <description>TXFIFO level exceeds the TFT threshold (TFT + 1), or SSP port disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TXFIFO_EVENT_OCCUR</name>
                  <description>TXFIFO level is at or below TFT threshold (TFT + 1), causes an interrupt request</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- BUSY: SSP Busy -->
            <field>
              <name>BUSY</name>
              <description>SSP Busy</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PORT_IDLE</name>
                  <description>SSP port is idle or disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PORT_BUSY</name>
                  <description>SSP port is currently transmitting or receiving framed data</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RNE: Receive FIFO Not Empty -->
            <field>
              <name>RNE</name>
              <description>Receive FIFO Not Empty</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RXFIFO_EMPTY</name>
                  <description>RXFIFO is empty</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RXFIFO_NOT_EMPYT</name>
                  <description>RXFIFO is not empty</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TNF: Transmit FIFO Not Full -->
            <field>
              <name>TNF</name>
              <description>Transmit FIFO Not Full</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TXFIFO_FULL</name>
                  <description>TXFIFO is full</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TXFIFO_NOT_FULL</name>
                  <description>TXFIFO is not full</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- SSPFRC: SSP Interrupt Test Register -->
        <register>
          <name>SSPFRC</name>
          <displayName>SSPFRC</displayName>
          <description>SSP Interrupt Test Register</description>
          <addressOffset>0x0000000C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- RFOVF: Test RXFIFO Overrun -->
            <field>
              <name>RFOVF</name>
              <description>Test RXFIFO Overrun</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No RXFIFO overflow service request</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_RX_OVERFLOW_EVENT</name>
                  <description>Generates a non-maskable RXFIFO overflow interrupt request</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFREQ: Test RXFIFO Service Request -->
            <field>
              <name>RFREQ</name>
              <description>Test RXFIFO Service Request</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No RXFIFO-service request</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_RXFIFO_REQUEST_EVENT</name>
                  <description>Generates a non-maskable RXFIFO-service interrupt request</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TFREQ: Test TXFIFO Service Request -->
            <field>
              <name>TFREQ</name>
              <description>Test TXFIFO Service Request</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No TXFIFO-service request</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_TXFIFO_REQUEST_EVENT</name>
                  <description>Generates a non-maskable TXFIFO-service interrupt request</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- SSPDATA: SSP Data Register -->
        <register>
          <name>SSPDATA</name>
          <displayName>SSPDATA</displayName>
          <description>SSP Data Register</description>
          <addressOffset>0x00000010</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: DATA value Data to be written to the TXFIFO or read from the RXFIFO -->
            <field>
              <name>VAL</name>
              <description>DATA value\nData to be written to the TXFIFO or read from the RXFIFO</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- SSPTO: SSP Time Out Register -->
        <register>
          <name>SSPTO</name>
          <displayName>SSPTO</displayName>
          <description>SSP Time Out Register</description>
          <addressOffset>0x00000028</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Timeout Value Define the time-out interval by 2^VAL-1. -->
            <field>
              <name>VAL</name>
              <description>Timeout Value\nDefine the time-out interval by 2^VAL-1.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- SSPPSP: SSP Programmable Serial Protocol Register -->
        <register>
          <name>SSPPSP</name>
          <displayName>SSPPSP</displayName>
          <description>SSP Programmable Serial Protocol Register</description>
          <addressOffset>0x0000002C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EDMYSTOP: Extended Dummy Stop The most-significant bits of the dummy stop delay Note: Do not use in PSP Network mode. -->
            <field>
              <name>EDMYSTOP</name>
              <description>Extended Dummy Stop\nThe most-significant bits of the dummy stop delay\nNote: Do not use in PSP Network mode.</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>EXTENDED_DUMMY_STOP_LEN_0</name>
                  <description>EXTENDED DUMMY STOP 0 </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EXTENDED_DUMMY_STOP_LEN_1</name>
                  <description>EXTENDED DUMMY STOP 1</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EXTENDED_DUMMY_STOP_LEN_2</name>
                  <description>EXTENDED DUMMY STOP 2</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EXTENDED_DUMMY_STOP_LEN_3</name>
                  <description>EXTENDED DUMMY STOP 3</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EXTENDED_DUMMY_STOP_LEN_4</name>
                  <description>EXTENDED DUMMY STOP 4</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EXTENDED_DUMMY_STOP_LEN_5</name>
                  <description>EXTENDED DUMMY STOP 5</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EXTENDED_DUMMY_STOP_LEN_6</name>
                  <description>EXTENDED DUMMY STOP 6</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EXTENDED_DUMMY_STOP_LEN_7</name>
                  <description>EXTENDED DUMMY STOP 7</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EDMYSTART: Extended Dummy Start The most-significant bits of the dummy start delay Note: Do not use in PSP Network mode. -->
            <field>
              <name>EDMYSTART</name>
              <description>Extended Dummy Start\nThe most-significant bits of the dummy start delay\nNote: Do not use in PSP Network mode.</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>EXTENDED_DUMMY_START_LEN_0</name>
                  <description>EXTENDED DUMMY START 0 </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EXTENDED_DUMMY_START_LEN_1</name>
                  <description>EXTENDED DUMMY START 1</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EXTENDED_DUMMY_START_LEN_2</name>
                  <description>EXTENDED DUMMY START 2</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EXTENDED_DUMMY_START_LEN_3</name>
                  <description>EXTENDED DUMMY START 3</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRMSYNC: Frame Sync Relative Timing Bit -->
            <field>
              <name>FRMSYNC</name>
              <description>Frame Sync Relative Timing Bit</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FRAME_INTERVAL_DMYSTOP</name>
                  <description>Next frame is asserted after the end of the DMYSTOP timing</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRAME_NO_INTERVAL_DMYSTOP</name>
                  <description>Next frame is asserted with the LSB of the previous frame</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DMYSTOP: Dummy Stop The least-significant bits of the dummy stop delay Programmed value of &amp;lt;Extended Dummy Stop&amp;gt; + this field specifies the number (0-31) of active clocks (SSP_CLK) that follow the end of the transmitted data. Note: Do not use in PSP Network mode. -->
            <field>
              <name>DMYSTOP</name>
              <description>Dummy Stop\nThe least-significant bits of the dummy stop delay Programmed value of &amp;lt;Extended Dummy Stop&amp;gt; + this field specifies the number (0-31) of active clocks (SSP_CLK) that follow the end of the transmitted data.\nNote: Do not use in PSP Network mode.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DUMMY_STOP_LEN_0</name>
                  <description>Dummy Stop length 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DUMMY_STOP_LEN_1</name>
                  <description>Dummy Stop length 1</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DUMMY_STOP_LEN_2</name>
                  <description>Dummy Stop length 2</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DUMMY_STOP_LEN_3</name>
                  <description>Dummy Stop length 3</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRMWIDTH: Serial Frame Width Least-significant bits of the serial frame width Programmed value of this field specifies the frame width from 0x00 (one SSP_CLK cycle) to 0x3F (63 SSP_CLK cycles). -->
            <field>
              <name>FRMWIDTH</name>
              <description>Serial Frame Width\nLeast-significant bits of the serial frame width Programmed value of this field specifies the frame width from 0x00 (one SSP_CLK cycle) to 0x3F (63 SSP_CLK cycles).</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>

            <!-- FRMDLY: Serial Frame Delay Programmed value specifies the number (0 -127) of active one-half clocks (SSP_CLK) asserted from the mostsignificant bit of SSP_TXD (output) or SSP_RXD (input) being driven to SSP_FRM. Note: Do not use in PSP Network mode. -->
            <field>
              <name>FRMDLY</name>
              <description>Serial Frame Delay\nProgrammed value specifies the number (0 -127) of active one-half clocks (SSP_CLK) asserted from the mostsignificant bit of SSP_TXD (output) or SSP_RXD (input) being driven to SSP_FRM.\nNote: Do not use in PSP Network mode.</description>
              <bitRange>[15:9]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DMYSTART: Dummy Start Least-significant bits of the dummy start delay Programmed value of this field specifies the number (0-15) of active clocks (SSP_CLKs) between the end of start delay and when the most-significant bit of transmit/receive data is driven. Note: Do not use in PSP Network mode. -->
            <field>
              <name>DMYSTART</name>
              <description>Dummy Start\nLeast-significant bits of the dummy start delay\nProgrammed value of this field specifies the number (0-15) of active clocks (SSP_CLKs) between the end of start delay and when the most-significant bit of transmit/receive data is driven.\nNote: Do not use in PSP Network mode.</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DUMMY_START_DELAY_LEN_0</name>
                  <description>Dummy start by 0 clock</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DUMMY_START_DELAY_LEN_1</name>
                  <description>Dummy start by 1 clock</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DUMMY_START_DELAY_LEN_2</name>
                  <description>Dummy start by 2 clock</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DUMMY_START_DELAY_LEN_3</name>
                  <description>Dummy start by 3 clock</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- STARTDLY: Start Delay Programmed value specifies the number (0-7) of non-active clocks (SSP_CLK) that define the duration of idle time Note: Do not use in PSP Network mode. -->
            <field>
              <name>STARTDLY</name>
              <description>Start Delay\nProgrammed value specifies the number (0-7) of non-active clocks (SSP_CLK) that define the duration of idle time\nNote: Do not use in PSP Network mode.</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>START_DELAY_LEN_0</name>
                  <description>Start Delay by 0 clock</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>START_DELAY_LEN_1</name>
                  <description>Start Delay by 1 clock</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>START_DELAY_LEN_2</name>
                  <description>Start Delay by 2 clock</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>START_DELAY_LEN_3</name>
                  <description>Start Delay by 3 clock</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>START_DELAY_LEN_4</name>
                  <description>Start Delay by 4 clock</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>START_DELAY_LEN_5</name>
                  <description>Start Delay by 5 clock</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>START_DELAY_LEN_6</name>
                  <description>Start Delay by 6 clock</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>START_DELAY_LEN_7</name>
                  <description>Start Delay by 7 clock</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ETDS: End Of Transfer Data State -->
            <field>
              <name>ETDS</name>
              <description>End Of Transfer Data State</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRANSFER_NOT_END</name>
                  <description>Transfer pending</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRANSFER_END</name>
                  <description>Transfer ended</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRMPOL: Serial Frame Polarity -->
            <field>
              <name>FRMPOL</name>
              <description>Serial Frame Polarity</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FRM_ACTIVE_LOW</name>
                  <description>SSP_FRM is active low (0b0)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FRM_ACTIVE_HIGH</name>
                  <description>SSP_FRM is active high (0b1)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLKMODE: Serial Bit-rate Clock Mode -->
            <field>
              <name>CLKMODE</name>
              <description>Serial Bit-rate Clock Mode</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BIT_RATE_CLK_MODE_0</name>
                  <description>Data Driven (Falling), Data Sampled (Rising), Idle State (Low)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BIT_RATE_CLK_MODE_1</name>
                  <description>Data Driven (Rising), Data Sampled (Falling), Idle State (Low)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BIT_RATE_CLK_MODE_2</name>
                  <description>Data Driven (Rising), Data Sampled (Falling), Idle State (High)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BIT_RATE_CLK_MODE_3</name>
                  <description>Data Driven (Falling), Data Sampled (Rising), Idle State (High)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- SSPTXSLOTEN: SSP TX Time Slot Active Register -->
        <register>
          <name>SSPTXSLOTEN</name>
          <displayName>SSPTXSLOTEN</displayName>
          <description>SSP TX Time Slot Active Register</description>
          <addressOffset>0x00000030</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SLOT7: Tx Time Slot 7 Active -->
            <field>
              <name>SLOT7</name>
              <description>Tx Time Slot 7 Active</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_DISABLE</name>
                  <description>SSP port does NOT transmit data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_ENABLE</name>
                  <description>SSP port does NOT transmit data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOT6: Tx Time Slot 6 Active -->
            <field>
              <name>SLOT6</name>
              <description>Tx Time Slot 6 Active</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_DISABLE</name>
                  <description>SSP port does transmit data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_ENABLE</name>
                  <description>SSP port does NOT transmit data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOT5: Tx Time Slot 5 Active -->
            <field>
              <name>SLOT5</name>
              <description>Tx Time Slot 5 Active</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_DISABLE</name>
                  <description>SSP port does NOT transmit data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_ENABLE</name>
                  <description>SSP port does NOT transmit data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOT4: Tx Time Slot 4 Active -->
            <field>
              <name>SLOT4</name>
              <description>Tx Time Slot 4 Active</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_DISABLE</name>
                  <description>SSP port does NOT transmit data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_ENABLE</name>
                  <description>SSP port does transmit data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOT3: Tx Time Slot 3 Active -->
            <field>
              <name>SLOT3</name>
              <description>Tx Time Slot 3 Active</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_DISABLE</name>
                  <description>SSP port does NOT transmit data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_ENABLE</name>
                  <description>SSP port does NOT transmit data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOT2: Tx Time Slot 2 Active -->
            <field>
              <name>SLOT2</name>
              <description>Tx Time Slot 2 Active</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_DISABLE</name>
                  <description>SSP port does transmit data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_ENABLE</name>
                  <description>SSP port does NOT transmit data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOT1: Tx Time Slot 1 Active -->
            <field>
              <name>SLOT1</name>
              <description>Tx Time Slot 1 Active</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_DISABLE</name>
                  <description>SSP port does NOT transmit data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_ENABLE</name>
                  <description>SSP port does NOT transmit data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOT0: Tx Time Slot 0 Active -->
            <field>
              <name>SLOT0</name>
              <description>Tx Time Slot 0 Active</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_DISABLE</name>
                  <description>SSP port does NOT transmit data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_ENABLE</name>
                  <description>SSP port does transmit data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- SSPRXSLOTEN: SSP RX Time Slot Active Register -->
        <register>
          <name>SSPRXSLOTEN</name>
          <displayName>SSPRXSLOTEN</displayName>
          <description>SSP RX Time Slot Active Register</description>
          <addressOffset>0x00000034</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SLOT7: Rx Time Slot 7 Active -->
            <field>
              <name>SLOT7</name>
              <description>Rx Time Slot 7 Active</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DISABLE</name>
                  <description>SSP port does not receive data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_ENABLE</name>
                  <description>SSP port receives data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOT6: Rx Time Slot 6 Active -->
            <field>
              <name>SLOT6</name>
              <description>Rx Time Slot 6 Active</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DISABLE</name>
                  <description>SSP port does not receive data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_ENABLE</name>
                  <description>SSP port receives data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOT5: Rx Time Slot 5 Active -->
            <field>
              <name>SLOT5</name>
              <description>Rx Time Slot 5 Active</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DISABLE</name>
                  <description>SSP port does not receive data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_ENABLE</name>
                  <description>SSP port receives data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOT4: Rx Time Slot 4 Active -->
            <field>
              <name>SLOT4</name>
              <description>Rx Time Slot 4 Active</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DISABLE</name>
                  <description>SSP port does not receive data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_ENABLE</name>
                  <description>SSP port receives data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOT3: Rx Time Slot 3 Active -->
            <field>
              <name>SLOT3</name>
              <description>Rx Time Slot 3 Active</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DISABLE</name>
                  <description>SSP port does not receive data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_ENABLE</name>
                  <description>SSP port receives data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOT2: Rx Time Slot 2 Active -->
            <field>
              <name>SLOT2</name>
              <description>Rx Time Slot 2 Active</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DISABLE</name>
                  <description>SSP port does not receive data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_ENABLE</name>
                  <description>SSP port receives data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOT1: Rx Time Slot 1 Active -->
            <field>
              <name>SLOT1</name>
              <description>Rx Time Slot 1 Active</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DISABLE</name>
                  <description>SSP port does not receive data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_ENABLE</name>
                  <description>SSP port receives data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOT0: Rx Time Slot 0 Active -->
            <field>
              <name>SLOT0</name>
              <description>Rx Time Slot 0 Active</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DISABLE</name>
                  <description>SSP port does not receive data in this time slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_ENABLE</name>
                  <description>SSP port receives data in this time slot</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- SSPNETSTS: SSP Time Slot Status Register -->
        <register>
          <name>SSPNETSTS</name>
          <displayName>SSPNETSTS</displayName>
          <description>SSP Time Slot Status Register</description>
          <addressOffset>0x00000038</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- BUSY: Network Mode Busy -->
            <field>
              <name>BUSY</name>
              <description>Network Mode Busy</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NETWORK_IDLE</name>
                  <description>SSP port is in network mode and no frame is currently active</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NETWORK_BUSY</name>
                  <description>SSP port is in network mode and a frame is currently active</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLOTACT: Time Slot Status Value indicates which time slot is currently active. Because of synchronization between the SSP port&apos;s SSP_CLK domain and an internal bus clock domain, the value in this field becomes stable between the beginning and end of the currently active time slot. -->
            <field>
              <name>SLOTACT</name>
              <description>Time Slot Status\nValue indicates which time slot is currently active. Because of synchronization between the SSP port&apos;s SSP_CLK domain and an internal bus clock domain, the value in this field becomes stable between the beginning and end of the currently active time slot.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1_ACTIVE_SLOT</name>
                  <description>1 Active slot</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2_ACTIVE_SLOT</name>
                  <description>2 Active slots</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3_ACTIVE_SLOT</name>
                  <description>3 Active slots</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4_ACTIVE_SLOT</name>
                  <description>4 Active slots</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>5_ACTIVE_SLOT</name>
                  <description>5 Active slots</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>6_ACTIVE_SLOT</name>
                  <description>6 Active slots</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>7_ACTIVE_SLOT</name>
                  <description>7 Active slots</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>8_ACTIVE_SLOT</name>
                  <description>8 Active slots</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>I2C</name>
      <description>NONE</description>
      <groupName>I2C</groupName>
      <baseAddress>0x40006000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0xA0</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
         <name>I2C</name>
         <description>I2C       </description>
         <value>1</value>
      </interrupt>
      <registers>

        <!-- I2CCTL: I2C Control Register -->
        <register>
          <name>I2CCTL</name>
          <displayName>I2CCTL</displayName>
          <description>I2C Control Register</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000007F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SLVDIS: This bit controls whether I2C has its slave disabled, which means once the presetn signal is applied, then this bit takes on the value of the configuration parameter SLAVE_DISABLE. You have the choice of having the slave enabled or disabled after reset is applied, which means software does not have to configure the slave. By default, the slave is always enabled (in reset state as well). If you need to disable it after reset, set this bit to 1. If this bit is set (slave is disabled), I2C functions only as a master and does not perform any action that requires a slave. NOTE: Software should ensure that if this bit is written with 0, then bit 0 should also be written with a 0. -->
            <field>
              <name>SLVDIS</name>
              <description>This bit controls whether I2C has its slave disabled, which means once the presetn signal is applied, then this bit takes on the value of the configuration parameter SLAVE_DISABLE. You have the choice of having the slave enabled or disabled after reset is applied, which means software does not have to configure the slave. By default, the slave is always enabled (in reset state as well). If you need to disable it after reset, set this bit to 1. If this bit is set (slave is disabled), I2C functions only as a master and does not perform any action that requires a slave.\nNOTE: Software should ensure that if this bit is written with 0, then bit 0 should also be written with a 0.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SLAVE_ENABLE</name>
                  <description>Slave is enabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SLAVE_DISABLE</name>
                  <description>Slave is disabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RESTARTEN: Determines whether RESTART conditions may be sent when acting as a master. Some older slaves do not support handling RESTART conditions; however, RESTART conditions are used in several I2C operations. When RESTART is disabled, the master is prohibited from performing the following functions: - Change direction within a transfer (split) - Send a START BYTE - High-speed mode operation - Combined format transfers in 7-bit addressing modes - Read operation with a 10-bit address - Send multiple bytes per transfer By replacing RESTART condition followed by a STOP and a subsequent START condition, split operations are broken down into multiple I2C transfers. If the above operations are performed, it will result in setting bit 6 (TXABRT) of the I2CRAWIF register. -->
            <field>
              <name>RESTARTEN</name>
              <description>Determines whether RESTART conditions may be sent when acting as a master. Some older slaves do not support handling RESTART conditions; however, RESTART conditions are used in several I2C operations.\nWhen RESTART is disabled, the master is prohibited from performing the following functions:\n- Change direction within a transfer (split)\n- Send a START BYTE\n- High-speed mode operation\n- Combined format transfers in 7-bit addressing modes\n- Read operation with a 10-bit address\n- Send multiple bytes per transfer By replacing RESTART condition followed by a STOP and a subsequent START condition, split operations are broken down into multiple I2C transfers. If the above operations are performed, it will result in setting bit 6 (TXABRT) of the I2CRAWIF register.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ADDRSTS: The function of this bit is handled by bit 12 of I2CMASTERADDR register, and becomes a read-only copy. -->
            <field>
              <name>ADDRSTS</name>
              <description>The function of this bit is handled by bit 12 of I2CMASTERADDR register, and becomes a read-only copy.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>7BIT_ADDR</name>
                  <description>7-bit addressing</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>10BIT_ADDR</name>
                  <description>10-bit addressing</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLVADDR10B: When acting as a slave, this bit controls whether the I2C responds to 7- or 10-bit addresses. 0x0: 7-bit addressing. The I2C ignores transactions that involve 10-bit addressing; for 7-bit addressing, only the lower 7 bits of the I2CSLVADDR register are compared. 0x1: 10-bit addressing. The I2C responds to only 10-bit addressing transfers that match the full 10 bits of the I2CSLVADDR register. -->
            <field>
              <name>SLVADDR10B</name>
              <description>When acting as a slave, this bit controls whether the I2C responds to 7- or 10-bit addresses.\n0x0: 7-bit addressing. The I2C ignores transactions that involve 10-bit addressing; for 7-bit addressing, only the lower 7 bits of the I2CSLVADDR register are compared.\n0x1: 10-bit addressing. The I2C responds to only 10-bit addressing transfers that match the full 10 bits of the I2CSLVADDR register.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>7BIT_ADDR</name>
                  <description>7-bit addressing</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>10BIT_ADDR</name>
                  <description>10-bit addressing</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SPEED: These bits control at which speed the I2C operates; its setting is relevant only if one is operating the I2C in master mode. Hardware protects against illegal values being programmed by software. This register should be programmed only with a value in the range of 1 to 3; otherwise, hardware updates this register with the value of 3. -->
            <field>
              <name>SPEED</name>
              <description>These bits control at which speed the I2C operates; its setting is relevant only if one is operating the I2C in master mode. Hardware protects against illegal values being programmed by software. This register should be programmed only with a value in the range of 1 to 3; otherwise, hardware updates this register with the value of 3.</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>100K_BPS</name>
                  <description>Standard mode (100 kbit/s)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>400K_BPS</name>
                  <description>Fast mode (400 kbit/s)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3400K_BPS</name>
                  <description>High speed mode (3.4 Mbit/s)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- MASTER: This bit controls whether the I2C master is enabled. NOTE: Software should ensure that if this bit is written with &apos;1&apos; then bit 6 should also be written with a &apos;1&apos;. -->
            <field>
              <name>MASTER</name>
              <description>This bit controls whether the I2C master is enabled.\nNOTE: Software should ensure that if this bit is written with &apos;1&apos; then bit 6 should also be written with a &apos;1&apos;.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Master disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Master enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CMASTERADDR: I2C Master Address Register -->
        <register>
          <name>I2CMASTERADDR</name>
          <displayName>I2CMASTERADDR</displayName>
          <description>I2C Master Address Register</description>
          <addressOffset>0x00000004</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00001055</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- MASTERADDR10B: This bit controls whether the I2C starts its transfers in 7- or 10-bit addressing mode when acting as a master. -->
            <field>
              <name>MASTERADDR10B</name>
              <description>This bit controls whether the I2C starts its transfers in 7- or 10-bit addressing mode when acting as a master.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>7BIT_ADDR</name>
                  <description>7-bit addressing</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>10BIT_ADDR</name>
                  <description>10-bit addressing</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SPECIAL: This bit indicates whether software performs a General Call or START BYTE command. -->
            <field>
              <name>SPECIAL</name>
              <description>This bit indicates whether software performs a General Call or START BYTE command.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Ignore bit 10 GCORSTART and use I2CMASTERADDR normally</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Perform special I2C command as specified in GCORSTART bit</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GCORSTART: If bit 11 (SPECIAL) is set to 1, then this bit indicates whether a General Call or START byte command is to be performed by the I2C. -->
            <field>
              <name>GCORSTART</name>
              <description>If bit 11 (SPECIAL) is set to 1, then this bit indicates whether a General Call or START byte command is to be performed by the I2C.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GENERAL_CALL</name>
                  <description>General Call Address after issuing a General Call, only writes may be performed. Attempting to issue a read command results in setting bit 6 (TXABRT) of the I2CRAWIF register. The I2C remains in General Call mode until the SPECIAL bit value (bit 11) is cleared</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>START</name>
                  <description>START BYTE</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TARADDR: This is the target address for any master transaction. When transmitting a General Call, these bits are ignored. To generate a START BYTE, the CPU needs to write only once into these bits. If the I2CMASTERADDR and I2CSLVADDR are the same, loopback exists but the FIFOs are shared between master and slave, so full loopback is not feasible. Only one direction loopback mode is supported (simplex), not duplex. A master cannot transmit to itself; it can transmit to only a slave. -->
            <field>
              <name>TARADDR</name>
              <description>This is the target address for any master transaction. When transmitting a General Call, these bits are ignored. To generate a START BYTE, the CPU needs to write only once into these bits.\nIf the I2CMASTERADDR and I2CSLVADDR are the same, loopback exists but the FIFOs are shared between master and slave, so full loopback is not feasible. Only one direction loopback mode is supported (simplex), not duplex. A master cannot transmit to itself; it can transmit to only a slave.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- I2CSLVADDR: I2C Slave Address Register -->
        <register>
          <name>I2CSLVADDR</name>
          <displayName>I2CSLVADDR</displayName>
          <description>I2C Slave Address Register</description>
          <addressOffset>0x00000008</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000055</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: The VAL holds the slave address when the I2C is operating as a slave. For 7-bit addressing, only VAL[6:0] is used. This register can be written only when the I2C interface is disabled, which corresponds to the I2CENABLE register being set to 0. Writes at other times have no effect. Note: The default values cannot be any of the reserved address locations: that is, 0x00 to 0x07, or 0x78 to 0x7f. The correct operation of the device is not guaranteed if you program the I2CSLVADDR or I2CMASTERADDR to a reserved value. -->
            <field>
              <name>VAL</name>
              <description>The VAL holds the slave address when the I2C is operating as a slave. For 7-bit addressing, only VAL[6:0] is used. This register can be written only when the I2C interface is disabled, which corresponds to the I2CENABLE register being set to 0. Writes at other times have no effect.\nNote: The default values cannot be any of the reserved address locations: that is, 0x00 to 0x07, or 0x78 to 0x7f. The correct operation of the device is not guaranteed if you program the I2CSLVADDR or I2CMASTERADDR to a reserved value.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- I2CHSMADDR: I2C High Speed Master Mode Code Address Register -->
        <register>
          <name>I2CHSMADDR</name>
          <displayName>I2CHSMADDR</displayName>
          <description>I2C High Speed Master Mode Code Address Register</description>
          <addressOffset>0x0000000C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: This bit field holds the value of the I2C HS mode master code. HS-mode master codes are reserved 8-bit codes (00001xxx) that are not used for slave addressing or other purposes. Each master has its unique master code; up to eight high-speed mode masters can be present on the same I2C bus system. Valid values are from 0 to 7. This register can be written only when the I2C interface is disabled, which corresponds to the I2CENABLE register being set to 0. Writes at other times have no effect. -->
            <field>
              <name>VAL</name>
              <description>This bit field holds the value of the I2C HS mode master code. HS-mode master codes are reserved 8-bit codes (00001xxx) that are not used for slave addressing or other purposes. Each master has its unique master code; up to eight high-speed mode masters can be present on the same I2C bus system. Valid values are from 0 to 7. This register can be written only when the I2C interface is disabled, which corresponds to the I2CENABLE register being set to 0. Writes at other times have no effect.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- I2CDATACMD: I2C Data Buffer and Command Register -->
        <register>
          <name>I2CDATACMD</name>
          <displayName>I2CDATACMD</displayName>
          <description>I2C Data Buffer and Command Register</description>
          <addressOffset>0x00000010</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CMD: This bit controls whether a read or a write is performed. This bit does not control the direction when the I2C acts as a slave. It controls only the direction when it acts as a master. When a command is entered in the TX FIFO, this bit distinguishes the write and read commands. In slavereceiver mode, this bit is a &apos;don&apos;t care&apos; because writes to this register are not required. In slave-transmitter mode, a &apos;0&apos; indicates that CPU data is to be transmitted and as DATA or I2CDATACMD[7:0]. When programming this bit, you should remember the following: attempting to perform a  read operation after a General Call command has been sent results in a TXABRT interrupt (bit 6 of the I2CRAWIF register), unless bit 11 (SPECIAL) in the I2CMASTERADDR register has been cleared. If a &apos;1&apos; is written to this bit after receiving a RDREQ interrupt, then a TXABRT interrupt occurs. NOTE: It is possible that while attempting a master I2C read transfer on I2C, a RDREQ interrupt may have occurred simultaneously due to a remote I2C master addressing I2C. In this type of scenario, I2C ignores the I2CDATACMD write, generates a TXABRT interrupt, and waits to service the RDREQ interrupt. -->
            <field>
              <name>CMD</name>
              <description>This bit controls whether a read or a write is performed.\nThis bit does not control the direction when the I2C acts as a slave. It controls only the direction when it acts as a master.\nWhen a command is entered in the TX FIFO, this bit distinguishes the write and read commands. In slavereceiver mode, this bit is a &apos;don&apos;t care&apos; because writes to this register are not required. In slave-transmitter mode, a &apos;0&apos; indicates that CPU data is to be transmitted and as DATA or I2CDATACMD[7:0]. When programming this bit, you should remember the following: attempting to perform a  read operation after a General Call command has been sent results in a TXABRT interrupt (bit 6 of the I2CRAWIF register), unless bit 11 (SPECIAL) in the I2CMASTERADDR register has been cleared. If a &apos;1&apos; is written to this bit after receiving a RDREQ interrupt, then a TXABRT interrupt occurs.\nNOTE: It is possible that while attempting a master I2C read transfer on I2C, a RDREQ interrupt may have occurred simultaneously due to a remote I2C master addressing I2C. In this type of scenario, I2C ignores the I2CDATACMD write, generates a TXABRT interrupt, and waits to service the RDREQ interrupt.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>WRITE</name>
                  <description>Write</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READ</name>
                  <description>Read</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DATA: This register contains the data to be transmitted or received on the I2C bus. If you are writing to this register and want to perform a read, bits 7:0 (DATA) are ignored by the I2C. However, when you read this register, these bits return the value of data received on the I2C interface. -->
            <field>
              <name>DATA</name>
              <description>This register contains the data to be transmitted or received on the I2C bus. If you are writing to this register and want to perform a read, bits 7:0 (DATA) are ignored by the I2C. However, when you read this register, these bits return the value of data received on the I2C interface.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- I2CSSHCNT: Standard Speed I2C Clock SCL High Count Register -->
        <register>
          <name>I2CSSHCNT</name>
          <displayName>I2CSSHCNT</displayName>
          <description>Standard Speed I2C Clock SCL High Count Register</description>
          <addressOffset>0x00000014</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000001F4</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. This register sets the SCL clock high-period count for standard speed. These values apply only if the ic_clk is set to the given frequency in the table. This register can be written only when the I2C interface is disabled which corresponds to the I2CENABLE register being set to 0. Writes at other times have no effect. The minimum valid value is 6; hardware prevents values less than this being written, and if attempted results in 6 being set. For designs with APB_DATA_WIDTH = 8, the order of programming is important to ensure the correct operation of the I2C. The lower byte must be programmed first. Then the upper byte is programmed. -->
            <field>
              <name>VAL</name>
              <description>This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. This register sets the SCL clock high-period count for standard speed. These values apply only if the ic_clk is set to the given frequency in the table. This register can be written only when the I2C interface is disabled which corresponds to the I2CENABLE register being set to 0. Writes at other times have no effect. The minimum valid value is 6; hardware prevents values less than this being written, and if attempted results in 6 being set. For designs with APB_DATA_WIDTH = 8, the order of programming is important to ensure the correct operation of the I2C. The lower byte must be programmed first. Then the upper byte is programmed.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- I2CSSLCNT: Standard Speed I2C Clock SCL Low Count Register -->
        <register>
          <name>I2CSSLCNT</name>
          <displayName>I2CSSLCNT</displayName>
          <description>Standard Speed I2C Clock SCL Low Count Register</description>
          <addressOffset>0x00000018</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000024C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. This register sets the SCL clock low period count for standard speed. The table below shows some sample I2CSSLCNT calculations. These values apply only if the ic_clk is set to the given frequency in the table. This register can be written only when the I2C interface is disabled which corresponds to the I2CENABLE register being set to 0. Writes at other times have no effect. The minimum valid value is 8; hardware prevents values less than this being written, and if attempted, results in 8 being set. For designs with APB_DATA_WIDTH = 8, the order of programming is important to ensure the correct operation of I2C. The lower byte must be programmed first, and then the upper byte is programmed. -->
            <field>
              <name>VAL</name>
              <description>This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. This register sets the SCL clock low period count for standard speed. The table below shows some sample I2CSSLCNT calculations. These values apply only if the ic_clk is set to the given frequency in the table. This register can be written only when the I2C interface is disabled which corresponds to the I2CENABLE register being set to 0. Writes at other times have no effect. The minimum valid value is 8; hardware prevents values less than this being written, and if attempted, results in 8 being set. For designs with APB_DATA_WIDTH = 8, the order of programming is important to ensure the correct operation of I2C. The lower byte must be programmed first, and then the upper byte is programmed.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- I2CFSHCNT: Fast Speed I2C Clock SCL High Count Register -->
        <register>
          <name>I2CFSHCNT</name>
          <displayName>I2CFSHCNT</displayName>
          <description>Fast Speed I2C Clock SCL High Count Register</description>
          <addressOffset>0x0000001C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000004B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. This register sets the SCL clock high-period count for fast speed. It is used in high-speed mode to send the Master Code and START BYTE or General CALL. This register can be written only when the I2C interface is disabled, which corresponds to the I2CENABLE register being set to 0. Writes at other times have no effect. The minimum valid value is 6; hardware prevents values less than this being written, and if attempted results in 6 being set. For designs with APB_DATA_WIDTH == 8 the order of programming is important to ensure the correct operation of the I2C. The lower byte must be programmed first. Then the upper byte is programmed. -->
            <field>
              <name>VAL</name>
              <description>This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. This register sets the SCL clock high-period count for fast speed. It is used in high-speed mode to send the Master Code and START BYTE or General CALL. This register can be written only when the I2C interface is disabled, which corresponds to the I2CENABLE register being set to 0. Writes at other times have no effect. The minimum valid value is 6; hardware prevents values less than this being written, and if attempted results in 6 being set. For designs with APB_DATA_WIDTH == 8 the order of programming is important to ensure the correct operation of the I2C. The lower byte must be programmed first. Then the upper byte is programmed.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- I2CFSLCNT: Fast Speed I2C Clock SCL Low Count Register -->
        <register>
          <name>I2CFSLCNT</name>
          <displayName>I2CFSLCNT</displayName>
          <description>Fast Speed I2C Clock SCL Low Count Register</description>
          <addressOffset>0x00000020</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000A3</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. This register sets the SCL clock low period count for fast speed. It is used in high-speed mode to send the Master Code and START BYTE or General CALL. This register can be written only when the I2C interface is disabled, which corresponds to theI2CENABLE register being set to 0. Writes at other times have no effect. The minimum valid value is 8; hardware prevents values less than this being written, and if attempted results in 8 being set. For designs with APB_DATA_WIDTH = 8 the order of programming is important to ensure the correct operation of the I2C. The lower byte must be programmed first. Then the upper byte is programmed. If the value is less than 8 then the count value gets changed to 8. -->
            <field>
              <name>VAL</name>
              <description>This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. This register sets the SCL clock low period count for fast speed. It is used in high-speed mode to send the Master Code and START BYTE or General CALL. This register can be written only when the I2C interface is disabled, which corresponds to theI2CENABLE register being set to 0. Writes at other times have no effect. The minimum valid value is 8; hardware prevents values less than this being written, and if attempted results in 8 being set. For designs with APB_DATA_WIDTH = 8 the order of programming is important to ensure the correct operation of the I2C. The lower byte must be programmed first. Then the upper byte is programmed. If the value is less than 8 then the count value gets changed to 8.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- I2CHSHCNT: High Speed I2C Clock SCL High Count Register -->
        <register>
          <name>I2CHSHCNT</name>
          <displayName>I2CHSHCNT</displayName>
          <description>High Speed I2C Clock SCL High Count Register</description>
          <addressOffset>0x00000024</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000008</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. This register sets the SCL clock high period count for high speed. The SCL High time depends on the loading of the bus. For 100pF loading, the SCL High time is 60ns; for 400pF loading, the SCL High time is 120ns. This register can be written only when the I2C interface is disabled, which corresponds to the I2CENABLE register being set to 0. Writes at other times have no effect. The minimum valid value is 6; hardware prevents values less than this being written, and if attempted results in 6 being set. For designs with APB_DATA_WIDTH = 8 the order of programming is important to ensure the correct operation of the I2C. The lower byte must be programmed first. Then the upper byte is programmed. -->
            <field>
              <name>VAL</name>
              <description>This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. This register sets the SCL clock high period count for high speed. The SCL High time depends on the loading of the bus. For 100pF loading, the SCL High time is 60ns; for 400pF loading, the SCL High time is 120ns. This register can be written only when the I2C interface is disabled, which corresponds to the I2CENABLE register being set to 0. Writes at other times have no effect. The minimum valid value is 6; hardware prevents values less than this being written, and if attempted results in 6 being set. For designs with APB_DATA_WIDTH = 8 the order of programming is important to ensure the correct operation of the I2C. The lower byte must be programmed first. Then the upper byte is programmed.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- I2CHSLCNT: High Speed I2C Clock SCL Low Count Register -->
        <register>
          <name>I2CHSLCNT</name>
          <displayName>I2CHSLCNT</displayName>
          <description>High Speed I2C Clock SCL Low Count Register</description>
          <addressOffset>0x00000028</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000014</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. This register sets the SCL clock low period count for high speed. The SCL low time depends on the loading of the bus. For 100pF loading, the SCL low time is 160ns; for 400pF loading, the SCL low time is 320ns. This register can be written only when the I2C interface is disabled, which corresponds to the I2CENABLE register being set to 0. Writes at other times have no effect. The minimum valid value is 8; hardware prevents values less than this being written, and if attempted results in 8 being set. For designs with APB_DATA_WIDTH == 8 the order of programming is important to ensure the correct operation of the I2C. The lower byte must be programmed first. Then the upper byte is programmed. If the value is less than 8 then the count value gets changed to 8. -->
            <field>
              <name>VAL</name>
              <description>This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. This register sets the SCL clock low period count for high speed. The SCL low time depends on the loading of the bus. For 100pF loading, the SCL low time is 160ns; for 400pF loading, the SCL low time is 320ns. This register can be written only when the I2C interface is disabled, which corresponds to the I2CENABLE register being set to 0. Writes at other times have no effect. The minimum valid value is 8; hardware prevents values less than this being written, and if attempted results in 8 being set. For designs with APB_DATA_WIDTH == 8 the order of programming is important to ensure the correct operation of the I2C. The lower byte must be programmed first. Then the upper byte is programmed. If the value is less than 8 then the count value gets changed to 8.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- I2CIF: I2C Interrupt Flag Register -->
        <register>
          <name>I2CIF</name>
          <displayName>I2CIF</displayName>
          <description>I2C Interrupt Flag Register</description>
          <addressOffset>0x0000002C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- GENCALL: Set only when a General Call address is received and it is acknowledged. It stays set until it is cleared either by disabling I2C or when the CPU reads bit 0 of the I2CGENCALLCLR register. I2C stores the received data in the Rx buffer. -->
            <field>
              <name>GENCALL</name>
              <description>Set only when a General Call address is received and it is acknowledged. It stays set until it is cleared either by disabling I2C or when the CPU reads bit 0 of the I2CGENCALLCLR register. I2C stores the received data in the Rx buffer.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- STARTDET: Indicates whether a START or RESTART condition has occurred on the I2C interface regardless of whether I2C is operating in slave or master mode. -->
            <field>
              <name>STARTDET</name>
              <description>Indicates whether a START or RESTART condition has occurred on the I2C interface regardless of whether I2C is operating in slave or master mode.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- STOPDET: Indicates whether a STOP condition has occurred on the I2C interface regardless of whether I2C is operating in slave or master mode. -->
            <field>
              <name>STOPDET</name>
              <description>Indicates whether a STOP condition has occurred on the I2C interface regardless of whether I2C is operating in slave or master mode.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ACT: This bit captures I2C activity and stays set until it is cleared. There are four ways to clear it: - Disabling the I2C - Reading the I2CACTCLR register - Reading the I2CINTCLR register - System reset Once this bit is set, it stays set unless one of the four methods is used to clear it. Even if the I2C module is idle, this bit remains set until cleared, indicating that there was activity on the bus. -->
            <field>
              <name>ACT</name>
              <description>This bit captures I2C activity and stays set until it is cleared.\nThere are four ways to clear it:\n- Disabling the I2C\n- Reading the I2CACTCLR register\n- Reading the I2CINTCLR register\n- System reset\nOnce this bit is set, it stays set unless one of the four methods is used to clear it. Even if the I2C module is idle, this bit remains set until cleared, indicating that there was activity on the bus.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXDONE: When the I2C is acting as a slave-transmitter, this bit is set to 1 if the master does not acknowledge a transmitted byte. This occurs on the last byte of the transmission, indicating that the transmission is done. -->
            <field>
              <name>RXDONE</name>
              <description>When the I2C is acting as a slave-transmitter, this bit is set to 1 if the master does not acknowledge a transmitted byte. This occurs on the last byte of the transmission, indicating that the transmission is done.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TXABRT: This bit indicates if I2C, as an I2C transmitter, is unable to complete the intended actions on the contents of the transmit FIFO. This situation can occur both as an I2C master or an I2C slave, and is referred to as a &apos;transmit abort&apos;. When this bit is set to 1, the I2CTXABRTSRC register indicates the reason why the transmit abort takes places. NOTE: The I2C flushes/resets/empties the TX FIFO whenever this bit is set. The TX FIFO remains in this flushed state until the register I2CTXABRTCLR is read. Once this read is performed, the TX FIFO is then ready to accept more data bytes from the APB interface. -->
            <field>
              <name>TXABRT</name>
              <description>This bit indicates if I2C, as an I2C transmitter, is unable to complete the intended actions on the contents of the transmit FIFO. This situation can occur both as an I2C master or an I2C slave, and is referred to as a &apos;transmit abort&apos;. When this bit is set to 1, the I2CTXABRTSRC register indicates the reason why the transmit abort takes places.\nNOTE: The I2C flushes/resets/empties the TX FIFO whenever this bit is set. The TX FIFO remains in this flushed state until the register I2CTXABRTCLR is read. Once this read is performed, the TX FIFO is then ready to accept more data bytes from the APB interface.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RDREQ: This bit is set to 1 when I2C is acting as a slave and another I2C master is attempting to read data from I2C. The I2C holds the I2C bus in a wait state (SCL=0) until this interrupt is serviced, which means that the slave has been addressed by a remote master that is asking for data to be transferred. The processor must respond to this interrupt and then write the requested data to the I2CDATACMD register. This bit is set to 0 just after the processor reads the I2CRDREQCLR register. -->
            <field>
              <name>RDREQ</name>
              <description>This bit is set to 1 when I2C is acting as a slave and another I2C master is attempting to read data from I2C. The I2C holds the I2C bus in a wait state (SCL=0) until this interrupt is serviced, which means that the slave has been addressed by a remote master that is asking for data to be transferred. The processor must respond to this interrupt and then write the requested data to the I2CDATACMD register. This bit is set to 0 just after the processor reads the I2CRDREQCLR register.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TXEMPTY: This bit is set to 1 when the transmit buffer is at or below the threshold value set in the I2CTXTH register. It is automatically cleared by hardware when the buffer level goes above the threshold. When the I2CENABLE bit 0 is 0, the TX FIFO is flushed and held in reset. There the TX FIFO looks like it has no data within it, so this bit is set to 1, provided there is activity in the master or slave state machines. When there is no longer activity, then with ic_en=0, this bit is set to 0. -->
            <field>
              <name>TXEMPTY</name>
              <description>This bit is set to 1 when the transmit buffer is at or below the threshold value set in the I2CTXTH register. It is automatically cleared by hardware when the buffer level goes above the threshold. When the I2CENABLE bit 0 is 0, the TX FIFO is flushed and held in reset. There the TX FIFO looks like it has no data within it, so this bit is set to 1, provided there is activity in the master or slave state machines. When there is no longer activity, then with ic_en=0, this bit is set to 0.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TXOVF: Set during transmit if the transmit buffer is filled to TX_BUFFER_DEPTH and the processor attempts to issue another I2C command by writing to the I2CDATACMD register. When the module is disabled, this bit keeps its level until the master or slave state machines go into idle, and when ic_en goes to 0, this interrupt is cleared. -->
            <field>
              <name>TXOVF</name>
              <description>Set during transmit if the transmit buffer is filled to TX_BUFFER_DEPTH and the processor attempts to issue another I2C command by writing to the I2CDATACMD register. When the module is disabled, this bit keeps its level until the master or slave state machines go into idle, and when ic_en goes to 0, this interrupt is cleared.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXFULL: Set when the receive buffer reaches or goes above the threshold in the I2CRXTH register. It is automatically cleared by hardware when buffer level goes below the threshold. If the module is disabled (I2CENABLE[0]=0), the RX FIFO is flushed and held in reset; therefore the RX FIFO is not full. So this bit is cleared once the I2CENABLE bit 0 is programmed with a 0, regardless of the activity that continues. -->
            <field>
              <name>RXFULL</name>
              <description>Set when the receive buffer reaches or goes above the threshold in the I2CRXTH register. It is automatically cleared by hardware when buffer level goes below the threshold. If the module is disabled (I2CENABLE[0]=0), the RX FIFO is flushed and held in reset; therefore the RX FIFO is not full. So this bit is cleared once the I2CENABLE bit 0 is programmed with a 0, regardless of the activity that continues.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXOVF: Set if the receive buffer is completely filled to RX_BUFFER_DEPTH and an additional byte is received from an external I2C device. The I2C acknowledges this, but any data bytes received after the FIFO is full are lost. If the module is disabled (I2CENABLE[0]=0), this bit keeps its level until the master or slave state machines go into idle, and when ic_en goes to 0, this interrupt is cleared. -->
            <field>
              <name>RXOVF</name>
              <description>Set if the receive buffer is completely filled to RX_BUFFER_DEPTH and an additional byte is received from an external I2C device. The I2C acknowledges this, but any data bytes received after the FIFO is full are lost. If the module is disabled (I2CENABLE[0]=0), this bit keeps its level until the master or slave state machines go into idle, and when ic_en goes to 0, this interrupt is cleared.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXUDF: Set if the processor attempts to read the receive buffer when it is empty by reading from the I2CDATACMD register. If the module is disabled (I2CENABLE[0]=0), this bit keeps its level until the master or slave state machines go into idle, and when ic_en goes to 0, this interrupt is cleared. -->
            <field>
              <name>RXUDF</name>
              <description>Set if the processor attempts to read the receive buffer when it is empty by reading from the I2CDATACMD register. If the module is disabled (I2CENABLE[0]=0), this bit keeps its level until the master or slave state machines go into idle, and when ic_en goes to 0, this interrupt is cleared.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CIE: I2C Interrupt Enable Register -->
        <register>
          <name>I2CIE</name>
          <displayName>I2CIE</displayName>
          <description>I2C Interrupt Enable Register</description>
          <addressOffset>0x00000030</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000008FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- GENCALL: Enable/disable GENCALL interrupt -->
            <field>
              <name>GENCALL</name>
              <description>Enable/disable GENCALL interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable GENCALL interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable GENCALL interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- STARTDET: Enable/disable STARTDET interrupt -->
            <field>
              <name>STARTDET</name>
              <description>Enable/disable STARTDET interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable STARTDET interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable STARTDET interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- STOPDET: Enable/disable STOPDET interrupt -->
            <field>
              <name>STOPDET</name>
              <description>Enable/disable STOPDET interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable STOPDET interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable STOPDET interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ACT: Enable/disable ACTIVITY interrupt -->
            <field>
              <name>ACT</name>
              <description>Enable/disable ACTIVITY interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ACTIVITY interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ACTIVITY interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXDONE: Enable/disable RXDONE interrupt -->
            <field>
              <name>RXDONE</name>
              <description>Enable/disable RXDONE interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable RXDONE interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable RXDONE interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TXABRT: Enable/disable TXABRT interrupt -->
            <field>
              <name>TXABRT</name>
              <description>Enable/disable TXABRT interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable TXABRT interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable TXABRT interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RDREQ: Enable/disable RDREQ interrupt -->
            <field>
              <name>RDREQ</name>
              <description>Enable/disable RDREQ interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable RDREQ interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable RDREQ interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TXEMPTY: Enable/disable TXEMPTY interrupt -->
            <field>
              <name>TXEMPTY</name>
              <description>Enable/disable TXEMPTY interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable TXEMPTY interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable TXEMPTY interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TXOVF: Enable/disable TXOVF interrupt -->
            <field>
              <name>TXOVF</name>
              <description>Enable/disable TXOVF interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable TXOVF interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable TXOVF interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXFULL: Enable/disable RXFULL interrupt -->
            <field>
              <name>RXFULL</name>
              <description>Enable/disable RXFULL interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable RXFULL interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable RXFULL interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXOVF: Enable/disable RXOVF interrupt -->
            <field>
              <name>RXOVF</name>
              <description>Enable/disable RXOVF interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable RXOVF interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable RXOVF interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXUDF: Enable/disable RXUDF interrupt -->
            <field>
              <name>RXUDF</name>
              <description>Enable/disable RXUDF interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable RXUDF interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable RXUDF interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CRAWIF: I2C Raw Interrupt Flag Register -->
        <register>
          <name>I2CRAWIF</name>
          <displayName>I2CRAWIF</displayName>
          <description>I2C Raw Interrupt Flag Register</description>
          <addressOffset>0x00000034</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- GENCALL: Set only when a General Call address is received and it is acknowledged. It stays set until it is cleared either by disabling I2C or when the CPU reads bit 0 of the I2CGENCALLCLR register. I2C stores the received data in the Rx buffer. -->
            <field>
              <name>GENCALL</name>
              <description>Set only when a General Call address is received and it is acknowledged. It stays set until it is cleared either by disabling I2C or when the CPU reads bit 0 of the I2CGENCALLCLR register. I2C stores the received data in the Rx buffer.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- STARTDET: Indicates whether a START or RESTART condition has occurred on the I2C interface regardless of whether I2C is operating in slave or master mode. -->
            <field>
              <name>STARTDET</name>
              <description>Indicates whether a START or RESTART condition has occurred on the I2C interface regardless of whether I2C is operating in slave or master mode.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- STOPDET: Indicates whether a STOP condition has occurred on the I2C interface regardless of whether I2C is operating in slave or master mode. -->
            <field>
              <name>STOPDET</name>
              <description>Indicates whether a STOP condition has occurred on the I2C interface regardless of whether I2C is operating in slave or master mode.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ACT: This bit captures I2C activity and stays set until it is cleared. There are four ways to clear it: - Disabling the I2C - Reading the I2CACTCLR register - Reading the I2CINTCLR register - System reset Once this bit is set, it stays set unless one of the four methods is used to clear it. Even if the I2C module is idle, this bit remains set until cleared, indicating that there was activity on the bus. -->
            <field>
              <name>ACT</name>
              <description>This bit captures I2C activity and stays set until it is cleared.\nThere are four ways to clear it:\n- Disabling the I2C\n- Reading the I2CACTCLR register\n- Reading the I2CINTCLR register\n- System reset\nOnce this bit is set, it stays set unless one of the four methods is used to clear it. Even if the I2C module is idle, this bit remains set until cleared, indicating that there was activity on the bus.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXDONE: When the I2C is acting as a slave-transmitter, this bit is set to 1 if the master does not acknowledge a transmitted byte. This occurs on the last byte of the transmission, indicating that the transmission is done. -->
            <field>
              <name>RXDONE</name>
              <description>When the I2C is acting as a slave-transmitter, this bit is set to 1 if the master does not acknowledge a transmitted byte. This occurs on the last byte of the transmission, indicating that the transmission is done.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TXABRT: This bit indicates if I2C, as an I2C transmitter, is unable to complete the intended actions on the contents of the transmit FIFO. This situation can occur both as an I2C master or an I2C slave, and is referred to as a &apos;transmit abort&apos;. When this bit is set to 1, the I2CTXABRTSRC register indicates the reason why the transmit abort takes places. NOTE: The I2C flushes/resets/empties the TX FIFO whenever this bit is set. The TX FIFO remains in this flushed state until the register I2CTXABRTCLR is read. Once this read is performed, the TX FIFO is then ready to accept more data bytes from the APB interface. -->
            <field>
              <name>TXABRT</name>
              <description>This bit indicates if I2C, as an I2C transmitter, is unable to complete the intended actions on the contents of the transmit FIFO. This situation can occur both as an I2C master or an I2C slave, and is referred to as a &apos;transmit abort&apos;. When this bit is set to 1, the I2CTXABRTSRC register indicates the reason why the transmit abort takes places.\nNOTE: The I2C flushes/resets/empties the TX FIFO whenever this bit is set. The TX FIFO remains in this flushed state until the register I2CTXABRTCLR is read. Once this read is performed, the TX FIFO is then ready to accept more data bytes from the APB interface.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RDREQ: This bit is set to 1 when I2C is acting as a slave and another I2C master is attempting to read data from I2C. The I2C holds the I2C bus in a wait state (SCL=0) until this interrupt is serviced, which means that the slave has been addressed by a remote master that is asking for data to be transferred. The processor must respond to this interrupt and then write the requested data to the I2CDATACMD register. This bit is set to 0 just after the processor reads the I2CRDREQCLR register. -->
            <field>
              <name>RDREQ</name>
              <description>This bit is set to 1 when I2C is acting as a slave and another I2C master is attempting to read data from I2C. The I2C holds the I2C bus in a wait state (SCL=0) until this interrupt is serviced, which means that the slave has been addressed by a remote master that is asking for data to be transferred. The processor must respond to this interrupt and then write the requested data to the I2CDATACMD register. This bit is set to 0 just after the processor reads the I2CRDREQCLR register.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TXEMPTY: This bit is set to 1 when the transmit buffer is at or below the threshold value set in the I2CTXTH register. It is automatically cleared by hardware when the buffer level goes above the threshold. When the I2CENABLE bit 0 is 0, the TX FIFO is flushed and held in reset. There the TX FIFO looks like it has no data within it, so this bit is set to 1, provided there is activity in the master or slave state machines. When there is no longer activity, then with ic_en=0, this bit is set to 0. -->
            <field>
              <name>TXEMPTY</name>
              <description>This bit is set to 1 when the transmit buffer is at or below the threshold value set in the I2CTXTH register. It is automatically cleared by hardware when the buffer level goes above the threshold. When the I2CENABLE bit 0 is 0, the TX FIFO is flushed and held in reset. There the TX FIFO looks like it has no data within it, so this bit is set to 1, provided there is activity in the master or slave state machines. When there is no longer activity, then with ic_en=0, this bit is set to 0.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TXOVF: Set during transmit if the transmit buffer is filled to TX_BUFFER_DEPTH and the processor attempts to issue another I2C command by writing to the I2CDATACMD register. When the module is disabled, this bit keeps its level until the master or slave state machines go into idle, and when ic_en goes to 0, this interrupt is cleared. -->
            <field>
              <name>TXOVF</name>
              <description>Set during transmit if the transmit buffer is filled to TX_BUFFER_DEPTH and the processor attempts to issue another I2C command by writing to the I2CDATACMD register. When the module is disabled, this bit keeps its level until the master or slave state machines go into idle, and when ic_en goes to 0, this interrupt is cleared.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXFULL: Set when the receive buffer reaches or goes above the threshold value in the I2CRXTH register. It is automatically cleared by hardware when buffer level goes below the threshold. If the module is disabled (I2CENABLE[0]=0), the RX FIFO is flushed and held in reset; therefore the RX FIFO is not full. So this bit is cleared once the I2CENABLE bit 0 is programmed with a 0, regardless of the activity that continues. -->
            <field>
              <name>RXFULL</name>
              <description>Set when the receive buffer reaches or goes above the threshold value in the I2CRXTH register. It is automatically cleared by hardware when buffer level goes below the threshold. If the module is disabled (I2CENABLE[0]=0), the RX FIFO is flushed and held in reset; therefore the RX FIFO is not full. So this bit is cleared once the I2CENABLE bit 0 is programmed with a 0, regardless of the activity that continues.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXOVF: Set if the receive buffer is completely filled to RX_BUFFER_DEPTH and an additional byte is received from an external I2C device. The I2C acknowledges this, but any data bytes received after the FIFO is full are lost. If the module is disabled (I2CENABLE[0]=0), this bit keeps its level until the master or slave state machines go into idle, and when ic_en goes to 0, this interrupt is cleared. -->
            <field>
              <name>RXOVF</name>
              <description>Set if the receive buffer is completely filled to RX_BUFFER_DEPTH and an additional byte is received from an external I2C device. The I2C acknowledges this, but any data bytes received after the FIFO is full are lost. If the module is disabled (I2CENABLE[0]=0), this bit keeps its level until the master or slave state machines go into idle, and when ic_en goes to 0, this interrupt is cleared.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RXUDF: Set if the processor attempts to read the receive buffer when it is empty by reading from the I2CDATACMD register. If the module is disabled (I2CENABLE[0]=0), this bit keeps its level until the master or slave state machines go into idle, and when ic_en goes to 0, this interrupt is cleared. -->
            <field>
              <name>RXUDF</name>
              <description>Set if the processor attempts to read the receive buffer when it is empty by reading from the I2CDATACMD register. If the module is disabled (I2CENABLE[0]=0), this bit keeps its level until the master or slave state machines go into idle, and when ic_en goes to 0, this interrupt is cleared.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CRXTH: I2C Receive FIFO Threshold Register -->
        <register>
          <name>I2CRXTH</name>
          <displayName>I2CRXTH</displayName>
          <description>I2C Receive FIFO Threshold Register</description>
          <addressOffset>0x00000038</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- KEY: Must write 0x0 to this field when write to low LSBs, else LSBs is always 0xF. Always readback 0 -->
            <field>
              <name>KEY</name>
              <description>Must write 0x0 to this field when write to low LSBs, else LSBs is always 0xF.\nAlways readback 0</description>
              <bitRange>[7:4]</bitRange>
              <access>write-only</access>
            </field>

            <!-- VAL: Receive FIFO Threshold Level Controls the level of entries (or above) that triggers the RXFULL interrupt (bit 2 in I2CRAWIF register). The valid range is 0-255, with the additional restriction that hardware does not allow this value to be set to a value larger than the depth of the buffer. If an attempt is made to do that, the actual value set will be the maximum depth of the buffer. A value of 0 sets the threshold for 1 entry, and a value of 255 sets the threshold for 256 entries. -->
            <field>
              <name>VAL</name>
              <description>Receive FIFO Threshold Level\nControls the level of entries (or above) that triggers the RXFULL interrupt (bit 2 in I2CRAWIF register). The valid range is 0-255, with the additional restriction that hardware does not allow this value to be set to a value larger than the depth of the buffer. If an attempt is made to do that, the actual value set will be the maximum depth of the buffer. A value of 0 sets the threshold for 1 entry, and a value of 255 sets the threshold for 256 entries.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- I2CTXTH: I2C Transmit FIFO Threshold Register -->
        <register>
          <name>I2CTXTH</name>
          <displayName>I2CTXTH</displayName>
          <description>I2C Transmit FIFO Threshold Register</description>
          <addressOffset>0x0000003C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- KEY: Must write 0x0 to this field when write to low LSBs, else LSBs is always 0xF. Always readback 0 -->
            <field>
              <name>KEY</name>
              <description>Must write 0x0 to this field when write to low LSBs, else LSBs is always 0xF.\nAlways readback 0</description>
              <bitRange>[7:4]</bitRange>
              <access>write-only</access>
            </field>

            <!-- VAL: Transmit FIFO Threshold Level Controls the level of entries (or below) that trigger the TXEMPTY interrupt (bit 4 in I2CRAWIF register). The valid range is 0-255, with the additional restriction that it may not be set to value larger than the depth of the buffer. If an attempt is made to do that, the actual value set will be the maximum depth of the buffer. A value of 0 sets the threshold for 0 entries, and a value of 255 sets the threshold for 255 entries. -->
            <field>
              <name>VAL</name>
              <description>Transmit FIFO Threshold Level\nControls the level of entries (or below) that trigger the TXEMPTY interrupt (bit 4 in I2CRAWIF register). The valid range is 0-255, with the additional restriction that it may not be set to value larger than the depth of the buffer. If an attempt is made to do that, the actual value set will be the maximum depth of the buffer. A value of 0 sets the threshold for 0 entries, and a value of 255 sets the threshold for 255 entries.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- I2CINTCLR: Clear Combined and Individual Interrupt Register -->
        <register>
          <name>I2CINTCLR</name>
          <displayName>I2CINTCLR</displayName>
          <description>Clear Combined and Individual Interrupt Register</description>
          <addressOffset>0x00000040</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CLR: Read this register to clear the combined interrupt, all individual interrupts, and the I2CTXABRTSRC register. This bit does not clear hardware clearable interrupts but software clearable interrupts. Refer to Bit 9 of the I2CTXABRTSRC register for an exception to clearing TX_ABRT_SOURCE. -->
            <field>
              <name>CLR</name>
              <description>Read this register to clear the combined interrupt, all individual interrupts, and the I2CTXABRTSRC register. This bit does not clear hardware clearable interrupts but software clearable interrupts. Refer to Bit 9 of the I2CTXABRTSRC register for an exception to clearing TX_ABRT_SOURCE.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Read to clear</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CRXUDFCLR: Clear RXUDF Interrupt Register -->
        <register>
          <name>I2CRXUDFCLR</name>
          <displayName>I2CRXUDFCLR</displayName>
          <description>Clear RXUDF Interrupt Register</description>
          <addressOffset>0x00000044</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CLR: Read this register to clear the RXUDF interrupt (bit 0) of the I2CRAWIF register Reset value: 0x0 -->
            <field>
              <name>CLR</name>
              <description>Read this register to clear the RXUDF interrupt (bit 0) of the I2CRAWIF register\nReset value: 0x0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Read to clear</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CRXOVFCLR: Clear RXOVF Interrupt Register -->
        <register>
          <name>I2CRXOVFCLR</name>
          <displayName>I2CRXOVFCLR</displayName>
          <description>Clear RXOVF Interrupt Register</description>
          <addressOffset>0x00000048</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CLR: Read this register to clear the RXOVF interrupt (bit 1) of the I2CRAWIF register -->
            <field>
              <name>CLR</name>
              <description>Read this register to clear the RXOVF interrupt (bit 1) of the I2CRAWIF register</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Read to clear</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CTXOVFCLR: Clear TXOVF Interrupt Register -->
        <register>
          <name>I2CTXOVFCLR</name>
          <displayName>I2CTXOVFCLR</displayName>
          <description>Clear TXOVF Interrupt Register</description>
          <addressOffset>0x0000004C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CLR: Read this register to clear the TXOVF interrupt (bit 3) of the I2CRAWIF register -->
            <field>
              <name>CLR</name>
              <description>Read this register to clear the TXOVF interrupt (bit 3) of the I2CRAWIF register</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Read to clear</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CRDREQCLR: Clear RDREQ Interrupt Register -->
        <register>
          <name>I2CRDREQCLR</name>
          <displayName>I2CRDREQCLR</displayName>
          <description>Clear RDREQ Interrupt Register</description>
          <addressOffset>0x00000050</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CLR: Read this register to clear the RDREQ interrupt (bit 5) of the I2CRAWIF register -->
            <field>
              <name>CLR</name>
              <description>Read this register to clear the RDREQ interrupt (bit 5) of the I2CRAWIF register</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Read to clear</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CTXABRTCLR: Clear TXABRT Interrupt Register -->
        <register>
          <name>I2CTXABRTCLR</name>
          <displayName>I2CTXABRTCLR</displayName>
          <description>Clear TXABRT Interrupt Register</description>
          <addressOffset>0x00000054</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CLR: Read this register to clear the TXABRT interrupt (bit 6) of the I2CRAWIF register, and the I2CTXABRTSRC register. This also releases the TX FIFO from the flushed/reset state, allowing more writes to the TX FIFO. Refer to Bit 9 of the I2CTXABRTSRC register for an exception to clearing TX_ABRT_SOURCE. -->
            <field>
              <name>CLR</name>
              <description>Read this register to clear the TXABRT interrupt (bit 6) of the I2CRAWIF register, and the I2CTXABRTSRC register. This also releases the TX FIFO from the flushed/reset state, allowing more writes to the TX FIFO. Refer to Bit 9 of the I2CTXABRTSRC register for an exception to clearing TX_ABRT_SOURCE.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Read to clear</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CRXDONECLR: Clear RXDONE Interrupt Register -->
        <register>
          <name>I2CRXDONECLR</name>
          <displayName>I2CRXDONECLR</displayName>
          <description>Clear RXDONE Interrupt Register</description>
          <addressOffset>0x00000058</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CLR: Read this register to clear the RXDONE interrupt (bit 7) of the I2CRAWIF register -->
            <field>
              <name>CLR</name>
              <description>Read this register to clear the RXDONE interrupt (bit 7) of the I2CRAWIF register</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Read to clear</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CACTCLR: Clear ACT Interrupt Register -->
        <register>
          <name>I2CACTCLR</name>
          <displayName>I2CACTCLR</displayName>
          <description>Clear ACT Interrupt Register</description>
          <addressOffset>0x0000005C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CLR: Reading this register clears the ACT interrupt if the I2C is not active anymore. If the I2C module is still active on the bus, the ACTIVITY interrupt bit continues to be set. It is automatically cleared by hardware if the module is disabled and if there is no further activity on the bus. The value read from this register to get status of the ACT interrupt (bit 8) of the I2CRAWIF register. -->
            <field>
              <name>CLR</name>
              <description>Reading this register clears the ACT interrupt if the I2C is not active anymore. If the I2C module is still active on the bus, the ACTIVITY interrupt bit continues to be set. It is automatically cleared by hardware if the module is disabled and if there is no further activity on the bus. The value read from this register to get status of the ACT interrupt (bit 8) of the I2CRAWIF register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Read to clear</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CSTOPDETCLR: Clear STOPDET Interrupt Register -->
        <register>
          <name>I2CSTOPDETCLR</name>
          <displayName>I2CSTOPDETCLR</displayName>
          <description>Clear STOPDET Interrupt Register</description>
          <addressOffset>0x00000060</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CLR: Read this register to clear the STOPDET interrupt (bit 9) of the I2CRAWIF register -->
            <field>
              <name>CLR</name>
              <description>Read this register to clear the STOPDET interrupt (bit 9) of the I2CRAWIF register</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Read to clear</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CSTARTDETCLR: Clear STARTDET Interrupt Register -->
        <register>
          <name>I2CSTARTDETCLR</name>
          <displayName>I2CSTARTDETCLR</displayName>
          <description>Clear STARTDET Interrupt Register</description>
          <addressOffset>0x00000064</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CLR: Read this register to clear the STARTDET interrupt (bit 10) of the I2CRAWIF register -->
            <field>
              <name>CLR</name>
              <description>Read this register to clear the STARTDET interrupt (bit 10) of the I2CRAWIF register</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Read to clear</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CGENCALLCLR: Clear GENCALL Interrupt Register -->
        <register>
          <name>I2CGENCALLCLR</name>
          <displayName>I2CGENCALLCLR</displayName>
          <description>Clear GENCALL Interrupt Register</description>
          <addressOffset>0x00000068</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CLR: Read this register to clear the GENCALL interrupt (bit 11) of I2CRAWIF register. -->
            <field>
              <name>CLR</name>
              <description>Read this register to clear the GENCALL interrupt (bit 11) of I2CRAWIF register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Read to clear</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CENABLE: I2C Enable Register -->
        <register>
          <name>I2CENABLE</name>
          <displayName>I2CENABLE</displayName>
          <description>I2C Enable Register</description>
          <addressOffset>0x0000006C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Controls whether the I2C is enabled 0x0: Disables I2C (TX and RX FIFOs are held in an erased state). Software can disable I2C while it is active. However, it is important that care be taken to ensure that i2c is disabled properly. When I2C is disabled, the following occurs: - The TX FIFO and RX FIFO get flushed. - Status bits in the I2CIF register are still active until i2c goes into IDLE state. If the module is transmitting, it stops as well as deletes the contents of the transmit buffer after the current transfer is complete. If the module is receiving, the I2C stops the current transfer at the end of the current byte and does not acknowledge the transfer. In systems with asynchronous pclk and ic_clk when CLK_TYPE parameter set to asynchronous, there is a two ic_clk delay when enabling or disabling the I2C. -->
            <field>
              <name>EN</name>
              <description>Controls whether the I2C is enabled\n0x0: Disables I2C (TX and RX FIFOs are held in an erased state). Software can disable I2C while it is active. However, it is important that care be taken to ensure that i2c is disabled properly. When I2C is disabled, the following occurs:\n- The TX FIFO and RX FIFO get flushed.\n- Status bits in the I2CIF register are still active until i2c goes into IDLE state. If the module is transmitting, it stops as well as deletes the contents of the transmit buffer after the current transfer is complete. If the module is receiving, the I2C stops the current transfer at the end of the current byte and does not acknowledge the transfer. In systems with asynchronous pclk and ic_clk when CLK_TYPE parameter set to asynchronous, there is a two ic_clk delay when enabling or disabling the I2C.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disables I2C (TX and RX FIFOs are held in an erased state)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enables I2C</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CSTS: I2C Status Register -->
        <register>
          <name>I2CSTS</name>
          <displayName>I2CSTS</displayName>
          <description>I2C Status Register</description>
          <addressOffset>0x00000070</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000006</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SACT: Slave FSM Activity Status When the Slave Finite State Machine (FSM) is not in the IDLE state, this bit is set. -->
            <field>
              <name>SACT</name>
              <description>Slave FSM Activity Status\nWhen the Slave Finite State Machine (FSM) is not in the IDLE state, this bit is set.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Slave FSM is in IDLE state so the Slave part of I2C is not Active</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Slave FSM is not in IDLE state so the Slave part of I2C is Active</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- MACT: Master FSM Activity Status When the Master Finite State Machine (FSM) is not in the IDLE state, this bit is set. Note: I2CSTS[0]-that is, ACT bit-is the OR of SACT and MACT bits. -->
            <field>
              <name>MACT</name>
              <description>Master FSM Activity Status\nWhen the Master Finite State Machine (FSM) is not in the IDLE state, this bit is set.\nNote: I2CSTS[0]-that is, ACT bit-is the OR of SACT and MACT bits.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Master FSM is in IDLE state so the Master part of I2C is not Active</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Master FSM is not in IDLE state so the Master part of I2C is Active</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFF: Receive FIFO Completely Full When the receive FIFO is completely full, this bit is set. When the receive FIFO contains one or more empty location, this bit is cleared. -->
            <field>
              <name>RFF</name>
              <description>Receive FIFO Completely Full\nWhen the receive FIFO is completely full, this bit is set.\nWhen the receive FIFO contains one or more empty location, this bit is cleared.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Receive FIFO is not full</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Receive FIFO is full</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFNE: Receive FIFO Not Empty This bit is set when the receive FIFO contains one or more entries; it is cleared when the receive FIFO is empty. -->
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty\nThis bit is set when the receive FIFO contains one or more entries; it is cleared when the receive FIFO is empty.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Receive FIFO is empty</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Receive FIFO is not empty</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TFE: Transmit FIFO Completely Empty When the transmit FIFO is completely empty, this bit is set. When it contains one or more valid entries, this bit is cleared. This bit field does not request. -->
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Completely Empty\nWhen the transmit FIFO is completely empty, this bit is set.\nWhen it contains one or more valid entries, this bit is cleared. This bit field does not request.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Transmit FIFO is empty</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TFNF: Transmit FIFO Not Full Set when the transmit FIFO contains one or more empty locations, and is cleared when the FIFO is full. -->
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full\nSet when the transmit FIFO contains one or more empty locations, and is cleared when the FIFO is full.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Transmit FIFO is full</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Transmit FIFO is not full</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ACT: I2C Activity Status Reset value: 0x0 -->
            <field>
              <name>ACT</name>
              <description>I2C Activity Status\nReset value: 0x0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Idle</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Active</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CTFLVL: I2C Transmit FIFO Level Register -->
        <register>
          <name>I2CTFLVL</name>
          <displayName>I2CTFLVL</displayName>
          <description>I2C Transmit FIFO Level Register</description>
          <addressOffset>0x00000074</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Transmit FIFO Level Contains the number of valid data entries in the transmit FIFO. -->
            <field>
              <name>VAL</name>
              <description>Transmit FIFO Level\nContains the number of valid data entries in the transmit FIFO.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- I2CRFLVL: I2C Receive FIFO Level Register -->
        <register>
          <name>I2CRFLVL</name>
          <displayName>I2CRFLVL</displayName>
          <description>I2C Receive FIFO Level Register</description>
          <addressOffset>0x00000078</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Receive FIFO Level Contains the number of valid data entries in the receive FIFO. -->
            <field>
              <name>VAL</name>
              <description>Receive FIFO Level\nContains the number of valid data entries in the receive FIFO.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- I2CTXABRTSRC: I2C Transmit Abort Source Register -->
        <register>
          <name>I2CTXABRTSRC</name>
          <displayName>I2CTXABRTSRC</displayName>
          <description>I2C Transmit Abort Source Register</description>
          <addressOffset>0x00000080</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SLVRDINTX: Role of I2C: Slave-Transmitter 0x1: When the processor side responds to a slave mode request for data to be transmitted to a remote master and user writes a 1 in CMD (bit 8) of I2CDATACMD register. -->
            <field>
              <name>SLVRDINTX</name>
              <description>Role of I2C: Slave-Transmitter\n0x1: When the processor side responds to a slave mode request for data to be transmitted to a remote master and user writes a 1 in CMD (bit 8) of I2CDATACMD register.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SARBLOST: Role of i2c: Slave-Transmitter 0x1: Slave lost the bus while transmitting data to a remote master. I2CTXABRTSRC[12] is set at the same time. Note: Even though the slave never &apos;owns&apos; the bus, something could go wrong on the bus. This is a failsafe check. For instance, during a data transmission at the low-to-high transition of SCL, if what is on the data bus is not what is supposed to be transmitted, then I2C no longer own the bus. -->
            <field>
              <name>SARBLOST</name>
              <description>Role of i2c: Slave-Transmitter\n0x1: Slave lost the bus while transmitting data to a remote master. I2CTXABRTSRC[12] is set at the same time.\nNote: Even though the slave never &apos;owns&apos; the bus, something could go wrong on the bus. This is a failsafe check. For instance, during a data transmission at the low-to-high transition of SCL, if what is on the data bus is not what is supposed to be transmitted, then I2C no longer own the bus.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLVFLUSHTF: Role of I2C: Slave-Transmitter 0x1: Slave has received a read command and some data exists in the TX FIFO so the slave issues a TXABRT interrupt to flush old data in TX FIFO. -->
            <field>
              <name>SLVFLUSHTF</name>
              <description>Role of I2C: Slave-Transmitter\n0x1: Slave has received a read command and some data exists in the TX FIFO so the slave issues a TXABRT interrupt to flush old data in TX FIFO.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- MARBLOST: Role of I2C: Master-Transmitter or Slave-Transmitter 0x1: Master has lost arbitration, or if I2CTXABRTSRC[14] is also set, then the slave transmitter has lost arbitration. Note: I2C can be both master and slave at the same time. -->
            <field>
              <name>MARBLOST</name>
              <description>Role of I2C: Master-Transmitter or Slave-Transmitter\n0x1: Master has lost arbitration, or if I2CTXABRTSRC[14] is also set, then the slave transmitter has lost arbitration.\nNote: I2C can be both master and slave at the same time.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- MASTERDIS: Role of I2C: Master-Transmitter or Master-Receiver 0x1: User tries to initiate a Master operation with the Master mode disabled. -->
            <field>
              <name>MASTERDIS</name>
              <description>Role of I2C: Master-Transmitter or Master-Receiver\n0x1: User tries to initiate a Master operation with the Master mode disabled.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RD10BNORESTART: Role of I2C: Master-Receiver 0x1: The restart is disabled (RESTARTEN bit (I2CCTL[5]) =0) and the master sends a read command in 10-bit addressing mode. -->
            <field>
              <name>RD10BNORESTART</name>
              <description>Role of I2C: Master-Receiver\n0x1: The restart is disabled (RESTARTEN bit (I2CCTL[5]) =0) and the master sends a read command in 10-bit addressing mode.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- STARTNORESTART: To clear Bit 9, the source of the ABRT_SBYTE_NORSTRT must be fixed first; restart must be enabled (I2CCTL[5]=1), the SPECIAL bit must be cleared (I2CMASTERADDR[11]), or the GCORSTART bit must be cleared (I2CMASTERADDR[10]). Once the source of the ABRT_SBYTE_NORSTRT is fixed, then this bit can be cleared in the same manner as other bits in this register. If the source of the ABRT_SBYTE_NORSTRT is not fixed before attempting to clear this bit, bit 9 clears for one cycle and then gets reasserted. Role of I2C: Master 0x1: The restart is disabled (RESTARTEN bit (I2CCTL[5]) =0) and the user is trying to send a START Byte. -->
            <field>
              <name>STARTNORESTART</name>
              <description>To clear Bit 9, the source of the ABRT_SBYTE_NORSTRT must be fixed first; restart must be enabled (I2CCTL[5]=1), the SPECIAL bit must be cleared (I2CMASTERADDR[11]), or the GCORSTART bit must be cleared (I2CMASTERADDR[10]). Once the source of the ABRT_SBYTE_NORSTRT is fixed, then this bit can be cleared in the same manner as other bits in this register. If the source of the ABRT_SBYTE_NORSTRT is not fixed before attempting to clear this bit, bit 9 clears for one cycle and then gets reasserted.\nRole of I2C: Master\n0x1: The restart is disabled (RESTARTEN bit (I2CCTL[5]) =0) and the user is trying to send a START Byte.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- HSNORESTART: Role of I2C: Master-Transmitter or Master-Receiver 0x1: The restart is disabled (RESTARTEN bit (I2CCTL[5]) =0) and the user is trying to use the master to transfer data in High Speed mode. -->
            <field>
              <name>HSNORESTART</name>
              <description>Role of I2C: Master-Transmitter or Master-Receiver\n0x1: The restart is disabled (RESTARTEN bit (I2CCTL[5]) =0) and the user is trying to use the master to transfer data in High Speed mode.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- STARTACKDET: Role of I2C: Master 0x1: Master has sent a START Byte and the START Byte was acknowledged (wrong behavior). -->
            <field>
              <name>STARTACKDET</name>
              <description>Role of I2C: Master\n0x1: Master has sent a START Byte and the START Byte was acknowledged (wrong behavior).</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- HSACKDET: Role of I2C: Master 0x1: Master is in High Speed mode and the High Speed Master code was acknowledged (wrong behavior). -->
            <field>
              <name>HSACKDET</name>
              <description>Role of I2C: Master\n0x1: Master is in High Speed mode and the High Speed Master code was acknowledged (wrong behavior).</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GCREAD: Role of I2C: Master-Transmitter 0x1: I2C in master mode sent a General Call but the user programmed the byte following the General Call to be a read from the bus (I2CDATACMD[9] is set to 1). -->
            <field>
              <name>GCREAD</name>
              <description>Role of I2C: Master-Transmitter\n0x1: I2C in master mode sent a General Call but the user programmed the byte following the General Call to be a read from the bus (I2CDATACMD[9] is set to 1).</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GCNACK: Role of I2C: Master-Transmitter 0x1: I2C in master mode sent a General Call and no slave on the bus acknowledged the General Call. -->
            <field>
              <name>GCNACK</name>
              <description>Role of I2C: Master-Transmitter\n0x1: I2C in master mode sent a General Call and no slave on the bus acknowledged the General Call.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TXDATANACK: Role of I2C: Master-Transmitter 0x1: This is a master-mode only bit. Master has received an acknowledgement for the address, but when it sent data byte(s) following the address, it did not receive an acknowledge from the remote slave(s). -->
            <field>
              <name>TXDATANACK</name>
              <description>Role of I2C: Master-Transmitter\n0x1: This is a master-mode only bit. Master has received an acknowledgement for the address, but when it sent data byte(s) following the address, it did not receive an acknowledge from the remote slave(s).</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ADDR10B2NACK: Role of I2C: Master-Transmitter or Master-Receiver 0x1: Master is in 10-bit address mode and the second address byte of the 10-bit address was not acknowledged by any slave. -->
            <field>
              <name>ADDR10B2NACK</name>
              <description>Role of I2C: Master-Transmitter or Master-Receiver\n0x1: Master is in 10-bit address mode and the second address byte of the 10-bit address was not acknowledged by any slave.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ADDR10B1NACK: Role of I2C: Master-Transmitter or Master-Receiver 0x1: Master is in 10-bit address mode and the first 10-bit address byte was not acknowledged by any slave. -->
            <field>
              <name>ADDR10B1NACK</name>
              <description>Role of I2C: Master-Transmitter or Master-Receiver\n0x1: Master is in 10-bit address mode and the first 10-bit address byte was not acknowledged by any slave.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ADDR7BNACK: Role of I2C: Master-Transmitter or Master-Receiver 0x1: Master is in 7-bit addressing mode and the address sent was not acknowledged by any slave. -->
            <field>
              <name>ADDR7BNACK</name>
              <description>Role of I2C: Master-Transmitter or Master-Receiver\n0x1: Master is in 7-bit addressing mode and the address sent was not acknowledged by any slave.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CSDASETUP: I2C SDA Setup Register -->
        <register>
          <name>I2CSDASETUP</name>
          <displayName>I2CSDASETUP</displayName>
          <description>I2C SDA Setup Register</description>
          <addressOffset>0x00000094</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000064</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: SDA Setup It is recommended that if the required delay is 1000ns, then for an ic_clk frequency of 10 MHz, SDA_SETUP should be programmed to a value of 11. -->
            <field>
              <name>VAL</name>
              <description>SDA Setup\nIt is recommended that if the required delay is 1000ns, then for an ic_clk frequency of 10 MHz, SDA_SETUP should be programmed to a value of 11.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- I2CACKGC: I2C ACK General Call Register -->
        <register>
          <name>I2CACKGC</name>
          <displayName>I2CACKGC</displayName>
          <description>I2C ACK General Call Register</description>
          <addressOffset>0x00000098</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- ACKGC: ACK General Call When set to 1, I2C responds with a ACK (by asserting ic_data_oe) when it receives a General Call. Otherwise, I2C responds with a NACK (by negating ic_data_oe). -->
            <field>
              <name>ACKGC</name>
              <description>ACK General Call\nWhen set to 1, I2C responds with a ACK (by asserting ic_data_oe) when it receives a General Call. Otherwise, I2C responds with a NACK (by negating ic_data_oe).</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>I2C responds with a NACK</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>I2C responds with a ACK</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- I2CENSTS: I2C Enable Status Register -->
        <register>
          <name>I2CENSTS</name>
          <displayName>I2CENSTS</displayName>
          <description>I2C Enable Status Register</description>
          <addressOffset>0x0000009C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SLVRDLOST: Slave Received Data Lost This bit indicates if a Slave-Receiver operation has been aborted with at least one data byte received from an I2C transfer due to the setting of I2CENABLE from 1 to 0. When read as 1, I2C is deemed to have been actively engaged in an aborted I2C transfer (with matching address) and the data phase of the I2C transfer has been entered, even though a data byte has been responded with a NACK. NOTE: If the remote I2C master terminates the transfer with a STOP condition before the I2C has a chance to NACK a transfer, and I2CENABLE has been set to 0, then this bit is also set to 1. When read as 0, I2C is deemed to have been disabled without being actively involved in the data phase of a Slave-Receiver transfer. NOTE: The CPU can safely read this bit when EN (bit 0) is read as 0. -->
            <field>
              <name>SLVRDLOST</name>
              <description>Slave Received Data Lost\nThis bit indicates if a Slave-Receiver operation has been aborted with at least one data byte received from an I2C transfer due to the setting of I2CENABLE from 1 to 0. When read as 1, I2C is deemed to have been actively engaged in an aborted I2C transfer (with matching address) and the data phase of the I2C transfer has been entered, even though a data byte has been responded with a NACK.\nNOTE: If the remote I2C master terminates the transfer with a STOP condition before the I2C has a chance to NACK a transfer, and I2CENABLE has been set to 0, then this bit is also set to 1. When read as 0, I2C is deemed to have been disabled without being actively involved in the data phase of a Slave-Receiver transfer.\nNOTE: The CPU can safely read this bit when EN (bit 0) is read as 0.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SLVDISONBUSY: Slave Disabled While Busy (Transmit, Receive) This bit indicates if a potential or active Slave operation has been aborted due to the setting of the I2CENABLE register from 1 to 0. This bit is set when the CPU writes a 0 to the I2CENABLE register while: (a) I2C is receiving the address byte of the Slave-Transmitter operation from a remote master; OR, (b) address and data bytes of the Slave-Receiver operation from a remote master. When read as 1, I2C is deemed to have forced a NACK during any part of an I2C transfer, irrespective of whether the I2C address matches the slave address set in I2C (SAR register) OR if the transfer is completed before I2CENABLE is set to 0 but has not taken effect. NOTE: If the remote I2C master terminates the transfer with a STOP condition before the i2c has a chance to NACK a transfer, and I2CENABLE has been set to 0, then this bit will also be set to 1. When read as 0, I2C is deemed to have been disabled when there is master activity, or when the I2C bus is idle. NOTE: The CPU can safely read this bit when EN (bit 0) is read as 0. -->
            <field>
              <name>SLVDISONBUSY</name>
              <description>Slave Disabled While Busy (Transmit, Receive)\nThis bit indicates if a potential or active Slave operation has been aborted due to the setting of the I2CENABLE register from 1 to 0. This bit is set when the CPU writes a 0 to the I2CENABLE register while: (a) I2C is receiving the address byte of the Slave-Transmitter operation from a remote master; OR, (b) address and data bytes of the Slave-Receiver operation from a remote master. When read as 1, I2C is deemed to have forced a NACK during any part of an I2C transfer, irrespective of whether the I2C address matches the slave address set in I2C (SAR register) OR if the transfer is completed before I2CENABLE is set to 0 but has not taken effect.\nNOTE: If the remote I2C master terminates the transfer with a STOP condition before the i2c has a chance to NACK a transfer, and I2CENABLE has been set to 0, then this bit will also be set to 1. When read as 0, I2C is deemed to have been disabled when there is master activity, or when the I2C bus is idle.\nNOTE: The CPU can safely read this bit when EN (bit 0) is read as 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN: ic_en Status This bit always reflects the value driven on the output port ic_en. When read as 1, I2C is deemed to be in an enabled state. When read as 0, I2C is deemed completely inactive. NOTE: The CPU can safely read this bit anytime. When this bit is read as 0, the CPU can safely read SLVRDLOST (bit 2) and SLVDISONBUSY (bit 1). -->
            <field>
              <name>EN</name>
              <description>ic_en Status\nThis bit always reflects the value driven on the output port ic_en. When read as 1, I2C is deemed to be in an enabled state. When read as 0, I2C is deemed completely inactive.\nNOTE: The CPU can safely read this bit anytime. When this bit is read as 0, the CPU can safely read SLVRDLOST (bit 2) and SLVDISONBUSY (bit 1).</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>I2C is deemed completely inactive</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>I2C is deemed to be in an enabled state</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>PWM0</name>
      <description>NOEN</description>
      <groupName>PWM</groupName>
      <baseAddress>0x40007000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x9C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
         <name>PWM0</name>
         <description>PWM0      </description>
         <value>7</value>
      </interrupt>
      <registers>

        <!-- TBPRD: Time-Base Period Register -->
        <register>
          <name>TBPRD</name>
          <displayName>TBPRD</displayName>
          <description>Time-Base Period Register</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Time-base counter period TBCTL.PRDLD=0: Access to this register will actually goes to the internal shadow register (sharing the same address), and the active value will be updated from shadow register when TBCNT is zero. TBCTL.PRDLD=1: Access to this register will directly affect the active value. -->
            <field>
              <name>VAL</name>
              <description>Time-base counter period\nTBCTL.PRDLD=0: Access to this register will actually goes to the internal shadow register (sharing the same address), and the active value will be updated from shadow register when TBCNT is zero.\nTBCTL.PRDLD=1: Access to this register will directly affect the active value.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- TBPHS: Time-Base Phase Register -->
        <register>
          <name>TBPHS</name>
          <displayName>TBPHS</displayName>
          <description>Time-Base Phase Register</description>
          <addressOffset>0x00000004</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Time-base counter phase when synchronization event occurs TBCTL.PHSEN=0: The synchronization event is ignored and TBCNT keeps its value. TBCTL.PHSEN=1: Time-base counter (TBCNT) will be loaded with TBPHS when synchronization event occurs. -->
            <field>
              <name>VAL</name>
              <description>Time-base counter phase when synchronization event occurs\nTBCTL.PHSEN=0: The synchronization event is ignored and TBCNT keeps its value.\nTBCTL.PHSEN=1: Time-base counter (TBCNT) will be loaded with TBPHS when synchronization event occurs.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- TBCNT: Time-Base Counter Register -->
        <register>
          <name>TBCNT</name>
          <displayName>TBCNT</displayName>
          <description>Time-Base Counter Register</description>
          <addressOffset>0x00000008</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Current value of the time-base counter -->
            <field>
              <name>VAL</name>
              <description>Current value of the time-base counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- TBCTL: Time-Base Control Register -->
        <register>
          <name>TBCTL</name>
          <displayName>TBCTL</displayName>
          <description>Time-Base Control Register</description>
          <addressOffset>0x0000000C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DBGRUN: PWM counter behaviour when CPU is halted  Note: Debug operation and CPU fault exceptions both can cause CPU halted. -->
            <field>
              <name>DBGRUN</name>
              <description>PWM counter behaviour when CPU is halted\n\nNote: Debug operation and CPU fault exceptions both can cause CPU halted.</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STOP_AFTER_COUNTING</name>
                  <description>Stop after the next time-base counter increment or decrement</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STOP_AFTER_CYCLE</name>
                  <description>Stop when TBCNT completes a whole cycle (TBCNT=TBPRD for up-count mode and zero for other modes)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KEEP_RUN</name>
                  <description>Counter keep running when CPU is halted</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PHSDIR: Phase direction It is valid only when TBCNT is in up-down-count mode (CNTMODE=10) -->
            <field>
              <name>PHSDIR</name>
              <description>Phase direction\nIt is valid only when TBCNT is in up-down-count mode (CNTMODE=10)</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>COUNT_DOWN_AFTER_SYNC</name>
                  <description>Count down after synchronization event</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COUNT_UP_AFTER_SYNC</name>
                  <description>Count up after synchronization event</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TBCLKDIV: Time-base clock dividing ratio from PWM clock input -->
            <field>
              <name>TBCLKDIV</name>
              <description>Time-base clock dividing ratio from PWM clock input</description>
              <bitRange>[12:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1</name>
                  <description>/1 (default on reset)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>/2</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>/4</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>8</name>
                  <description>/8</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>16</name>
                  <description>/16</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>32</name>
                  <description>/32</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>64</name>
                  <description>/64</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>128</name>
                  <description>/128</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRCSYNC: Software forced synchronization This event is ORed with SYNCI input and is valid only when SYNCOSEL=00 -->
            <field>
              <name>FRCSYNC</name>
              <description>Software forced synchronization\nThis event is ORed with SYNCI input and is valid only when SYNCOSEL=00</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and reads always return a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Write a 1 forces a one-time synchronization pulse</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SYNCOSEL: Synchronization output select -->
            <field>
              <name>SYNCOSEL</name>
              <description>Synchronization output select</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWMxSYNC</name>
                  <description>SYNCI</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TBCNT_EQU_ZERO</name>
                  <description>TBCNT=Zero</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TBCNT_EQU_CMPB</name>
                  <description>TBCNT=TBPRD</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable SYNCO</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PRDLD: Time-base counter period register (TBPRD) load mode -->
            <field>
              <name>PRDLD</name>
              <description>Time-base counter period register (TBPRD) load mode</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TBPRD_FROM_SHADOW</name>
                  <description>TBPRD is loaded from its shadow register when time-base counter (TBCNT) is zero</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TBPRD_IMMEDIATE</name>
                  <description>TBPRD is directly accessed without a shadow register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PHSEN: Phase register enable -->
            <field>
              <name>PHSEN</name>
              <description>Phase register enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Do not load time-base counter (TBCNT) from time-base phase register (TBPHS)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Load TBCNT from TBPHS when synchronization event occurs (SYNCI input, software synchronization or digital compare sync event)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CNTMODE: Counter mode -->
            <field>
              <name>CNTMODE</name>
              <description>Counter mode</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>COUNT_UP_AND_RUN</name>
                  <description>Up-count</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COUNT_DOWN_AND_RUN</name>
                  <description>Down-count</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COUNT_UP_DOWN_AND_RUN</name>
                  <description>Up-down-count</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COUNT_STOP</name>
                  <description>Stop and freeze (default on reset)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- TBSTS: Time-Base Status Register -->
        <register>
          <name>TBSTS</name>
          <displayName>TBSTS</displayName>
          <description>Time-Base Status Register</description>
          <addressOffset>0x00000010</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CNTMAX: Time-base counter reaching max latched status -->
            <field>
              <name>CNTMAX</name>
              <description>Time-base counter reaching max latched status</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_REACHED</name>
                  <description>Reading a 0 indicates TBCNT never reaches 0xFFFF. Writing a 0 has no effect.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>REACHED</name>
                  <description>Reading a 1 indicates TBCNT reached 0xFFFF. Writing a 1 will clear the latched status.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SYNCI: Input synchronization latched status -->
            <field>
              <name>SYNCI</name>
              <description>Input synchronization latched status</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EVENT</name>
                  <description>Reading a 0 indicates no input synchronization event has occurred. Writing a 0 has no effect.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EVENT_OCCUR</name>
                  <description>Reading a 1 indicates an input synchronization event has occurred. Writing a 1 will clear the latched status.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CNTDIR: Time-base counter direction status -->
            <field>
              <name>CNTDIR</name>
              <description>Time-base counter direction status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>COUNTING_DOWN</name>
                  <description>Time-base counter is currently counting down</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COUNTING_UP</name>
                  <description>Time-base counter is currently counting up</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- CMPA: Counter-Compare A Threshold Register -->
        <register>
          <name>CMPA</name>
          <displayName>CMPA</displayName>
          <description>Counter-Compare A Threshold Register</description>
          <addressOffset>0x00000014</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Comparator A threshold A TBCNT=CMPA event will be generated while TBCNT is equal to the threshold value CMPCTL.SHDWAMODE=0: Access to this register will actually go to the internal shadow register. The CMPCTL.LOADAMODE determines when the active value will be loaded from the shadow register. CMPCTL.SHDWAMODE=1: Access to this register will directly affect the active value. -->
            <field>
              <name>VAL</name>
              <description>Comparator A threshold\nA TBCNT=CMPA event will be generated while TBCNT is equal to the threshold value\nCMPCTL.SHDWAMODE=0: Access to this register will actually go to the internal shadow register. The CMPCTL.LOADAMODE determines when the active value will be loaded from the shadow register.\nCMPCTL.SHDWAMODE=1: Access to this register will directly affect the active value.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CMPB: Counter-Compare B Threshold Register -->
        <register>
          <name>CMPB</name>
          <displayName>CMPB</displayName>
          <description>Counter-Compare B Threshold Register</description>
          <addressOffset>0x00000018</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Comparator B threshold A TBCNT=CMPB event will be generated while TBCNT is equal to the threshold value CMPCTL.SHDWBMODE=0: Access to this register will actually go to the internal shadow register. The CMPCTL.LOADBMODE determines when the active value will be loaded from the shadow register. CMPCTL.SHDWBMODE=1: Access to this register will directly affect the active value. -->
            <field>
              <name>VAL</name>
              <description>Comparator B threshold\nA TBCNT=CMPB event will be generated while TBCNT is equal to the threshold value\nCMPCTL.SHDWBMODE=0: Access to this register will actually go to the internal shadow register. The CMPCTL.LOADBMODE determines when the active value will be loaded from the shadow register.\nCMPCTL.SHDWBMODE=1: Access to this register will directly affect the active value.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CMPCTL: Counter-Compare Control Register -->
        <register>
          <name>CMPCTL</name>
          <displayName>CMPCTL</displayName>
          <description>Counter-Compare Control Register</description>
          <addressOffset>0x0000001C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SHDWBFULL: CMPB shadow register full status flag  A write to the shadow register will overwrite current value. A load from the shadow register to the active register will clear this bit. -->
            <field>
              <name>SHDWBFULL</name>
              <description>CMPB shadow register full status flag\n A write to the shadow register will overwrite current value. A load from the shadow register to the active register will clear this bit.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>CMPB shadow FIFO not full yet</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>CMPB shadow FIFO is full</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SHDWAFULL: CMPA shadow register full status flag A write to the shadow register will overwrite current value. A load from the shadow register to the active register will clear this bit. -->
            <field>
              <name>SHDWAFULL</name>
              <description>CMPA shadow register full status flag\nA write to the shadow register will overwrite current value. A load from the shadow register to the active register will clear this bit.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>CMPA shadow FIFO not full yet</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>CMPA shadow FIFO is full</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ADVCMPB: Advanced mode for CMPB -->
            <field>
              <name>ADVCMPB</name>
              <description>Advanced mode for CMPB</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL_MODE</name>
                  <description>Normal mode: No TBCNT=CMPB event will be generated when CMPB=0 or CMPB=TBPRD</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADVANCED_MODE</name>
                  <description>Advanced mode: CMPB can be 0 or TBPRD</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SHDWBMODE: CMPB register mode -->
            <field>
              <name>SHDWBMODE</name>
              <description>CMPB register mode</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SHADOW_MODE</name>
                  <description>Shadow mode</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IMMEDIATE_MODE</name>
                  <description>Immediate mode</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ADVCMPA: Advanced mode for CMPA -->
            <field>
              <name>ADVCMPA</name>
              <description>Advanced mode for CMPA</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NORMAL_MODE</name>
                  <description>Normal mode: No TBCNT=CMPA event will be generated when CMPA=0 or CMPA=TBPRD</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADVANCED_MODE</name>
                  <description>Advanced mode: CMPA can be 0 or TBPRD</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SHDWAMODE: CMPA register mode -->
            <field>
              <name>SHDWAMODE</name>
              <description>CMPA register mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SHADOW_MODE</name>
                  <description>Shadow mode</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IMMEDIATE_MODE</name>
                  <description>Immediate mode</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- LOADBMODE: Mode to load CMPB active value from shadow register It has no effect when CMPCTL.SHDWBMODE=1 -->
            <field>
              <name>LOADBMODE</name>
              <description>Mode to load CMPB active value from shadow register\nIt has no effect when CMPCTL.SHDWBMODE=1</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOAD_ON_ZERO</name>
                  <description>Load on TBCNT=Zero</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOAD_ON_PERIOD</name>
                  <description>Load on TBCNT=TBPRD</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOAD_ON_ZERO_PERIOD</name>
                  <description>Load on either TBCNT=Zero or TBCNT=TBPRD</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FREEZE</name>
                  <description>Freeze CMPA active value (No loads possible)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- LOADAMODE: Mode to load CMPA active value from shadow register It has no effect when CMPCTL.SHDWAMODE=1 -->
            <field>
              <name>LOADAMODE</name>
              <description>Mode to load CMPA active value from shadow register\nIt has no effect when CMPCTL.SHDWAMODE=1</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOAD_ON_ZERO</name>
                  <description>Load on TBCNT=Zero</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOAD_ON_PERIOD</name>
                  <description>Load on TBCNT=TBPRD</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOAD_ON_ZERO_PERIOD</name>
                  <description>Load on either TBCNT=Zero or TBCNT=TBPRD</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FREEZE</name>
                  <description>Freeze CMPA active value (No loads possible)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- AQCTLA: Action-Qualifier Output A Control Register -->
        <register>
          <name>AQCTLA</name>
          <displayName>AQCTLA</displayName>
          <description>Action-Qualifier Output A Control Register</description>
          <addressOffset>0x00000024</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CBD: Action on output A when TBCNT=CMPB and TBCNT is counting down -->
            <field>
              <name>CBD</name>
              <description>Action on output A when TBCNT=CMPB and TBCNT is counting down</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing (action disabled)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Clear (force PWM output A to low)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Set (force PWM output A to high)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle (invert current PWM output A status)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBU: Action on output A when TBCNT=CMPB and TBCNT is counting up -->
            <field>
              <name>CBU</name>
              <description>Action on output A when TBCNT=CMPB and TBCNT is counting up</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing (action disabled)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Clear (force PWM output A to low)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Set (force PWM output A to high)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle (invert current PWM output A status)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CAD: Action on output A when TBCNT=CMPA and TBCNT is counting down -->
            <field>
              <name>CAD</name>
              <description>Action on output A when TBCNT=CMPA and TBCNT is counting down</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing (action disabled)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Clear (force PWM output A to low)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Set (force PWM output A to high)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle (invert current PWM output A status)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CAU: Action on output A when TBCNT=CMPA and TBCNT is counting up -->
            <field>
              <name>CAU</name>
              <description>Action on output A when TBCNT=CMPA and TBCNT is counting up</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing (action disabled)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Clear (force PWM output A to low)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Set (force PWM output A to high)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle (invert current PWM output A status)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PRD: Action on output A when TBCNT=TBPRD -->
            <field>
              <name>PRD</name>
              <description>Action on output A when TBCNT=TBPRD</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing (action disabled)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Clear (force PWM output A to low)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Set (force PWM output A to high)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle (invert current PWM output A status)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ZRO: Action on output A when TBCNT=Zero -->
            <field>
              <name>ZRO</name>
              <description>Action on output A when TBCNT=Zero</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing (action disabled)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Clear (force PWM output A to low)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Set (force PWM output A to high)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle (invert current PWM output A status)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- AQCTLB: Action-Qualifier B Control Register -->
        <register>
          <name>AQCTLB</name>
          <displayName>AQCTLB</displayName>
          <description>Action-Qualifier B Control Register</description>
          <addressOffset>0x00000028</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CBD: Action on output B when TBCNT=CMPA and TBCNT is counting down -->
            <field>
              <name>CBD</name>
              <description>Action on output B when TBCNT=CMPA and TBCNT is counting down</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing (action disabled)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Clear (force PWM output B to low)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Set (force PWM output B to high)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle (invert current PWM output B status)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBU: Action on output B when TBCNT=CMPB and TBCNT is counting up -->
            <field>
              <name>CBU</name>
              <description>Action on output B when TBCNT=CMPB and TBCNT is counting up</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing (action disabled)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Clear (force PWM output B to low)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Set (force PWM output B to high)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle (invert current PWM output B status)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CAD: Action on output B when TBCNT=CMPA and TBCNT is counting down -->
            <field>
              <name>CAD</name>
              <description>Action on output B when TBCNT=CMPA and TBCNT is counting down</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing (action disabled)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Clear (force PWM output B to low)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Set (force PWM output B to high)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle (invert current PWM output B status)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CAU: Action on output B when TBCNT=CMPA and TBCNT is counting up -->
            <field>
              <name>CAU</name>
              <description>Action on output B when TBCNT=CMPA and TBCNT is counting up</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing (action disabled)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Clear (force PWM output B to low)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Set (force PWM output B to high)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle (invert current PWM output B status)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PRD: Action on output B when TBCNT=TBPRD -->
            <field>
              <name>PRD</name>
              <description>Action on output B when TBCNT=TBPRD</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing (action disabled)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Clear (force PWM output B to low)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Set (force PWM output B to high)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle (invert current PWM output B status)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ZRO: Action on output B when TBCNT=Zero -->
            <field>
              <name>ZRO</name>
              <description>Action on output B when TBCNT=Zero</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing (action disabled)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Clear (force PWM output B to low)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Set (force PWM output B to high)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle (invert current PWM output B status)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- AQSFRC: Action-Qualifier Software Force Register -->
        <register>
          <name>AQSFRC</name>
          <displayName>AQSFRC</displayName>
          <description>Action-Qualifier Software Force Register</description>
          <addressOffset>0x0000002C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- RLDCSF: Options to load continuous software force register (AQCSFRC) active value from shadow register -->
            <field>
              <name>RLDCSF</name>
              <description>Options to load continuous software force register (AQCSFRC) active value from shadow register</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOAD_ON_ZERO</name>
                  <description>Load on TBCNT=Zero</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOAD_ON_PERIOD</name>
                  <description>Load on TBCNT=TBPRD</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOAD_ON_ZERO_PERIOD</name>
                  <description>Load on TBCNT=Zero or TBCNT=TBPRD</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOAD_IMMEDIATE</name>
                  <description>Load immediately (No shadowing)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OTSFB: One-time software forced event on output B This bit is auto cleared once a write to it is complete -->
            <field>
              <name>OTSFB</name>
              <description>One-time software forced event on output B\nThis bit is auto cleared once a write to it is complete</description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect. Always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_ONE_TIME</name>
                  <description>Initiate a single software forced event</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ACTSFB: Action when one-time software force B is invoked -->
            <field>
              <name>ACTSFB</name>
              <description>Action when one-time software force B is invoked</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing (action disabled)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Clear (force PWM output B to low</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Set (force PWM output B to high</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle (invert current PWM output B status)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OTSFA: One-time software forced event on output A This bit is auto cleared once a write to it is complete -->
            <field>
              <name>OTSFA</name>
              <description>One-time software forced event on output A\nThis bit is auto cleared once a write to it is complete</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect. Always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_ONE_TIME</name>
                  <description>Initiate a single software forced event</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ACTSFA: Action when one-time software force A is invoked -->
            <field>
              <name>ACTSFA</name>
              <description>Action when one-time software force A is invoked</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing (action disabled)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Clear (force PWM output A to low</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Set (force PWM output A to high</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOGGLE</name>
                  <description>Toggle (invert current PWM output A status)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- AQCSFRC: Action-Qualifier Continuous Software Force Register -->
        <register>
          <name>AQCSFRC</name>
          <displayName>AQCSFRC</displayName>
          <description>Action-Qualifier Continuous Software Force Register</description>
          <addressOffset>0x00000030</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CSFB: Continuous software force on output B The register can be in immediate mode or shadow mode as determined by AQSFRC.RLDCSF -->
            <field>
              <name>CSFB</name>
              <description>Continuous software force on output B\nThe register can be in immediate mode or shadow mode as determined by AQSFRC.RLDCSF</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Forcing disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONTINUOUS_LOW</name>
                  <description>Force a continuous low on output B</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONTINUOUS_HIGH</name>
                  <description>Force a continuous high on output B</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Forcing disabled</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CSFA: Continuous software force on output A The register can be in immediate mode or shadow mode as determined by AQSFRC.RLDCSF -->
            <field>
              <name>CSFA</name>
              <description>Continuous software force on output A\nThe register can be in immediate mode or shadow mode as determined by AQSFRC.RLDCSF</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Forcing disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONTINUOUS_LOW</name>
                  <description>Force a continuous low on output A</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONTINUOUS_HIGH</name>
                  <description>Force a continuous high on output A</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Forcing disabled</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- DBCTL: Dead-Band Generator Control Register -->
        <register>
          <name>DBCTL</name>
          <displayName>DBCTL</displayName>
          <description>Dead-Band Generator Control Register</description>
          <addressOffset>0x00000034</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- HALFCYCLE: Half cycle clocking enable -->
            <field>
              <name>HALFCYCLE</name>
              <description>Half cycle clocking enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Full cycle clocking enabled. The dead-band counter is clocked at TBCLK</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Half cycle clocking enabled. The dead-band counter is clocked at 2x TBCLK</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INMODE: Dead-band input mode -->
            <field>
              <name>INMODE</name>
              <description>Dead-band input mode</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Input A is the source for both rising-edge and falling-edge delay</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1</name>
                  <description>Input B is the source for rising-edge delay\nInput A is the source for falling-edge delay</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Input A is the source for rising-edge delay\nInput B is the source for falling-edge delay</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3</name>
                  <description>Input B is the source for both rising-edge and falling-edge delay</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- POLSEL: Polarity select -->
            <field>
              <name>POLSEL</name>
              <description>Polarity select</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_AHH</name>
                  <description>Neither output A or output B is inverted (default)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_ALH</name>
                  <description>Output A is inverted</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_AHL</name>
                  <description>Output B is inverted</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_ALL</name>
                  <description>Both output A and output B are inverted</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OUTMODE: Dead-band output mode -->
            <field>
              <name>OUTMODE</name>
              <description>Dead-band output mode</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Dead-band is bypassed for both outputs. Input A and B from the action-qualifier are passed directly to the PWM-chopper submodule.\nPOLSEL and IN_MODE are not used in this mode.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1</name>
                  <description>Disable rising-edge delay. Input A from the action-qualifier is directly passed through to the input A of the PWM-chopper submodule.\nThe falling-edge delay is applied at output B. The input signal for the delay is determined by DBCTL.IN_MODE.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>The rising-edge delay is applied at output A. The input signal for the delay is determined by DBCTL.IN_MODE.\nDisable falling-edge delay. Input B from the action-qualifier is directly passed through to the input B of the PWM-chopper submodule.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3</name>
                  <description>Dead-band is fully enabled for both rising-edge delay on output A and falling-edge delay on output B. The input signal for the delay is determined by DBCTL.IN_MODE.</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- DBRED: Dead-Band Generator Rising Edge Delay Register -->
        <register>
          <name>DBRED</name>
          <displayName>DBRED</displayName>
          <description>Dead-Band Generator Rising Edge Delay Register</description>
          <addressOffset>0x00000038</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Rising-edge delay -->
            <field>
              <name>VAL</name>
              <description>Rising-edge delay</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- DBFED: Dead-Band Generator Falling Edge Delay Register -->
        <register>
          <name>DBFED</name>
          <displayName>DBFED</displayName>
          <description>Dead-Band Generator Falling Edge Delay Register</description>
          <addressOffset>0x0000003C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Falling-edge delay -->
            <field>
              <name>VAL</name>
              <description>Falling-edge delay</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- TZSEL: Trip-Zone Select Register -->
        <register>
          <name>TZSEL</name>
          <displayName>TZSEL</displayName>
          <description>Trip-Zone Select Register</description>
          <addressOffset>0x00000044</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- OSHTDBG: EMUSTOP as a one-shot trip source -->
            <field>
              <name>OSHTDBG</name>
              <description>EMUSTOP as a one-shot trip source</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DEBUG_DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DEBUG_ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBCDBG: EMUSTOP as a cycle-by-cycle trip source -->
            <field>
              <name>CBCDBG</name>
              <description>EMUSTOP as a cycle-by-cycle trip source</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DEBUG_DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DEBUG_ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OSHTCOMP2L: COMP2L as a one-shot trip  -->
            <field>
              <name>OSHTCOMP2L</name>
              <description>COMP2L as a one-shot trip </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OSHTCOMP2H: COMP2H as a one-shot trip source -->
            <field>
              <name>OSHTCOMP2H</name>
              <description>COMP2H as a one-shot trip source</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OSHTCOMP1L: COMP1L as a one-shot trip source -->
            <field>
              <name>OSHTCOMP1L</name>
              <description>COMP1L as a one-shot trip source</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OSHTCOMP1H: COMP1H as a one-shot trip source -->
            <field>
              <name>OSHTCOMP1H</name>
              <description>COMP1H as a one-shot trip source</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OSHTCOMP0L: COMP0L as a one-shot trip source -->
            <field>
              <name>OSHTCOMP0L</name>
              <description>COMP0L as a one-shot trip source</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OSHTCOMP0H: COMP0H as a one-shot trip source -->
            <field>
              <name>OSHTCOMP0H</name>
              <description>COMP0H as a one-shot trip source</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBCCOMP2L: COMP2L as a cycle-by-cycle trip source -->
            <field>
              <name>CBCCOMP2L</name>
              <description>COMP2L as a cycle-by-cycle trip source</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBCCOMP2H: COMP2H as a cycle-by-cycle trip source -->
            <field>
              <name>CBCCOMP2H</name>
              <description>COMP2H as a cycle-by-cycle trip source</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBCCOMP1L: COMP1L as a cycle-by-cycle trip source -->
            <field>
              <name>CBCCOMP1L</name>
              <description>COMP1L as a cycle-by-cycle trip source</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBCCOMP1H: COMP1H as a cycle-by-cycle trip source -->
            <field>
              <name>CBCCOMP1H</name>
              <description>COMP1H as a cycle-by-cycle trip source</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBCCOMP0L: COMP0L as a cycle-by-cycle trip source -->
            <field>
              <name>CBCCOMP0L</name>
              <description>COMP0L as a cycle-by-cycle trip source</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBCCOMP0H: COMP0H as a cycle-by-cycle  trip source -->
            <field>
              <name>CBCCOMP0H</name>
              <description>COMP0H as a cycle-by-cycle  trip source</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCBEVT1: Digital compare B event 1 as a one-shot trip source -->
            <field>
              <name>DCBEVT1</name>
              <description>Digital compare B event 1 as a one-shot trip source</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ONESHOT_DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONESHOT_ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAEVT1: Digital compare A event 1 as a one-shot trip source -->
            <field>
              <name>DCAEVT1</name>
              <description>Digital compare A event 1 as a one-shot trip source</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ONESHOT_DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONESHOT_ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OSHTCLKERR: Clock error as a one-shot trip source -->
            <field>
              <name>OSHTCLKERR</name>
              <description>Clock error as a one-shot trip source</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OSHT5: TZ5 as a one-shot trip source -->
            <field>
              <name>OSHT5</name>
              <description>TZ5 as a one-shot trip source</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OSHT4: TZ4 as a one-shot trip source -->
            <field>
              <name>OSHT4</name>
              <description>TZ4 as a one-shot trip source</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OSHT3: TZ3 as a one-shot trip source -->
            <field>
              <name>OSHT3</name>
              <description>TZ3 as a one-shot trip source</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OSHT2: TZ2 as a one-shot trip source -->
            <field>
              <name>OSHT2</name>
              <description>TZ2 as a one-shot trip source</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OSHT1: TZ1 as a one-shot trip source -->
            <field>
              <name>OSHT1</name>
              <description>TZ1 as a one-shot trip source</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCBEVT2: Digital compare output B event 2 as a cycle-by-cycle trip source -->
            <field>
              <name>DCBEVT2</name>
              <description>Digital compare output B event 2 as a cycle-by-cycle trip source</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CBC_DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CBC_ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAEVT2: Digital compare output A event 2 as a cycle-by-cycle trip source -->
            <field>
              <name>DCAEVT2</name>
              <description>Digital compare output A event 2 as a cycle-by-cycle trip source</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CBC_DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CBC_ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBCCLKERR: CLKDET error as a cycle-by-cycle trip source -->
            <field>
              <name>CBCCLKERR</name>
              <description>CLKDET error as a cycle-by-cycle trip source</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBC5: TZ5 as a cycle-by-cycle trip source -->
            <field>
              <name>CBC5</name>
              <description>TZ5 as a cycle-by-cycle trip source</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBC4: TZ4 as a cycle-by-cycle trip source -->
            <field>
              <name>CBC4</name>
              <description>TZ4 as a cycle-by-cycle trip source</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBC3: TZ3 as a cycle-by-cycle trip source -->
            <field>
              <name>CBC3</name>
              <description>TZ3 as a cycle-by-cycle trip source</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBC2: TZ2 as a cycle-by-cycle trip source -->
            <field>
              <name>CBC2</name>
              <description>TZ2 as a cycle-by-cycle trip source</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBC1: TZ1 as a cycle-by-cycle trip source -->
            <field>
              <name>CBC1</name>
              <description>TZ1 as a cycle-by-cycle trip source</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- TZCTL: Trip-Zone Control Register -->
        <register>
          <name>TZCTL</name>
          <displayName>TZCTL</displayName>
          <description>Trip-Zone Control Register</description>
          <addressOffset>0x00000048</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DCBEVT2: Action on output B when a digital compare B event 2 occurs -->
            <field>
              <name>DCBEVT2</name>
              <description>Action on output B when a digital compare B event 2 occurs</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRI_STATE</name>
                  <description>Set output B to high-impedance</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Force output B to high state</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Force output B to low state</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing for output B</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCBEVT1: Action on output B when a digital compare B event 1 occurs -->
            <field>
              <name>DCBEVT1</name>
              <description>Action on output B when a digital compare B event 1 occurs</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRI_STATE</name>
                  <description>Set output B to high-impedance</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Force output B to high state</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Force output B to low state</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing for output B</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAEVT2: Action on output A when a digital compare A event 2 occurs -->
            <field>
              <name>DCAEVT2</name>
              <description>Action on output A when a digital compare A event 2 occurs</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRI_STATE</name>
                  <description>Set output A to high-impedance</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Force output A to high state</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Force output A to low state</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing for output A</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAEVT1: Action on output A when a digital compare A event 1 occurs -->
            <field>
              <name>DCAEVT1</name>
              <description>Action on output A when a digital compare A event 1 occurs</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRI_STATE</name>
                  <description>Set output A to high-impedance</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Force output A to high state</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Force output A to low state</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing for output A</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TZB: Action on output B when a trip event occurs -->
            <field>
              <name>TZB</name>
              <description>Action on output B when a trip event occurs</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRI_STATE</name>
                  <description>Set output B to high-impedance</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Force output B to high state</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Force output B to low state</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing for output B</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TZA: Action on output A when a trip event occurs -->
            <field>
              <name>TZA</name>
              <description>Action on output A when a trip event occurs</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRI_STATE</name>
                  <description>Set output A to high-impedance</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_HIGH</name>
                  <description>Force output A to high state</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SET_LOW</name>
                  <description>Force output A to low state</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DO_NOTHING</name>
                  <description>Do nothing for output A</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- TZIE: Trip-Zone Enable Interrupt Register -->
        <register>
          <name>TZIE</name>
          <displayName>TZIE</displayName>
          <description>Trip-Zone Enable Interrupt Register</description>
          <addressOffset>0x0000004C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DCBEVT2: Digital compare B event 2 interrupt -->
            <field>
              <name>DCBEVT2</name>
              <description>Digital compare B event 2 interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCBEVT1: Digital compare B event 1 interrupt -->
            <field>
              <name>DCBEVT1</name>
              <description>Digital compare B event 1 interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAEVT2: Digital compare A event 2 interrupt -->
            <field>
              <name>DCAEVT2</name>
              <description>Digital compare A event 2 interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAEVT1: Digital compare A event 1 interrupt -->
            <field>
              <name>DCAEVT1</name>
              <description>Digital compare A event 1 interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OST: One-shot trip-zone interrupt -->
            <field>
              <name>OST</name>
              <description>One-shot trip-zone interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBC: Cycle-by-cycle trip-zone interrupt -->
            <field>
              <name>CBC</name>
              <description>Cycle-by-cycle trip-zone interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- TZFLG: Trip-Zone Flag Register -->
        <register>
          <name>TZFLG</name>
          <displayName>TZFLG</displayName>
          <description>Trip-Zone Flag Register</description>
          <addressOffset>0x00000050</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DCBEVT2: Latched digital compare B event 2 status flag -->
            <field>
              <name>DCBEVT2</name>
              <description>Latched digital compare B event 2 status flag</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No comprator B event 2 has occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Comparator B event 2 has occurred. It is cleared by writing 1 to TZCLR.DCBEVT2.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCBEVT1: Latched digital compare B event 1 status flag -->
            <field>
              <name>DCBEVT1</name>
              <description>Latched digital compare B event 1 status flag</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No comprator B event 1 has occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Comparator B event 1 has occurred. It is cleared by writing 1 to TZCLR.DCBEVT1.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAEVT2: Latched digital compare A event 2 status flag -->
            <field>
              <name>DCAEVT2</name>
              <description>Latched digital compare A event 2 status flag</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No comprator A event 2 has occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Comparator A event 2 has occurred. It is cleared by writing 1 to TZCLR.DCAEVT2.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAEVT1: Latched digital compare A event 1 status flag -->
            <field>
              <name>DCAEVT1</name>
              <description>Latched digital compare A event 1 status flag</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No comprator A event 1 has occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Comparator A event 1 has occurred. It is cleared by writing 1 to TZCLR.DCAEVT1.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OST: Latched one-shot trip event status flag -->
            <field>
              <name>OST</name>
              <description>Latched one-shot trip event status flag</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No one-shot trip event has occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>A one-shot trip event occurred. It is cleared by writing 1 to TZCLR.OST.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBC: Latched cycle-by-cycle trip event status flag -->
            <field>
              <name>CBC</name>
              <description>Latched cycle-by-cycle trip event status flag</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No cycle-by-cycle trip event has occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>A cycle-by-cycle trip event occurred. It will remain set until it is manually cleared by wring 1 to TZCLR.CBC. If the cycle-by-cycle trip event is still present when the CBC bit is cleared, it will be immediately set agian.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT: Latched trip interrupt status flag -->
            <field>
              <name>INT</name>
              <description>Latched trip interrupt status flag</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No interrupt has been generated</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Trip-zone interrupt was generated. No further trip-zone interrupt will be generated until this flag is cleared by writing 1 to TZCLR.INT. If eigher CBC or OST flag is set, another interrupt pulse will be generated when this flag is cleared.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- TZCLR: Trip-Zone Clear Register -->
        <register>
          <name>TZCLR</name>
          <displayName>TZCLR</displayName>
          <description>Trip-Zone Clear Register</description>
          <addressOffset>0x00000054</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DCBEVT2: Clear digital compare B event 2 status flag -->
            <field>
              <name>DCBEVT2</name>
              <description>Clear digital compare B event 2 status flag</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Write a 1 clears TZFLG.DCBEVT2</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCBEVT1: Clear digital compare B event 1 status flag -->
            <field>
              <name>DCBEVT1</name>
              <description>Clear digital compare B event 1 status flag</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Write a 1 clears TZFLG.DCBEVT1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAEVT2: Clear digital compare A event 2 status flag -->
            <field>
              <name>DCAEVT2</name>
              <description>Clear digital compare A event 2 status flag</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Write a 1 clears TZFLG.DCAEVT2</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAEVT1: Clear digital compare A event 1 status flag -->
            <field>
              <name>DCAEVT1</name>
              <description>Clear digital compare A event 1 status flag</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Write a 1 clears TZFLG.DCAEVT1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OST: Clear one-shot trip status flag -->
            <field>
              <name>OST</name>
              <description>Clear one-shot trip status flag</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Write a 1 clears TZFLG.OST</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBC: Clear cycle-by-cycle trip status flag -->
            <field>
              <name>CBC</name>
              <description>Clear cycle-by-cycle trip status flag</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Write a 1 clears TZFLG.CBC</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT: Clear global interrupt status flag -->
            <field>
              <name>INT</name>
              <description>Clear global interrupt status flag</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Write a 1 clears TZFLG.INT</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- TZFRC: Trip-Zone Force Register -->
        <register>
          <name>TZFRC</name>
          <displayName>TZFRC</displayName>
          <description>Trip-Zone Force Register</description>
          <addressOffset>0x00000058</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DCBEVT2: Software force a digital compare B event 2 -->
            <field>
              <name>DCBEVT2</name>
              <description>Software force a digital compare B event 2</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_EVENT</name>
                  <description>Write a 1 forces a digital compare B event 2 and sets TZFLG.DCBEVT2</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCBEVT1: Software force a digital compare B event 1 -->
            <field>
              <name>DCBEVT1</name>
              <description>Software force a digital compare B event 1</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_EVENT</name>
                  <description>Write a 1 forces a digital compare B event 1 and sets TZFLG.DCBEVT1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAEVT2: Software force a digital compare A event 2 -->
            <field>
              <name>DCAEVT2</name>
              <description>Software force a digital compare A event 2</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_EVENT</name>
                  <description>Write a 1 forces a digital compare A event 2 and sets TZFLG.DCAEVT2</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAEVT1: Software force a digital compare A event 1 -->
            <field>
              <name>DCAEVT1</name>
              <description>Software force a digital compare A event 1</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_EVENT</name>
                  <description>Write a 1 forces a digital compare A event 1 and sets TZFLG.DCAEVT1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OST: Software force a one-shot trip event -->
            <field>
              <name>OST</name>
              <description>Software force a one-shot trip event</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_EVENT</name>
                  <description>Write a 1 forces a one-shot trip event and sets TZFLG.OST</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CBC: Software force a cycle-by-cycle trip event -->
            <field>
              <name>CBC</name>
              <description>Software force a cycle-by-cycle trip event</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_EVENT</name>
                  <description>Write a 1 forces a cycle-by-cycle trip event and sets TZFLG.CBC</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- TZDCSEL: Trip-Zone Digital Compare Event Select Register -->
        <register>
          <name>TZDCSEL</name>
          <displayName>TZDCSEL</displayName>
          <description>Trip-Zone Digital Compare Event Select Register</description>
          <addressOffset>0x0000005C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DCBEVT2: Digital compare B event 2 option -->
            <field>
              <name>DCBEVT2</name>
              <description>Digital compare B event 2 option</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Event disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCBH_LOW_DCBL_X</name>
                  <description>DCBH=low, DCBL=don&apos;t care</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCBH_HIGH_DCBL_X</name>
                  <description>DCBH=high, DCBL=don&apos;t care</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCBH_X_DCBL_LOW</name>
                  <description>DCBL=low, DCBH=don&apos;t care</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCBH_X_DCBL_HIGH</name>
                  <description>DCBL=high, DCBH=don&apos;t care</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCBH_LOW_DCBL_HIGH</name>
                  <description>DCBL=high, DCBH=low</description>
                  <value>0x5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCBEVT1: Digital compare B event 1 option -->
            <field>
              <name>DCBEVT1</name>
              <description>Digital compare B event 1 option</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Event disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCBH_LOW_DCBL_X</name>
                  <description>DCBH=low, DCBL=don&apos;t care</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCBH_HIGH_DCBL_X</name>
                  <description>DCBH=high, DCBL=don&apos;t care</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCBH_X_DCBL_LOW</name>
                  <description>DCBL=low, DCBH=don&apos;t care</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCBH_X_DCBL_HIGH</name>
                  <description>DCBL=high, DCBH=don&apos;t care</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCBH_LOW_DCBL_HIGH</name>
                  <description>DCBL=high, DCBH=low</description>
                  <value>0x5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAEVT2: Digital compare A event 2 option -->
            <field>
              <name>DCAEVT2</name>
              <description>Digital compare A event 2 option</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Event disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCAH_LOW_DCAL_X</name>
                  <description>DCAH=low, DCAL=don&apos;t care</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCAH_HIGH_DCAL_X</name>
                  <description>DCAH=high, DCAL=don&apos;t care</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCAH_X_DCAL_LOW</name>
                  <description>DCAL=low, DCAH=don&apos;t care</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCAH_X_DCAL_HIGH</name>
                  <description>DCAL=high, DCAH=don&apos;t care</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCAH_LOW_DCAL_HIGH</name>
                  <description>DCAL=high, DCAH=low</description>
                  <value>0x5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAEVT1: Digital compare A event 1 option -->
            <field>
              <name>DCAEVT1</name>
              <description>Digital compare A event 1 option</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Event disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCAH_LOW_DCAL_X</name>
                  <description>DCAH=low, DCAL=don&apos;t care</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCAH_HIGH_DCAL_X</name>
                  <description>DCAH=high, DCAL=don&apos;t care</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCAH_X_DCAL_LOW</name>
                  <description>DCAL=low, DCAH=don&apos;t care</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCAH_X_DCAL_HIGH</name>
                  <description>DCAL=high, DCAH=don&apos;t care</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCAH_LOW_DCAL_HIGH</name>
                  <description>DCAL=high, DCAH=low</description>
                  <value>0x5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- DCTRIPSEL: Digital Compare Trip Select Register -->
        <register>
          <name>DCTRIPSEL</name>
          <displayName>DCTRIPSEL</displayName>
          <description>Digital Compare Trip Select Register</description>
          <addressOffset>0x00000060</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DCBLCOMPSEL: Digital compare B low input select -->
            <field>
              <name>DCBLCOMPSEL</name>
              <description>Digital compare B low input select</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TZ1</name>
                  <description>TZ1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ2</name>
                  <description>TZ2</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ3</name>
                  <description>TZ3</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ4</name>
                  <description>TZ4</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ5</name>
                  <description>TZ5</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP0H</name>
                  <description>COMP0H</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP0L</name>
                  <description>COMP0L</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP1H</name>
                  <description>COMP1H</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP1L</name>
                  <description>COMP1L</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP2H</name>
                  <description>COMP2H</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP2L</name>
                  <description>COMP2L</description>
                  <value>0xD</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCBHCOMPSEL: Digital compare B high input select -->
            <field>
              <name>DCBHCOMPSEL</name>
              <description>Digital compare B high input select</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TZ1</name>
                  <description>TZ1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ2</name>
                  <description>TZ2</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ3</name>
                  <description>TZ3</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ4</name>
                  <description>TZ4</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ5</name>
                  <description>TZ5</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP0H</name>
                  <description>COMP0H</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP0L</name>
                  <description>COMP0L</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP1H</name>
                  <description>COMP1H</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP1L</name>
                  <description>COMP1L</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP2H</name>
                  <description>COMP2H</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP2L</name>
                  <description>COMP2L</description>
                  <value>0xD</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCALCOMPSEL: Digital compare A low input select -->
            <field>
              <name>DCALCOMPSEL</name>
              <description>Digital compare A low input select</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TZ1</name>
                  <description>TZ1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ2</name>
                  <description>TZ2</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ3</name>
                  <description>TZ3</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ4</name>
                  <description>TZ4</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ5</name>
                  <description>TZ5</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP0H</name>
                  <description>COMP0H</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP0L</name>
                  <description>COMP0L</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP1H</name>
                  <description>COMP1H</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP1L</name>
                  <description>COMP1L</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP2H</name>
                  <description>COMP2H</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP2L</name>
                  <description>COMP2L</description>
                  <value>0xD</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCAHCOMPSEL: Digital compare A high input select -->
            <field>
              <name>DCAHCOMPSEL</name>
              <description>Digital compare A high input select</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TZ1</name>
                  <description>TZ1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ2</name>
                  <description>TZ2</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ3</name>
                  <description>TZ3</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ4</name>
                  <description>TZ4</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TZ5</name>
                  <description>TZ5</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP0H</name>
                  <description>COMP0H</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP0L</name>
                  <description>COMP0L</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP1H</name>
                  <description>COMP1H</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP1L</name>
                  <description>COMP1L</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP2H</name>
                  <description>COMP2H</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP2L</name>
                  <description>COMP2L</description>
                  <value>0xD</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- DCACTL: Digital Compare A Control Register -->
        <register>
          <name>DCACTL</name>
          <displayName>DCACTL</displayName>
          <description>Digital Compare A Control Register</description>
          <addressOffset>0x00000064</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EVT2SRCASYNC: DCAEVT2 source signal is asynchronous/synchronous -->
            <field>
              <name>EVT2SRCASYNC</name>
              <description>DCAEVT2 source signal is asynchronous/synchronous</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DCAEVT2_SYNC</name>
                  <description>Synchronous </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCAEVT2_ASYNC</name>
                  <description>Asynchronous</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EVT2SRCSEL: DCAEVT2 source signal select -->
            <field>
              <name>EVT2SRCSEL</name>
              <description>DCAEVT2 source signal select</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DCAEVT2</name>
                  <description>Source signal is DCAEVT2</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCEVTFILT</name>
                  <description>Source signal is DCEVTFILT</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EVT1SYNCE: DCAEVT1 SYNC generation -->
            <field>
              <name>EVT1SYNCE</name>
              <description>DCAEVT1 SYNC generation</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EVT1SOCE: DCAEVT1 SOC generation -->
            <field>
              <name>EVT1SOCE</name>
              <description>DCAEVT1 SOC generation</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EVT1SRCASYNC: DCAEVT1 source signal is asynchronous/synchronous (1/0) -->
            <field>
              <name>EVT1SRCASYNC</name>
              <description>DCAEVT1 source signal is asynchronous/synchronous (1/0)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DCAEVT1_SYNC</name>
                  <description>Synchronous </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCAEVT1_ASYNC</name>
                  <description>Asynchronous</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EVT1SRCSEL: DCAEVT1 source signal select -->
            <field>
              <name>EVT1SRCSEL</name>
              <description>DCAEVT1 source signal select</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DCAEVT1</name>
                  <description>Source signal is DCAEVT1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCEVTFILT</name>
                  <description>Source signal is DCEVTFILT</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- DCBCTL: Digital Compare B Control Register -->
        <register>
          <name>DCBCTL</name>
          <displayName>DCBCTL</displayName>
          <description>Digital Compare B Control Register</description>
          <addressOffset>0x00000068</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EVT2SRCASYNC: DCBEVT2 source signal is asynchronous/synchronous (1/0) -->
            <field>
              <name>EVT2SRCASYNC</name>
              <description>DCBEVT2 source signal is asynchronous/synchronous (1/0)</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DCBEVT2_SYNC</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCBEVT2_ASYNC</name>
                  <description>None</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EVT2SRCSEL: DCBEVT2 source signal select -->
            <field>
              <name>EVT2SRCSEL</name>
              <description>DCBEVT2 source signal select</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DCBEVT2</name>
                  <description>Source signal is DCBEVT2</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCEVTFILT</name>
                  <description>Source signal is DCEVTFILT</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EVT1SYNCE: DCBEVT1 SYNC generation -->
            <field>
              <name>EVT1SYNCE</name>
              <description>DCBEVT1 SYNC generation</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EVT1SOCE: DCBEVT1 SOC generation -->
            <field>
              <name>EVT1SOCE</name>
              <description>DCBEVT1 SOC generation</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EVT1SRCASYNC: DCBEVT1 source signal is asynchronous/synchronous -->
            <field>
              <name>EVT1SRCASYNC</name>
              <description>DCBEVT1 source signal is asynchronous/synchronous</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DCBEVT1_SYNC</name>
                  <description>Synchronous </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCBEVT1_ASYNC</name>
                  <description>Asynchronous</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EVT1SRCSEL: DCBEVT1 source signal select -->
            <field>
              <name>EVT1SRCSEL</name>
              <description>DCBEVT1 source signal select</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DCBEVT1</name>
                  <description>Source signal is DCBEVT1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCEVTFILT</name>
                  <description>Source signal is DCEVTFILT</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- DCFCTL: Digital Compare Filter Register -->
        <register>
          <name>DCFCTL</name>
          <displayName>DCFCTL</displayName>
          <description>Digital Compare Filter Register</description>
          <addressOffset>0x0000006C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- PULSESEL: Pulse select for blanking and capture alignment -->
            <field>
              <name>PULSESEL</name>
              <description>Pulse select for blanking and capture alignment</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ALIGN_FROM_PERIOD</name>
                  <description>TBCNT=TBPRD</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ALIGN_FROM_ZERO</name>
                  <description>TBCNT=Zero</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- BLANKINV: Blanking window inversion -->
            <field>
              <name>BLANKINV</name>
              <description>Blanking window inversion</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- BLANKEN: Blanking window -->
            <field>
              <name>BLANKEN</name>
              <description>Blanking window</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SRCSEL: DCEVTFILT signal source select -->
            <field>
              <name>SRCSEL</name>
              <description>DCEVTFILT signal source select</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DCAEVT1</name>
                  <description>Source is DCAEVT1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCAEVT2</name>
                  <description>Source is DCAEVT2</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCBEVT1</name>
                  <description>Source is DCBEVT1</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCBEVT2</name>
                  <description>Source is DCBEVT2</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- DCCAPCTL: Digital Compare Capture Control Register -->
        <register>
          <name>DCCAPCTL</name>
          <displayName>DCCAPCTL</displayName>
          <description>Digital Compare Capture Control Register</description>
          <addressOffset>0x00000070</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SHDWMODE: TBCNT capture mode select -->
            <field>
              <name>SHDWMODE</name>
              <description>TBCNT capture mode select</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Shadow mode. The DCCAP active value is copied to shadow register on a TBCNT=TBPRD or TBCNT=zero event as defined by DCFCTL.PULSESEL. Reads of the DCCAP register always returns the shadow register contents.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Direct mode. Reads of the DCCAP register always returns the active value.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CAPEN: TBCNT counter capture -->
            <field>
              <name>CAPEN</name>
              <description>TBCNT counter capture</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- DCCAP: Digital Compare Counter Capture Register -->
        <register>
          <name>DCCAP</name>
          <displayName>DCCAP</displayName>
          <description>Digital Compare Counter Capture Register</description>
          <addressOffset>0x00000074</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Captured TBCNT value upon a rising-edge of DCEVTFLT In shadow mode, the captured value is copied to the shadow register on a TBCNT=TBPRD or TBCNT=zero event as defined by DCFCTL.PULSESEL. Reads of the DCCAP register always returns the shadow register contents. In direct mode, reads of the DCCAP register always returns the active value. -->
            <field>
              <name>VAL</name>
              <description>Captured TBCNT value upon a rising-edge of DCEVTFLT\nIn shadow mode, the captured value is copied to the shadow register on a TBCNT=TBPRD or TBCNT=zero event as defined by DCFCTL.PULSESEL. Reads of the DCCAP register always returns the shadow register contents.\nIn direct mode, reads of the DCCAP register always returns the active value.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DCFOFFSET: Digital Compare Filter Offset Register -->
        <register>
          <name>DCFOFFSET</name>
          <displayName>DCFOFFSET</displayName>
          <description>Digital Compare Filter Offset Register</description>
          <addressOffset>0x00000078</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Blanking window offset It defines the number of TBCLK cycles from the blanking window reference specified by DCFCTL.PULSESEL to the point when the blanking window is applied. -->
            <field>
              <name>VAL</name>
              <description>Blanking window offset\nIt defines the number of TBCLK cycles from the blanking window reference specified by DCFCTL.PULSESEL to the point when the blanking window is applied.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- DCFOFFSETCNT: Digital Compare Filter Offset Counter Register -->
        <register>
          <name>DCFOFFSETCNT</name>
          <displayName>DCFOFFSETCNT</displayName>
          <description>Digital Compare Filter Offset Counter Register</description>
          <addressOffset>0x0000007C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Blanking offset counter It is read only and indicates the current value of the offset counter. The counter counts down to zero and then stops until it is re-loaded on the next event defined by DCFCTL.PULSESEL. -->
            <field>
              <name>VAL</name>
              <description>Blanking offset counter\nIt is read only and indicates the current value of the offset counter. The counter counts down to zero and then stops until it is re-loaded on the next event defined by DCFCTL.PULSESEL.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- DCFWINDOW: Digital Compare Filter Window Register -->
        <register>
          <name>DCFWINDOW</name>
          <displayName>DCFWINDOW</displayName>
          <description>Digital Compare Filter Window Register</description>
          <addressOffset>0x00000080</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Blanking window width in TBCLK cycles The blanking window begins when the offset counter expires. When this occurs, the window counter is loaded and begins to count down. If the blanking window is currently active and the offset counter expires, the blanking window counter is restarted. The blanking window can cross a PWM period boundary. No blanking window is generated when it is set to zero. -->
            <field>
              <name>VAL</name>
              <description>Blanking window width in TBCLK cycles\nThe blanking window begins when the offset counter expires. When this occurs, the window counter is loaded and begins to count down. If the blanking window is currently active and the offset counter expires, the blanking window counter is restarted.\nThe blanking window can cross a PWM period boundary.\nNo blanking window is generated when it is set to zero.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- DCFWINDOWCNT: Digital Compare Filter Window Counter Register -->
        <register>
          <name>DCFWINDOWCNT</name>
          <displayName>DCFWINDOWCNT</displayName>
          <description>Digital Compare Filter Window Counter Register</description>
          <addressOffset>0x00000084</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Blanking window counter It is read only and indicates the current value of the window counter. The counter counts down to zero and then stops until it is re-loaded when the offset counter reaches zero again. -->
            <field>
              <name>VAL</name>
              <description>Blanking window counter\nIt is read only and indicates the current value of the window counter. The counter counts down to zero and then stops until it is re-loaded when the offset counter reaches zero again.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- ETSEL: Event-Trigger Select Register -->
        <register>
          <name>ETSEL</name>
          <displayName>ETSEL</displayName>
          <description>Event-Trigger Select Register</description>
          <addressOffset>0x00000088</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SOCBEN: ADC start of conversion B (SOCB) pulse -->
            <field>
              <name>SOCBEN</name>
              <description>ADC start of conversion B (SOCB) pulse</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOCBSEL: PWM SOCB options -->
            <field>
              <name>SOCBSEL</name>
              <description>PWM SOCB options</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DVBEVT1_SOC</name>
                  <description>Enable DCBEVT1.SOC event</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TBCNT_EQU_ZERO</name>
                  <description>Enable event TBCNT=0</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TBCNT_EQU_PERIOD</name>
                  <description>Enable event TBCNT=TBPRD</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TBCNT_EQU_ZERO_PERIOD</name>
                  <description>Enable event TBCNT=0 or TBCNT=TBPRD</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPA_UP_COUNTING</name>
                  <description>Enable event TBCNT=CMPA when counter is incrementing</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPA_DOWN_COUNTING</name>
                  <description>Enable event TBCNT=CMPA when counter is decrementing</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPB_UP_COUNTING</name>
                  <description>Enable event TBCNT=CMPB when counter is incrementing</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPB_DOWN_COUNTING</name>
                  <description>Enable event TBCNT=CMPB when counter is decrementing</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOCAEN: Enable/disable ADC start of conversion A (SOCA) pulse -->
            <field>
              <name>SOCAEN</name>
              <description>Enable/disable ADC start of conversion A (SOCA) pulse</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOCASEL: PWM SOCA options -->
            <field>
              <name>SOCASEL</name>
              <description>PWM SOCA options</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DVAEVT1_SOC</name>
                  <description>Enable DCAEVT1.SOC event</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TBCNT_EQU_ZERO</name>
                  <description>Enable event TBCNT=0</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TBCNT_EQU_PERIOD</name>
                  <description>Enable event TBCNT=TBPRD</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TBCNT_EQU_ZERO_PERIOD</name>
                  <description>Enable event TBCNT=0 or TBCNT=TBPRD</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPA_UP_COUNTING</name>
                  <description>Enable event TBCNT=CMPA when counter is incrementing</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPA_DOWN_COUNTING</name>
                  <description>Enable event TBCNT=CMPA when counter is decrementing</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPB_UP_COUNTING</name>
                  <description>Enable event TBCNT=CMPB when counter is incrementing</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPB_DOWN_COUNTING</name>
                  <description>Enable event TBCNT=CMPB when counter is decrementing</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INTEN:  PWM interrupt -->
            <field>
              <name>INTEN</name>
              <description> PWM interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INTSEL: PWM interrupt selection -->
            <field>
              <name>INTSEL</name>
              <description>PWM interrupt selection</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TBCNT_EQU_ZERO</name>
                  <description>Enable event TBCNT=0</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TBCNT_EQU_PERIOD</name>
                  <description>Enable event TBCNT=TBPRD</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TBCNT_EQU_ZERO_PERIOD</name>
                  <description>Enable event TBCNT=0 or TBCNT=TBPRD</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPA_UP_COUNTING</name>
                  <description>Enable event TBCNT=CMPA when counter is incrementing</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPA_DOWN_COUNTING</name>
                  <description>Enable event TBCNT=CMPA when counter is decrementing</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPB_UP_COUNTING</name>
                  <description>Enable event TBCNT=CMPB when counter is incrementing</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CMPB_DOWN_COUNTING</name>
                  <description>Enable event TBCNT=CMPB when counter is decrementing</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ETPS: Event-Trigger Prescale Register -->
        <register>
          <name>ETPS</name>
          <displayName>ETPS</displayName>
          <description>Event-Trigger Prescale Register</description>
          <addressOffset>0x0000008C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SOCBCNT: PWM ADC start-of-conversion B event (SOCB) counter It indicates how many selected ETSEL.SOCBSEL events have occurred -->
            <field>
              <name>SOCBCNT</name>
              <description>PWM ADC start-of-conversion B event (SOCB) counter\nIt indicates how many selected ETSEL.SOCBSEL events have occurred</description>
              <bitRange>[15:14]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EVENT_OCCUR</name>
                  <description>No events have occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1_EVENT_OCCUR</name>
                  <description>1 event has occurred</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2_EVENT_OCCUR</name>
                  <description>2 events have occurred</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3_EVENT_OCCUR</name>
                  <description>3 events have occurred</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOCBPRD: PWM ADC start-of-conversion B event (SOCB) period select It determines how many selected ETSEL.SOCBSEL events need to occur before an SOCB pulse is generated. To be generated, it must be enabled by setting ETSEL.SOCBEN=1. The pulse will be generated even if the status flag is set from a previous start of conversion (ETFLG.SOCB=1). Once the SOCB pulse is generated, the ETPS.SOCBCNT will automatically be cleared.  -->
            <field>
              <name>SOCBPRD</name>
              <description>PWM ADC start-of-conversion B event (SOCB) period select\nIt determines how many selected ETSEL.SOCBSEL events need to occur before an SOCB pulse is generated. To be generated, it must be enabled by setting ETSEL.SOCBEN=1. The pulse will be generated even if the status flag is set from a previous start of conversion (ETFLG.SOCB=1). Once the SOCB pulse is generated, the ETPS.SOCBCNT will automatically be cleared.\n</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GEN_SOCB_DISABLE</name>
                  <description>Disable SOCB event counter. No SOCB pulse will be generated.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GEN_SOCB_ON_1ST_EVENT</name>
                  <description>Generate SOCB pulse when ETPS.SOCBCNT=01 (first event)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GEN_SOCB_ON_2ND_EVENT</name>
                  <description>Generate SOCB pulse when ETPS.SOCBCNT=10 (second event)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GEN_SOCB_ON_3RD_EVENT</name>
                  <description>Generate SOCB pulse when ETPS.SOCBCNT=11 (third event)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOCACNT: PWM ADC start-of-conversion A event (SOCA) counter It indicates how many selected ETSEL.SOCASEL events have occurred  -->
            <field>
              <name>SOCACNT</name>
              <description>PWM ADC start-of-conversion A event (SOCA) counter\nIt indicates how many selected ETSEL.SOCASEL events have occurred\n</description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EVENT_OCCUR</name>
                  <description>No events have occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1_EVENT_OCCUR</name>
                  <description>1 event has occurred</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2_EVENT_OCCUR</name>
                  <description>2 events have occurred</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3_EVENT_OCCUR</name>
                  <description>3 events have occurred</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOCAPRD: PWM ADC start-of-conversion A event (SOCA) period select It determines how many selected ETSEL.SOCASEL events need to occur before an SOCA pulse is generated. To be generated, it must be enabled by setting ETSEL.SOCAEN=1. The pulse will be generated even if the status flag is set from a previous start of conversion (ETFLG.SOCA=1). Once the SOCA pulse is generated, the ETPS.SOCACNT will automatically be cleared. -->
            <field>
              <name>SOCAPRD</name>
              <description>PWM ADC start-of-conversion A event (SOCA) period select\nIt determines how many selected ETSEL.SOCASEL events need to occur before an SOCA pulse is generated. To be generated, it must be enabled by setting ETSEL.SOCAEN=1. The pulse will be generated even if the status flag is set from a previous start of conversion (ETFLG.SOCA=1). Once the SOCA pulse is generated, the ETPS.SOCACNT will automatically be cleared.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GEN_SOCA_DISABLE</name>
                  <description>Disable SOCA event counter. No SOCA pulse will be generated.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GEN_SOCA_ON_1ST_EVENT</name>
                  <description>Generate SOCA pulse when ETPS.SOCACNT=01 (first event)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GEN_SOCA_ON_2ND_EVENT</name>
                  <description>Generate SOCA pulse when ETPS.SOCACNT=10 (second event)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GEN_SOCA_ON_3RD_EVENT</name>
                  <description>Generate SOCA pulse when ETPS.SOCACNT=11 (third event)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INTCNT: PWM interrupt counter It indicates how many selected ETSEL.INTSEL events have occurred. It is automatically cleared when an interrupt pulse is generated. -->
            <field>
              <name>INTCNT</name>
              <description>PWM interrupt counter\nIt indicates how many selected ETSEL.INTSEL events have occurred. It is automatically cleared when an interrupt pulse is generated.</description>
              <bitRange>[3:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EVENT_OCCUR</name>
                  <description>No events have occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1_EVENT_OCCUR</name>
                  <description>1 event has occurred</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2_EVENT_OCCUR</name>
                  <description>2 events have occurred</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3_EVENT_OCCUR</name>
                  <description>3 events have occurred</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INTPRD: PWM interrupt period select It determines how many selected ETSEL.INTSEL events need to occur before an interrupt is generated. To be generated, the interrupt must be enabled by setting ETSEL.INTEN=1. If the interrupt status flag is set from a previous interrupt (ETFLG.INT=1), no interrupt will be generated until the flag is cleared by writing a 0 to ETCLR.INT. This allows for one interrupt to be pending while another is still being serviced. Once the interrupt is generated, the ETPS.INTCNT will automatically be cleared. Write an INTPRD value that is the same as the current INTCNT value will trigger an interrupt if it is enabled and the status flag is clear. Write an INTPRD value that is less than current INTCNT value will result in an undefined state. -->
            <field>
              <name>INTPRD</name>
              <description>PWM interrupt period select\nIt determines how many selected ETSEL.INTSEL events need to occur before an interrupt is generated. To be generated, the interrupt must be enabled by setting ETSEL.INTEN=1. If the interrupt status flag is set from a previous interrupt (ETFLG.INT=1), no interrupt will be generated until the flag is cleared by writing a 0 to ETCLR.INT. This allows for one interrupt to be pending while another is still being serviced. Once the interrupt is generated, the ETPS.INTCNT will automatically be cleared.\nWrite an INTPRD value that is the same as the current INTCNT value will trigger an interrupt if it is enabled and the status flag is clear.\nWrite an INTPRD value that is less than current INTCNT value will result in an undefined state.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable the interrupt event counter. No interrupt will be generated and ETFRC.INT is ignored.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GEN_INT_ON_1ST_EVENT</name>
                  <description>Generate an interrupt on the first event INTCNT=01 (first event)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GEN_INT_ON_2ND_EVENT</name>
                  <description>Generate interrupt on ETPS.INTCNT=10 (second event)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GEN_INT_ON_3RD_EVENT</name>
                  <description>Generate interrupt on ETPS.INTCNT=11 (third event)</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ETFLG: Event-Trigger Flag Register -->
        <register>
          <name>ETFLG</name>
          <displayName>ETFLG</displayName>
          <description>Event-Trigger Flag Register</description>
          <addressOffset>0x00000090</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SOCB: Latched PWM ADC start-of-conversion B status flag -->
            <field>
              <name>SOCB</name>
              <description>Latched PWM ADC start-of-conversion B status flag</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Indicates no event occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Indicates a SOCB pulse was generated. The pulse will continue to be generated even if the flag is set.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOCA: Latched PWM ADC start-of-conversion A status flag -->
            <field>
              <name>SOCA</name>
              <description>Latched PWM ADC start-of-conversion A status flag</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Indicates no event occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Indicates a SOCA pulse was generated. The pulse will continue to be generated even if the flag is set.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT: Latched PWM interrupt status flag -->
            <field>
              <name>INT</name>
              <description>Latched PWM interrupt status flag</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Indicates no event occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Indicates a PWM interrupt was generated. No further interrupts will be generated until the flag bit is cleared.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ETCLR: Event-Trigger Clear Register -->
        <register>
          <name>ETCLR</name>
          <displayName>ETCLR</displayName>
          <description>Event-Trigger Clear Register</description>
          <addressOffset>0x00000094</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SOCB: Clear ADC start-of-conversion B status flag -->
            <field>
              <name>SOCB</name>
              <description>Clear ADC start-of-conversion B status flag</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Write a 1 clears ETFLG.INT</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOCA: Clear ADC start-of-conversion A status flag -->
            <field>
              <name>SOCA</name>
              <description>Clear ADC start-of-conversion A status flag</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Write a 1 clears ETFLG.INT</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT: Clear PWM interrupt status flag -->
            <field>
              <name>INT</name>
              <description>Clear PWM interrupt status flag</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Write a 1 clears ETFLG.INT</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ETFRC: Event-Trigger Force Register -->
        <register>
          <name>ETFRC</name>
          <displayName>ETFRC</displayName>
          <description>Event-Trigger Force Register</description>
          <addressOffset>0x00000098</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SOCB: Software force a start-of-conversion B pulse This bit is ignored if ETSEL.SOCBEN=0 -->
            <field>
              <name>SOCB</name>
              <description>Software force a start-of-conversion B pulse\nThis bit is ignored if ETSEL.SOCBEN=0</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Write a 1 generates an interrupt and sets the ETFLG.SOCB flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOCA: Software force a start-of-conversion A pulse This bit is ignored if ETSEL.SOCAEN=0 -->
            <field>
              <name>SOCA</name>
              <description>Software force a start-of-conversion A pulse\nThis bit is ignored if ETSEL.SOCAEN=0</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Write a 1 generates an interrupt and sets the ETFLG.SOCA flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT: Software force a PWM interrupt This bit is ignored if ETSEL.INTEN=0 or ETPS.INTPRD=00 -->
            <field>
              <name>INT</name>
              <description>Software force a PWM interrupt\nThis bit is ignored if ETSEL.INTEN=0 or ETPS.INTPRD=00</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect and always reads back a 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Write a 1 generates an interrupt and sets the ETFLG.INT flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral derivedFrom="PWM0">
      <name>PWM1</name>
      <baseAddress>0x40007100</baseAddress>
      <interrupt>
         <name>PWM1</name>
         <description>PWM1      </description>
         <value>21</value>
      </interrupt>
    </peripheral>

    <peripheral derivedFrom="PWM0">
      <name>PWM2</name>
      <baseAddress>0x40007200</baseAddress>
      <interrupt>
         <name>PWM2</name>
         <description>PWM2      </description>
         <value>23</value>
      </interrupt>
    </peripheral>

    <peripheral derivedFrom="PWM0">
      <name>PWM3</name>
      <baseAddress>0x40007300</baseAddress>
      <interrupt>
         <name>PWM3</name>
         <description>PWM3      </description>
         <value>25</value>
      </interrupt>
    </peripheral>

    <peripheral derivedFrom="PWM0">
      <name>PWM4</name>
      <baseAddress>0x40007400</baseAddress>
      <interrupt>
         <name>PWM4</name>
         <description>PWM4      </description>
         <value>27</value>
      </interrupt>
    </peripheral>

    <peripheral derivedFrom="PWM0">
      <name>PWM5</name>
      <baseAddress>0x40007500</baseAddress>
      <interrupt>
         <name>PWM5</name>
         <description>PWM5      </description>
         <value>29</value>
      </interrupt>
    </peripheral>

    <peripheral derivedFrom="PWM0">
      <name>PWM6</name>
      <baseAddress>0x40007600</baseAddress>
      <interrupt>
         <name>PWM6</name>
         <description>PWM6      </description>
         <value>31</value>
      </interrupt>
    </peripheral>

    <peripheral derivedFrom="WDT1">
      <name>WDT0</name>
      <baseAddress>0x40008000</baseAddress>
    </peripheral>

    <peripheral>
      <name>QSPI</name>
      <description>NOEN</description>
      <groupName>QSPI</groupName>
      <baseAddress>0x40009000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x3C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
         <name>QSPI</name>
         <description>QSPI      </description>
         <value>4</value>
      </interrupt>
      <registers>

        <!-- QSPICTL0: Serial Interface Control Register 0 -->
        <register>
          <name>QSPICTL0</name>
          <displayName>QSPICTL0</displayName>
          <description>Serial Interface Control Register 0</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000052</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- WFIFOOVF: Write FIFO Overflow -->
            <field>
              <name>WFIFOOVF</name>
              <description>Write FIFO Overflow</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Write FIFO is not overflowed</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Write FIFO is overflowed</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFOUDF: Write FIFO Underflow -->
            <field>
              <name>WFIFOUDF</name>
              <description>Write FIFO Underflow</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Write FIFO is not underflowed</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Write FIFO is underflowed</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOOVF: Read FIFO Overflow -->
            <field>
              <name>RFIFOOVF</name>
              <description>Read FIFO Overflow</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Read FIFO is not overflowed</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Read FIFO is overflowed</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOUDF: Read FIFO Underflow -->
            <field>
              <name>RFIFOUDF</name>
              <description>Read FIFO Underflow</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Read FIFO is not underflowed</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Read FIFO is underflowed</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFOFULL: Write FIFO Full -->
            <field>
              <name>WFIFOFULL</name>
              <description>Write FIFO Full</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Write FIFO is not filled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Write FIFO is filled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFOEMPTY: Write FIFO Empty -->
            <field>
              <name>WFIFOEMPTY</name>
              <description>Write FIFO Empty</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Write FIFO is not emptied</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Write FIFO is emptied</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOFULL: Read FIFO Full -->
            <field>
              <name>RFIFOFULL</name>
              <description>Read FIFO Full</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Read FIFO is not filled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Read FIFO is filled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOEMPTY: Read FIFO Empty -->
            <field>
              <name>RFIFOEMPTY</name>
              <description>Read FIFO Empty</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Read FIFO is not emptied</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Read FIFO is emptied</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RDY: Serial Interface Transfer Ready -->
            <field>
              <name>RDY</name>
              <description>Serial Interface Transfer Ready</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRANSFER_BUSY</name>
                  <description>Serial Interface is currently transferring data</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRANSFER_READY</name>
                  <description>Serial Interface is ready for a new transfer</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN: Serial Select Enable -->
            <field>
              <name>EN</name>
              <description>Serial Select Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Serial select is de-activated</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Serial select is activated</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- QSPICTL1: Serial Interface Control Register 1 -->
        <register>
          <name>QSPICTL1</name>
          <displayName>QSPICTL1</displayName>
          <description>Serial Interface Control Register 1</description>
          <addressOffset>0x00000004</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- START: Transfer Start This bit starts the serial interface I/O transfer. For read transfers, WEN (R04[13]) = 0, the hardware resets this bit to 0 when the number of bytes indicated in QSPIDINCNT(R20h) register have been read in from the interface. For write transfers, WEN (R04[13]) = 1, firmware sets STOP (R04h [14]) = 1 when all data have been written to the WFIFO and WFIFOEMPTY (R00h [6]) = 1. Hardware resets this bit to 0 when all data have been written out the interface. -->
            <field>
              <name>START</name>
              <description>Transfer Start\nThis bit starts the serial interface I/O transfer.\nFor read transfers, WEN (R04[13]) = 0, the hardware\nresets this bit to 0 when the number of bytes indicated in QSPIDINCNT(R20h) register have been read in from the interface.\nFor write transfers, WEN (R04[13]) = 1, firmware sets\nSTOP (R04h [14]) = 1 when all data have been written to the WFIFO and WFIFOEMPTY (R00h [6]) = 1. Hardware resets this bit to 0 when all data have been written out the interface.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRANSFER_COMPLETED</name>
                  <description>Transfer has completed</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRANSFER_START</name>
                  <description>Transfer has started</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- STOP: Transfer Stop This bit stops the serial interface I/O transfer. The transfer stops at either a 1-byte or 4-byte boundary, depending on the setting of BYTELEN (R04h [5]). Once the byte boundary is reached, the hardware resets START (R04h [15]) to 0. Hardware resets this bit to 0 after START has been reset. -->
            <field>
              <name>STOP</name>
              <description>Transfer Stop\nThis bit stops the serial interface I/O transfer.\nThe transfer stops at either a 1-byte or 4-byte boundary,\ndepending on the setting of BYTELEN (R04h [5]). Once\nthe byte boundary is reached, the hardware resets START (R04h [15]) to 0. Hardware resets this bit to 0 after START has been reset.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRANSFER_CONTINUE</name>
                  <description>Continue current transfer</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRANSFER_STOP</name>
                  <description>Stop current transfer</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WEN: Write Enable -->
            <field>
              <name>WEN</name>
              <description>Write Enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>READ</name>
                  <description>Read data from the serial interface</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>WRITE</name>
                  <description>Write data to the serial interface</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ADDRPIN: Address Transfer Pin Number of pins used for transferring the content of the Addr (R14h) register. -->
            <field>
              <name>ADDRPIN</name>
              <description>Address Transfer Pin\nNumber of pins used for transferring the content of the Addr (R14h) register.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1_PIN</name>
                  <description>Use one serial interface pin</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NUM_DATA_PIN</name>
                  <description>Use the number of pins as indicated in DATAPIN (R04h [11:10])</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DATAPIN: Data Transfer Pin Number of pins used for transferring the non-command and nonaddress portions of each serial interface I/O transfer. -->
            <field>
              <name>DATAPIN</name>
              <description>Data Transfer Pin\nNumber of pins used for transferring the non-command and nonaddress portions of each serial interface I/O transfer.</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1_PIN</name>
                  <description>Use 1 serial interface pin (use in single mode)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2_PIN</name>
                  <description>Use 2 serial interface pins (use in dual mode)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3_PIN</name>
                  <description>Use 4 serial interface pins (use in quad mode)</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FIFOFLUSH: Flush Read and Write FIFOs This bit flushes the Read and Write FIFOs. The FIFOs are emptied after being flushed. Hardware resets this bit to 0 after flushing. -->
            <field>
              <name>FIFOFLUSH</name>
              <description>Flush Read and Write FIFOs\nThis bit flushes the Read and Write FIFOs. The FIFOs are emptied after being flushed. Hardware resets this bit to 0 after flushing.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_FLUSH</name>
                  <description>Read and Write FIFOs are not flushed</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FLUSH</name>
                  <description>Read and Write FIFOs are flushed</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLKPOL: Serial Interface Clock Polarity -->
            <field>
              <name>CLKPOL</name>
              <description>Serial Interface Clock Polarity</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INACTIVE_LOW</name>
                  <description>Serial interface clock is low when inactive</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>INACTIVE_HIGH</name>
                  <description>Serial interface clock is high when inactive</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLKPHS: Serial Interface Clock Phase -->
            <field>
              <name>CLKPHS</name>
              <description>Serial Interface Clock Phase</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>Data is latched at the rising edge of the serial interface clock when CLKPOL (R04h [8]) = 0, and at the falling edge of the serial interface clock when CLKPOL = 1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>Data is latched at the falling edge of the serial interface clock when CLK_POL = 0, and at the rising edge of the serial interface clock when CLK_POL = 1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- BYTELEN: Byte Length The number of bytes in each serial interface I/O transfer. -->
            <field>
              <name>BYTELEN</name>
              <description>Byte Length\nThe number of bytes in each serial interface I/O transfer.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1_BYTE</name>
                  <description>1 byte</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4_BYTE</name>
                  <description>4 bytes</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLKDIV: Serial Interface Clock Prescaler (from SPI clock) -->
            <field>
              <name>CLKDIV</name>
              <description>Serial Interface Clock Prescaler (from SPI clock)</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1</name>
                  <description>SPI clock/1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>SPI clock/2</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3</name>
                  <description>SPI clock/3</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>SPI clock/4</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>5</name>
                  <description>SPI clock/5</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>6</name>
                  <description>SPI clock/6</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>7</name>
                  <description>SPI clock/7</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>8</name>
                  <description>SPI clock/8</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>9</name>
                  <description>SPI clock/9</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>10</name>
                  <description>SPI clock/10</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>11</name>
                  <description>SPI clock/11</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>12</name>
                  <description>SPI clock/12</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>13</name>
                  <description>SPI clock/13</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>14</name>
                  <description>SPI clock/14</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>15</name>
                  <description>SPI clock/15</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>16</name>
                  <description>SPI clock/16</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>18</name>
                  <description>SPI clock/18</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>20</name>
                  <description>SPI clock/20</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>22</name>
                  <description>SPI clock/22</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>24</name>
                  <description>SPI clock/24</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>26</name>
                  <description>SPI clock/26</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>28</name>
                  <description>SPI clock/28</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>30</name>
                  <description>SPI clock/30</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- QSPIDOUT: Serial Interface Data Out Register -->
        <register>
          <name>QSPIDOUT</name>
          <displayName>QSPIDOUT</displayName>
          <description>Serial Interface Data Out Register</description>
          <addressOffset>0x00000008</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Serial Interface Data Out Writing to this register stores the data in a 8X32 bit Write FIFO. After the contents of the Instruction register (R10h), the Address register (R14h), the Read Mode register (R18h) and Dummy value are transferred out to the serial interface, the data in the Write FIFO is shifted out. The serial interface clock stops when a Write FIFO empty condition occurs, WFIFOEMPTY (R00h [6]) = 1. The clock restarts when Write FIFO is not empty, WFIFOEMPTY (R00h [6]) = 0. When BYTELEN (R04h [5]) = 0, bits [7:0] are shifted out with bit 7 shifted out first and bit 0 shifted out last. When BYTELEN (R04h [5]) = 1, bits [7:0] are shifted out (bit 7 shifted out first and bit 0 shifted out last), followed by bits [15:8] (bit 15 shifted out first and bit 8 shifted out last), then bits [23:16] (bit 23 shifted out first and bit 16 shifted out last) and finally bits [31:24] (bit 31 shifted out first and bit 24 shifted out last). Note: To avoid a Write FIFO overflow condition (WFIFOOVFW (R00h [11]) = 1), check WFIFOFULL (R00h [7]) is equal to 0 before writing to this register. -->
            <field>
              <name>VAL</name>
              <description>Serial Interface Data Out\nWriting to this register stores the data in a 8X32 bit Write\nFIFO. After the contents of the Instruction register (R10h), the Address register (R14h), the Read Mode register (R18h) and Dummy value are transferred out to the serial interface, the data in the Write FIFO is shifted out. The serial interface clock stops when a Write FIFO empty condition occurs, WFIFOEMPTY (R00h [6]) = 1. The clock restarts when Write FIFO is not empty, WFIFOEMPTY (R00h [6]) = 0.\nWhen BYTELEN (R04h [5]) = 0, bits [7:0] are shifted out\nwith bit 7 shifted out first and bit 0 shifted out last. When BYTELEN (R04h [5]) = 1, bits [7:0] are shifted out (bit 7 shifted out first and bit 0 shifted out last), followed by bits [15:8] (bit 15 shifted out first and bit 8 shifted out last), then bits [23:16] (bit 23 shifted out first and bit 16 shifted out last) and finally bits [31:24] (bit 31 shifted out first and bit 24 shifted out last).\nNote: To avoid a Write FIFO overflow condition (WFIFOOVFW (R00h [11]) = 1), check WFIFOFULL (R00h [7]) is equal to 0 before writing to this register.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- QSPIDIN: Serial Interface Data In Register -->
        <register>
          <name>QSPIDIN</name>
          <displayName>QSPIDIN</displayName>
          <description>Serial Interface Data In Register</description>
          <addressOffset>0x0000000C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Serial Interface Data In For read transfers, WEN (R04h [13]) = 0, data from the serial interface input pins are shifted in and stores in a 8X32 bit Read FIFO. The contents of the Read FIFO is read from this register. The serial interface clock stops when a Read FIFO full condition occurs, RFIFOFULL (R00h [5]) = 1. The clock restarts when Read FIFO is not full, RFIFOFULL (R00h [5]) = 0. When BYTELEN (R04h [5]) = 0, data is shifted into bits [7:0]. When BYTELEN (R04h [5]) = 1, data is shifted into bits [7:0] first, followed by bits [15:8], then bits [23:16] and finally bits [31:24]. Note: To avoid a Read FIFO underflow condition, RFIFOUDF (R00h [8]) = 1, check RFIFOEMPTY (R00h [4]) is equal to 0 before reading this register. -->
            <field>
              <name>VAL</name>
              <description>Serial Interface Data In\nFor read transfers, WEN (R04h [13]) = 0, data from the\nserial interface input pins are shifted in and stores in a 8X32 bit Read FIFO. The contents of the Read FIFO is read from this register. The serial interface clock stops when a Read FIFO full condition occurs, RFIFOFULL (R00h [5]) = 1. The clock restarts when Read FIFO is not full, RFIFOFULL (R00h [5]) = 0. When BYTELEN (R04h [5]) = 0, data is shifted into bits [7:0]. When BYTELEN (R04h [5]) = 1, data is shifted into bits [7:0] first, followed by bits [15:8], then bits [23:16] and finally bits [31:24].\nNote: To avoid a Read FIFO underflow condition,\nRFIFOUDF (R00h [8]) = 1, check RFIFOEMPTY (R00h [4]) is equal to 0 before reading this register.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- QSPICMD: Serial Interface Instruction Register -->
        <register>
          <name>QSPICMD</name>
          <displayName>QSPICMD</displayName>
          <description>Serial Interface Instruction Register</description>
          <addressOffset>0x00000010</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Serial Interface Instruction After START (R04h [15]) is set to 1, the content of this register is shifted out to the serial interface. When CMDCNT (R1Ch [1:0]) = 0, the content of this register is not shifted out to the serial interface. When CMDCNT (R1Ch [1:0]) = 1, bits [7:0] are shifted out. When CMDCNT (R1Ch [1:0]) = 2, bits [15:8] are shifted out first, followed by bits [7:0]. -->
            <field>
              <name>VAL</name>
              <description>Serial Interface Instruction\nAfter START (R04h [15]) is set to 1, the content of this register is shifted out to the serial interface. When CMDCNT (R1Ch [1:0]) = 0, the content of this register is not shifted out to the serial interface. When CMDCNT (R1Ch [1:0]) = 1, bits [7:0] are shifted out. When CMDCNT (R1Ch [1:0]) = 2, bits [15:8] are shifted out first, followed by bits [7:0].</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- QSPIADDR: Serial Interface Address Register -->
        <register>
          <name>QSPIADDR</name>
          <displayName>QSPIADDR</displayName>
          <description>Serial Interface Address Register</description>
          <addressOffset>0x00000014</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Serial Interface Address After QSPICMD (R10h) is shifted out, the content of this register is shifted out to the serial interface. When ADDRCNT (R1Ch [6:4]) = 0, the content of this register is not shifted out to the serial interface. When ADDRCNT (R1Ch [6:4]) = 1, bits [7:0] are shifted out. When ADDRCNT (R1Ch [6:4]) = 2, bits [15:8] are shifted out first, followed by bits [7:0]. When ADDRCNT (R1Ch [6:4]) = 3, bits [23:16] are shifted out first, followed by bits [15:8], then bits [7:0]. When ADDRCNT (R1Ch [6:4]) = 4, bits [31:24] are shifted out first, followed by bits [23:16], then bits [15:8] and finally bits [7:0]. -->
            <field>
              <name>VAL</name>
              <description>Serial Interface Address\nAfter QSPICMD (R10h) is shifted out, the content of this register is shifted out to the serial interface.\nWhen ADDRCNT (R1Ch [6:4]) = 0, the content of this register is not shifted out to the serial interface.\nWhen ADDRCNT (R1Ch [6:4]) = 1, bits [7:0] are shifted out.\nWhen ADDRCNT (R1Ch [6:4]) = 2, bits [15:8] are shifted\nout first, followed by bits [7:0].\nWhen ADDRCNT (R1Ch [6:4]) = 3, bits [23:16] are shifted\nout first, followed by bits [15:8], then bits [7:0].\nWhen ADDRCNT (R1Ch [6:4]) = 4, bits [31:24] are shifted\nout first, followed by bits [23:16], then bits [15:8] and finally bits [7:0].</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- QSPIRMODE: Serial Interface Read Mode Register -->
        <register>
          <name>QSPIRMODE</name>
          <displayName>QSPIRMODE</displayName>
          <description>Serial Interface Read Mode Register</description>
          <addressOffset>0x00000018</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Serial Interface Read Mode After QSPIADDR(R14h) is shifted out, the content of this register is shifted out to the serial interface. When RMODECNT (R1Ch [9:8]) = 0, the content of this register is not shifted out to the serial interface. When RMODECNT (R1Ch [9:8]) = 1, bits [7:0] are shifted out. When RMODECNT (R1Ch [9:8]) = 2, bits [15:8] are shifted out first, followed by bits [7:0]. -->
            <field>
              <name>VAL</name>
              <description>Serial Interface Read Mode\nAfter QSPIADDR(R14h) is shifted out, the content of this register is shifted out to the serial interface.\nWhen RMODECNT (R1Ch [9:8]) = 0, the content of this register is not shifted out to the serial interface.\nWhen RMODECNT (R1Ch [9:8]) = 1, bits [7:0] are shifted out.\nWhen RMODECNT (R1Ch [9:8]) = 2, bits [15:8] are shifted out first, followed by bits [7:0].</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- QSPIHEADER: Serial Interface Header Register -->
        <register>
          <name>QSPIHEADER</name>
          <displayName>QSPIHEADER</displayName>
          <description>Serial Interface Header Register</description>
          <addressOffset>0x0000001C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DMYCNT: Dummy Count Number of bytes to shift out to the serial interface after the content of QSPIRMODE (R18h) register is shifted out. Note: The value being shifted out is 0. -->
            <field>
              <name>DMYCNT</name>
              <description>Dummy Count\nNumber of bytes to shift out to the serial interface after the content of QSPIRMODE (R18h) register is shifted out.\nNote: The value being shifted out is 0.</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0_BYTE</name>
                  <description>0 byte</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1_BYTE</name>
                  <description>1 byte</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2_BYTE</name>
                  <description>2 bytes</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3_BYTE</name>
                  <description>3 bytes</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RMODECNT: Read Mode Count Number of bytes in QSPIRMODE (R18h) register to shift out to the serial interface. -->
            <field>
              <name>RMODECNT</name>
              <description>Read Mode Count\nNumber of bytes in QSPIRMODE (R18h) register to shift out to the serial interface.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0_BYTE</name>
                  <description>0 byte</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1_BYTE</name>
                  <description>1 byte</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2_BYTE</name>
                  <description>2 bytes</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ADDRCNT: Address Count Number of bytes in QSPIADDR (R14h) register to shift out to the serial interface. -->
            <field>
              <name>ADDRCNT</name>
              <description>Address Count\nNumber of bytes in QSPIADDR (R14h) register to shift out to the serial interface.</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0_BYTE</name>
                  <description>0 byte</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1_BYTE</name>
                  <description>1 byte</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2_BYTE</name>
                  <description>2 bytes</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3_BYTE</name>
                  <description>3 bytes</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4_BYTE</name>
                  <description>4 bytes</description>
                  <value>0x4</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CMDCNT: Instruction Count Number of bytes in QSPICMD (R10h) register to shift out to the serial interface. -->
            <field>
              <name>CMDCNT</name>
              <description>Instruction Count\nNumber of bytes in QSPICMD (R10h) register to shift out to the serial interface.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0_BYTE</name>
                  <description>0 byte</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1_BYTE</name>
                  <description>1 byte</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2_BYTE</name>
                  <description>2 bytes</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- QSPIDINCNT: Serial Interface Data In Count Register -->
        <register>
          <name>QSPIDINCNT</name>
          <displayName>QSPIDINCNT</displayName>
          <description>Serial Interface Data In Count Register</description>
          <addressOffset>0x00000020</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Serial Interface Data In Count For read transfers, WEN (R04h [13]) = 0, this register indicates the number of bytes of data to shift in from the serial interface and stores in the 8X32 bit Read FIFO. When this register is set to 0, data is shifted in continuously until STOP (R04h [14]) bit is set to 1 by firmware. -->
            <field>
              <name>VAL</name>
              <description>Serial Interface Data In Count\nFor read transfers, WEN (R04h [13]) = 0, this register indicates the number of bytes of data to shift in from the\nserial interface and stores in the 8X32 bit Read FIFO. When this register is set to 0, data is shifted in continuously until STOP (R04h [14]) bit is set to 1 by firmware.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- QSPITIMING: Serial Interface Timing Register -->
        <register>
          <name>QSPITIMING</name>
          <displayName>QSPITIMING</displayName>
          <description>Serial Interface Timing Register</description>
          <addressOffset>0x00000024</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000111</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CLKOUTDLY: Serial Interface Clock Out Delay Programmable delay added to the serial interface output clock to adjust the timing. -->
            <field>
              <name>CLKOUTDLY</name>
              <description>Serial Interface Clock Out Delay\nProgrammable delay added to the serial interface output clock to adjust the timing.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_DELAY</name>
                  <description>No delay</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0dot2_NS_DELAY</name>
                  <description>Add 0.2 ns delay</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0dot4_NS_DELAY</name>
                  <description>Add 0.4 ns delay</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0dot6_NS_DELAY</name>
                  <description>Add 0.6 ns delay</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLKEDGE: Serial Interface Capture Clock Edge Capture serial interface input data on either the rising or falling edge of the serial interface clock. This bit is used to allow more time to capture the input data. When CLKPOL (R04h [8]) = 0 and CLKPHA (R04h [7]) = 1, capture input data on the falling edge of the serial interface clock. When CLKPOL (R04h [8]) = 1 and CLKPHA (R04h [7]) = 0, capture input data on the falling edge of the serial interface clock. When CLKPOL (R04h [8]) = 1 and CLKPHA (R04h [7]) = 1, capture input data on the rising edge of the serial interface clock. When CLKPOL (R04h [8]) = 1 and CLKPHA (R04h [7]) = 0, capture input data on the rising edge of the serial interface clock. Note: When CLKPHA (R04h [7]) = 1, this bit must be set to 0. -->
            <field>
              <name>CLKEDGE</name>
              <description>Serial Interface Capture Clock Edge\nCapture serial interface input data on either the rising or\nfalling edge of the serial interface clock. This bit is used to allow more time to capture the input data.\nWhen CLKPOL (R04h [8]) = 0 and CLKPHA (R04h [7]) =\n1, capture input data on the falling edge of the serial\ninterface clock.\nWhen CLKPOL (R04h [8]) = 1 and CLKPHA (R04h [7]) =\n0, capture input data on the falling edge of the serial\ninterface clock.\nWhen CLKPOL (R04h [8]) = 1 and CLKPHA (R04h [7]) =\n1, capture input data on the rising edge of the serial\ninterface clock.\nWhen CLKPOL (R04h [8]) = 1 and CLKPHA (R04h [7]) =\n0, capture input data on the rising edge of the serial\ninterface clock.\nNote: When CLKPHA (R04h [7]) = 1, this bit must be set\nto 0.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MODE_0</name>
                  <description>When CLKPOL (R04h [8]) = 0 and CLKPHA (R04h[7]) = 0, capture input data on rising edge of the serial interface clock.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MODE_1</name>
                  <description>When CLK_POL (R04h [8]) = 0 and CLK_PHA (R04h[7]) = 0, capture input data on the falling edge of the serial interface clock.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLKINDLY: Serial Interface Clock In Delay Programmable delay added to the serial interface input data capture clock. -->
            <field>
              <name>CLKINDLY</name>
              <description>Serial Interface Clock In Delay\nProgrammable delay added to the serial interface input data capture clock.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_DELAY</name>
                  <description>No delay</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0dot2_NS_DELAY</name>
                  <description>Add 0.2 ns delay</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0dot4_NS_DELAY</name>
                  <description>Add 0.4 ns delay</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0dot6_NS_DELAY</name>
                  <description>Add 0.6 ns delay</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DINDLY: Serial Interface Data Input Delay Delay the transfer of captured serial input data to the read register. -->
            <field>
              <name>DINDLY</name>
              <description>Serial Interface Data Input Delay\nDelay the transfer of captured serial input data to the read register.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_DELAY</name>
                  <description>No delay</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1_CLK_DELAY</name>
                  <description>1 serial interface clock delay</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2_CLK_DELAY</name>
                  <description>2 serial interface clock delay</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- QSPICTL2: Serial Interface Control Register 2 -->
        <register>
          <name>QSPICTL2</name>
          <displayName>QSPICTL2</displayName>
          <description>Serial Interface Control Register 2</description>
          <addressOffset>0x00000028</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00001100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SWRST: Soft Reset Allows firmware to reset the hardware. Note: After setting this bit to 1, firmware has to reset this bit to 0 before starting any transfer -->
            <field>
              <name>SWRST</name>
              <description>Soft Reset\nAllows firmware to reset the hardware.\nNote: After setting this bit to 1, firmware has to reset this bit to 0 before starting any transfer</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_RESET</name>
                  <description>Hardware is not in reset</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RESET</name>
                  <description>Hardware is in reset. Mannully set to 0 for reset.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- QSPIIF: Serial Interface Interrupt Flag Register -->
        <register>
          <name>QSPIIF</name>
          <displayName>QSPIIF</displayName>
          <description>Serial Interface Interrupt Flag Register</description>
          <addressOffset>0x0000002C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- WFIFOOVF: Write FIFO Overflow Interrupt Flag -->
            <field>
              <name>WFIFOOVF</name>
              <description>Write FIFO Overflow Interrupt Flag</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Write FIFO is not overflowed after masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Write FIFO is overflowed after masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFOUDF: Write FIFO Underflow Interrupt Flag -->
            <field>
              <name>WFIFOUDF</name>
              <description>Write FIFO Underflow Interrupt Flag</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Write FIFO is not underflowed after masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Write FIFO is underflowed after masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOOVF: Read FIFO Overflow Interrupt Flag -->
            <field>
              <name>RFIFOOVF</name>
              <description>Read FIFO Overflow Interrupt Flag</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Read FIFO is not overflowed after masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Read FIFO is overflowed after masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOUDF: Read FIFO Underflow Interrupt Flag -->
            <field>
              <name>RFIFOUDF</name>
              <description>Read FIFO Underflow Interrupt Flag</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Read FIFO is not underflowed after masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Read FIFO is underflowed after masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFOFULL: Write FIFO Full Interrupt Flag -->
            <field>
              <name>WFIFOFULL</name>
              <description>Write FIFO Full Interrupt Flag</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Write FIFO is not filled after masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Write FIFO is filled after masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFOEMPTY: Write FIFO Empty Interrupt Flag -->
            <field>
              <name>WFIFOEMPTY</name>
              <description>Write FIFO Empty Interrupt Flag</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Write FIFO is not emptied after masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Write FIFO is emptied after masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOFULL: Read FIFO Full Interrupt Flag -->
            <field>
              <name>RFIFOFULL</name>
              <description>Read FIFO Full Interrupt Flag</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Read FIFO is not filled after masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Read FIFO is filled after masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOEMPTY: Read FIFO Empty Interrupt Flag -->
            <field>
              <name>RFIFOEMPTY</name>
              <description>Read FIFO Empty Interrupt Flag</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Read FIFO is not emptied after masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Read FIFO is empty after masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFODMABURST: Write FIFO DMA burst Interrupt Flag -->
            <field>
              <name>WFIFODMABURST</name>
              <description>Write FIFO DMA burst Interrupt Flag</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Number of unused entries in the Write FIFO is less than DMAWBURST (R28h [13:12]) after masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Number of unused entries in the Write FIFO is greater than or equal to DMAWBURST (R28h [13:12]) after masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFODMABURST: Read FIFO DMA Burst Interrupt Flag -->
            <field>
              <name>RFIFODMABURST</name>
              <description>Read FIFO DMA Burst Interrupt Flag</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Number of available data in the Read FIFO is less than DMARBURST (R28h [9:8]) after masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Number of available data in the Read FIFO is greater than or equal to DMARBURST (R28h [9:8]) after masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RDY: Serial Interface Transfer Ready Interrupt Flag -->
            <field>
              <name>RDY</name>
              <description>Serial Interface Transfer Ready Interrupt Flag</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Serial interface is currently transferring data after masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Serial interface is ready for a new transfer after masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DONE: Transfer Done Interrupt Flag -->
            <field>
              <name>DONE</name>
              <description>Transfer Done Interrupt Flag</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Transfer has not completed after masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Transfer has completed after masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- QSPIINTMSK: Serial Interface Interrupt Mask Register -->
        <register>
          <name>QSPIINTMSK</name>
          <displayName>QSPIINTMSK</displayName>
          <description>Serial Interface Interrupt Mask Register</description>
          <addressOffset>0x00000030</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- RESERVED1: Reserved -->
            <field>
              <name>RESERVED1</name>
              <description>Reserved</description>
              <bitRange>[31:12]</bitRange>
              <access>read-only</access>
            </field>

            <!-- WFIFOOVF: Write FIFO Overflow Interrupt Mask -->
            <field>
              <name>WFIFOOVF</name>
              <description>Write FIFO Overflow Interrupt Mask</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Write FIFO overflow interrupt is not masked</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Write FIFO overflow interrupt is masked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFOUDF: Write FIFO Underflow Interrupt Mask -->
            <field>
              <name>WFIFOUDF</name>
              <description>Write FIFO Underflow Interrupt Mask</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Write FIFO underflow interrupt is not masked</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Write FIFO underflow interrupt is masked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOOVF: Read FIFO Overflow Interrupt Mask -->
            <field>
              <name>RFIFOOVF</name>
              <description>Read FIFO Overflow Interrupt Mask</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Read FIFO overflow interrupt is not masked</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Read FIFO overflow interrupt is masked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOUDF: Read FIFO Underflow Interrupt Mask -->
            <field>
              <name>RFIFOUDF</name>
              <description>Read FIFO Underflow Interrupt Mask</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Read FIFO underflow interrupt is not masked</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Read FIFO underflow interrupt is masked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFOFULL: Write FIFO Full Interrupt Mask -->
            <field>
              <name>WFIFOFULL</name>
              <description>Write FIFO Full Interrupt Mask</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Write FIFO full interrupt is not masked</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Write FIFO full interrupt is masked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFOEMPTY: Write FIFO Empty Interrupt Mask -->
            <field>
              <name>WFIFOEMPTY</name>
              <description>Write FIFO Empty Interrupt Mask</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Write FIFO empty interrupt is not masked</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Write FIFO empty interrupt is masked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOFULL: Read FIFO Full Interrupt Mask -->
            <field>
              <name>RFIFOFULL</name>
              <description>Read FIFO Full Interrupt Mask</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Read FIFO full interrupt is not masked</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Read FIFO full interrupt is masked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOEMPTY: Read FIFO Empty Interrupt Mask -->
            <field>
              <name>RFIFOEMPTY</name>
              <description>Read FIFO Empty Interrupt Mask</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Read FIFO empty interrupt is not masked</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Read FIFO empty interrupt is masked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFODMABURST: Write FIFO DMA Burst Interrupt Mask -->
            <field>
              <name>WFIFODMABURST</name>
              <description>Write FIFO DMA Burst Interrupt Mask</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Write FIFO DMA burst interrupt is not masked</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Write FIFO DMA burst interrupt is masked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFODMABURST: Read FIFO DMA Burst Interrupt Mask -->
            <field>
              <name>RFIFODMABURST</name>
              <description>Read FIFO DMA Burst Interrupt Mask</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Read FIFO DMA burst interrupt is not masked</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Read FIFO DMA burst interrupt is masked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RDY: Serial Interface Transfer Ready Mask -->
            <field>
              <name>RDY</name>
              <description>Serial Interface Transfer Ready Mask</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Transfer ready interrupt is not masked</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Transfer ready interrupt is masked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DONE: Transfer Done Interrupt Mask -->
            <field>
              <name>DONE</name>
              <description>Transfer Done Interrupt Mask</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Transfer done interrupt is not masked</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Transfer done interrupt is masked</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- QSPIRAWIF: Serial Interface Interrupt Raw Flag Register -->
        <register>
          <name>QSPIRAWIF</name>
          <displayName>QSPIRAWIF</displayName>
          <description>Serial Interface Interrupt Raw Flag Register</description>
          <addressOffset>0x00000034</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x0000005B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- WFIFOOVF: Write FIFO Overflow Interrupt Raw -->
            <field>
              <name>WFIFOOVF</name>
              <description>Write FIFO Overflow Interrupt Raw</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Write FIFO is not overflowed before masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Write FIFO is overflowed before masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFOUDF: Write FIFO Underflow Interrupt Raw -->
            <field>
              <name>WFIFOUDF</name>
              <description>Write FIFO Underflow Interrupt Raw</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Write FIFO is not underflowed before masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Write FIFO is underflowed before masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOOVF: Read FIFO Overflow Interrupt Raw -->
            <field>
              <name>RFIFOOVF</name>
              <description>Read FIFO Overflow Interrupt Raw</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Read FIFO is not overflowed before masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Read FIFO is overflowed before masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOUDF: Read FIFO Underflow Interrupt Raw -->
            <field>
              <name>RFIFOUDF</name>
              <description>Read FIFO Underflow Interrupt Raw</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Read FIFO is not underflowed before masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Read FIFO is underflowed before masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFOFULL: Write FIFO Full Interrupt Raw -->
            <field>
              <name>WFIFOFULL</name>
              <description>Write FIFO Full Interrupt Raw</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Write FIFO is not filled before masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Write FIFO is filled before masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFOEMPTY: Write FIFO Empty Interrupt Raw -->
            <field>
              <name>WFIFOEMPTY</name>
              <description>Write FIFO Empty Interrupt Raw</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Write FIFO is not emptied before masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Write FIFO is emptied before masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOFULL: Read FIFO Full Interrupt Raw -->
            <field>
              <name>RFIFOFULL</name>
              <description>Read FIFO Full Interrupt Raw</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Read FIFO is not filled before masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Read FIFO is filled before masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFOEMPTY: Read FIFO Empty Interrupt Raw -->
            <field>
              <name>RFIFOEMPTY</name>
              <description>Read FIFO Empty Interrupt Raw</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Read FIFO is not emptied before masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Read FIFO is empty before masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WFIFODMABURST: Write FIFO DMA Burst Interrupt Raw -->
            <field>
              <name>WFIFODMABURST</name>
              <description>Write FIFO DMA Burst Interrupt Raw</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Number of unused entries in the Write FIFO is less than DMAWBURST (R28h [13:12]) before masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Number of unused entries in the Write FIFO is greater than or equal to DMAWBURST (R28h [13:12]) before masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RFIFODMABURST: Read FIFO DMA Burst Interrupt Raw -->
            <field>
              <name>RFIFODMABURST</name>
              <description>Read FIFO DMA Burst Interrupt Raw</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Number of available data in the Read FIFO is less than DMARBURST (R28h [9:8]) before masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Number of available data in the Read FIFO is greater than or equal to DMARBURST (R28h [9:8]) before masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RDY: Serial Interface Transfer Ready Raw -->
            <field>
              <name>RDY</name>
              <description>Serial Interface Transfer Ready Raw</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Serial interface is currently transferring data before masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Serial interface is ready for a new transfer before masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DONE: Transfer Done Interrupt Raw -->
            <field>
              <name>DONE</name>
              <description>Transfer Done Interrupt Raw</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Transfer has not completed before masking</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Transfer has completed before masking</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- QSPIIC: Serial Interface Interrupt Clear Register -->
        <register>
          <name>QSPIIC</name>
          <displayName>QSPIIC</displayName>
          <description>Serial Interface Interrupt Clear Register</description>
          <addressOffset>0x00000038</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DONE: Transfer Done Interrupt Clear -->
            <field>
              <name>DONE</name>
              <description>Transfer Done Interrupt Clear</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Transfer done interrupt is not cleared</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Transfer done interrupt is cleared</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>PGA</name>
      <description>Split from ADC</description>
      <groupName>PGA</groupName>
      <baseAddress>0x4000A000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x108</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>

        <!-- PGACHCTL0: PGA Channel Select Control Register 0 -->
        <register>
          <name>PGACHCTL0</name>
          <displayName>PGACHCTL0</displayName>
          <description>PGA Channel Select Control Register 0</description>
          <addressOffset>0x000000E8</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- GAIN2P: Select Gain for positive input of PGA 2  -->
            <field>
              <name>GAIN2P</name>
              <description>Select Gain for positive input of PGA 2 </description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SINGLE_2X_DIFF_4X</name>
                  <description>2x single-ended mode / 4x coupled mode </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_4X_DIFF_8X</name>
                  <description>4x single-ended mode / 8x coupled mode </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_8X_DIFF_16X</name>
                  <description>8x single-ended mode / 16x coupled mode </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_16X_DIFF_32X</name>
                  <description>16x single-ended mode / 32x coupled mode </description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GAIN1P: Select Gain for positive input of PGA 1  -->
            <field>
              <name>GAIN1P</name>
              <description>Select Gain for positive input of PGA 1 </description>
              <bitRange>[12:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SINGLE_2X_DIFF_4X</name>
                  <description>2x single-ended mode / 4x coupled mode </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_4X_DIFF_8X</name>
                  <description>4x single-ended mode / 8x coupled mode </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_8X_DIFF_16X</name>
                  <description>8x single-ended mode / 16x coupled mode </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_16X_DIFF_32X</name>
                  <description>16x single-ended mode / 32x coupled mode </description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GAIN0P: Select Gain for positive input of PGA 0  -->
            <field>
              <name>GAIN0P</name>
              <description>Select Gain for positive input of PGA 0 </description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SINGLE_2X_DIFF_4X</name>
                  <description>2x single-ended mode / 4x coupled mode </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_4X_DIFF_8X</name>
                  <description>4x single-ended mode / 8x coupled mode </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_8X_DIFF_16X</name>
                  <description>8x single-ended mode / 16x coupled mode </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_16X_DIFF_32X</name>
                  <description>16x single-ended mode / 32x coupled mode </description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CHSEL2P: Input channel selection for positive input of PGA 2  -->
            <field>
              <name>CHSEL2P</name>
              <description>Input channel selection for positive input of PGA 2 </description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VSSA</name>
                  <description>VSSA (GND)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TSENSOR1</name>
                  <description>T-sensor out 1 </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC3</name>
                  <description>GPIO4 </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC13</name>
                  <description>GPIO14 </description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC6</name>
                  <description>GPIO7 </description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC7</name>
                  <description>GPIO8 </description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC14</name>
                  <description>GPIO15 </description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RESDIV2</name>
                  <description>RESDIV 2 </description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CHSEL1P: Input channel selection for positive input of PGA 1  -->
            <field>
              <name>CHSEL1P</name>
              <description>Input channel selection for positive input of PGA 1 </description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VSSA</name>
                  <description>VSSA (GND)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VDAC_HI</name>
                  <description>VDAC_HI </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC1</name>
                  <description>GPIO2 </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC11</name>
                  <description>GPIO12 </description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC4</name>
                  <description>GPIO5 </description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC7</name>
                  <description>GPIO8 </description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC14</name>
                  <description>GPIO15 </description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RESDIV1</name>
                  <description>RESDIV 1 </description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CHSEL0P: Input channel selection for positive input of PGA 0  -->
            <field>
              <name>CHSEL0P</name>
              <description>Input channel selection for positive input of PGA 0 </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VSSA</name>
                  <description>VSSA (GND)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VDDR12_ANA</name>
                  <description>VDDR12_ANA </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC5</name>
                  <description>GPIO6 </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC9</name>
                  <description>GPIO10 </description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC2</name>
                  <description>GPIO3 </description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC7</name>
                  <description>GPIO8 </description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC14</name>
                  <description>GPIO15 </description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RESDIV0</name>
                  <description>RESDIV 0 </description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- PGACHCTL1: PGA Channel Select Control Register 1 -->
        <register>
          <name>PGACHCTL1</name>
          <displayName>PGACHCTL1</displayName>
          <description>PGA Channel Select Control Register 1</description>
          <addressOffset>0x000000EC</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- RDIVSEL2: Select output voltage of Resistor-Divider for PGA 2  RESDIV 2 OUTPUT = RDIVSEL2*VDDA/32 -->
            <field>
              <name>RDIVSEL2</name>
              <description>Select output voltage of Resistor-Divider for PGA 2 \nRESDIV 2 OUTPUT = RDIVSEL2*VDDA/32</description>
              <bitRange>[29:25]</bitRange>
              <access>read-write</access>
            </field>

            <!-- RDIVSEL1: Select output voltage of Resistor-Divider for PGA 1  RESDIV 1 OUTPUT = RDIVSEL1*VDDA/32 -->
            <field>
              <name>RDIVSEL1</name>
              <description>Select output voltage of Resistor-Divider for PGA 1 \nRESDIV 1 OUTPUT = RDIVSEL1*VDDA/32</description>
              <bitRange>[24:20]</bitRange>
              <access>read-write</access>
            </field>

            <!-- RDIVSEL0: Select output voltage of Resistor-Divider for PGA 0  RESDIV 0 OUTPUT = RDIVSEL0*VDDA/32  -->
            <field>
              <name>RDIVSEL0</name>
              <description>Select output voltage of Resistor-Divider for PGA 0 \nRESDIV 0 OUTPUT = RDIVSEL0*VDDA/32 </description>
              <bitRange>[19:15]</bitRange>
              <access>read-write</access>
            </field>

            <!-- GAIN2N: Select Gain for negative input of PGA 2  -->
            <field>
              <name>GAIN2N</name>
              <description>Select Gain for negative input of PGA 2 </description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SINGLE_2X_DIFF_4X</name>
                  <description>2x single-ended mode / 4x coupled mode </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_4X_DIFF_8X</name>
                  <description>4x single-ended mode / 8x coupled mode </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_8X_DIFF_16X</name>
                  <description>8x single-ended mode / 16x coupled mode </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_16X_DIFF_32X</name>
                  <description>16x single-ended mode / 32x coupled mode </description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GAIN1N: Select Gain for negative input of PGA 1   -->
            <field>
              <name>GAIN1N</name>
              <description>Select Gain for negative input of PGA 1  </description>
              <bitRange>[12:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SINGLE_2X_DIFF_4X</name>
                  <description>2x single-ended mode / 4x coupled mode </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_4X_DIFF_8X</name>
                  <description>4x single-ended mode / 8x coupled mode </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_8X_DIFF_16X</name>
                  <description>8x single-ended mode / 16x coupled mode </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_16X_DIFF_32X</name>
                  <description>16x single-ended mode / 32x coupled mode </description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GAIN0N: Select Gain for negative input of PGA 0  -->
            <field>
              <name>GAIN0N</name>
              <description>Select Gain for negative input of PGA 0 </description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SINGLE_2X_DIFF_4X</name>
                  <description>2x single-ended mode / 4x coupled mode </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_4X_DIFF_8X</name>
                  <description>4x single-ended mode / 8x coupled mode </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_8X_DIFF_16X</name>
                  <description>8x single-ended mode / 16x coupled mode </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SINGLE_16X_DIFF_32X</name>
                  <description>16x single-ended mode / 32x coupled mode </description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CHSEL2N: Input channel selection for negative input of PGA 2  -->
            <field>
              <name>CHSEL2N</name>
              <description>Input channel selection for negative input of PGA 2 </description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VSSA</name>
                  <description>VSSA (GND)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TSENSOR0</name>
                  <description>T-sensor out 0 </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC10</name>
                  <description>GPIO11 </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC12</name>
                  <description>GPIO13 </description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC5</name>
                  <description>GPIO6 </description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC0</name>
                  <description>GPIO1 </description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC15</name>
                  <description>GPIO16 </description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RESDIV2</name>
                  <description>RESDIV 2 </description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CHSEL1N: Input channel selection for negative input of PGA 1   -->
            <field>
              <name>CHSEL1N</name>
              <description>Input channel selection for negative input of PGA 1  </description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VSSA</name>
                  <description>VSSA </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC_1dot2</name>
                  <description>ADC 1.2V Reference </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC8</name>
                  <description>GPIO9 </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC10</name>
                  <description>GPIO11 </description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC3</name>
                  <description>GPIO4 </description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC0</name>
                  <description>GPIO1 </description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC15</name>
                  <description>GPIO16 </description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RESDIV1</name>
                  <description>RESDIV 1 </description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CHSEL0N: Input channel selection for negative input of PGA 0  -->
            <field>
              <name>CHSEL0N</name>
              <description>Input channel selection for negative input of PGA 0 </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VSSA</name>
                  <description>VSSA </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TEST</name>
                  <description>GPIO25 </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC9</name>
                  <description>GPIO10 </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC8</name>
                  <description>GPIO9 </description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC1</name>
                  <description>GPIO2 </description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC0</name>
                  <description>GPIO1 </description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC15</name>
                  <description>GPIO16 </description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RESDIV0</name>
                  <description>RESDIV 0 </description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- PGACTL0: PGA Control Register 0 -->
        <register>
          <name>PGACTL0</name>
          <displayName>PGACTL0</displayName>
          <description>PGA Control Register 0</description>
          <addressOffset>0x000000F0</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN2P: Enable the positive OP of PGA 2 -->
            <field>
              <name>EN2P</name>
              <description>Enable the positive OP of PGA 2</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable the positive OP of PGA 2</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable the positive OP of PGA 2</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN1P: Enable the positive OP of PGA 1 -->
            <field>
              <name>EN1P</name>
              <description>Enable the positive OP of PGA 1</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable the positive OP of PGA 1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable the positive OP of PGA 1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN0P: Enable the positive OP of PGA 0 -->
            <field>
              <name>EN0P</name>
              <description>Enable the positive OP of PGA 0</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable the positive OP of PGA 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable the positive OP of PGA 0</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CMEN2P: Enable using the input from the positive OP of PGA 2 as a common voltage for the differential output -->
            <field>
              <name>CMEN2P</name>
              <description>Enable using the input from the positive OP of PGA 2 as a common voltage for the differential output</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CMEN1P: Enable using the input from the positive OP of PGA 1 as a common voltage for the differential output -->
            <field>
              <name>CMEN1P</name>
              <description>Enable using the input from the positive OP of PGA 1 as a common voltage for the differential output</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CMEN0P: Enable using the input from the positive OP of PGA 0 as a common voltage for the differential output -->
            <field>
              <name>CMEN0P</name>
              <description>Enable using the input from the positive OP of PGA 0 as a common voltage for the differential output</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SINGLE2P: Single-ended mode enable for the positive OP of PGA 2 -->
            <field>
              <name>SINGLE2P</name>
              <description>Single-ended mode enable for the positive OP of PGA 2</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SINGLE1P: Single-ended mode enable for the positive OP of PGA 1 -->
            <field>
              <name>SINGLE1P</name>
              <description>Single-ended mode enable for the positive OP of PGA 1</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SINGLE0P: Single-ended mode enable for the positive OP of PGA 0 -->
            <field>
              <name>SINGLE0P</name>
              <description>Single-ended mode enable for the positive OP of PGA 0</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- BYP2P: Bypass the positive OP of PGA 2. Input from the positive OP of PGA 2 will be sent to ADC directly. -->
            <field>
              <name>BYP2P</name>
              <description>Bypass the positive OP of PGA 2. Input from the positive OP of PGA 2 will be sent to ADC directly.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- BYP1P: Bypass the positive OP of PGA 1. Input from the positive OP of PGA 1 will be sent to ADC directly. -->
            <field>
              <name>BYP1P</name>
              <description>Bypass the positive OP of PGA 1. Input from the positive OP of PGA 1 will be sent to ADC directly.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- BYP0P: Bypass the positive OP of PGA 0. Input from the positive OP of PGA 0 will be sent to ADC directly. -->
            <field>
              <name>BYP0P</name>
              <description>Bypass the positive OP of PGA 0. Input from the positive OP of PGA 0 will be sent to ADC directly.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- PGACTL1: PGA Control Register 1 -->
        <register>
          <name>PGACTL1</name>
          <displayName>PGACTL1</displayName>
          <description>PGA Control Register 1</description>
          <addressOffset>0x000000F4</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- RDIVEN2: Enable Resistor-Divider(RESDIV) 2 -->
            <field>
              <name>RDIVEN2</name>
              <description>Enable Resistor-Divider(RESDIV) 2</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RDIVEN1: Enable Resistor-Divider(RESDIV) 1 -->
            <field>
              <name>RDIVEN1</name>
              <description>Enable Resistor-Divider(RESDIV) 1</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RDIVEN0: Enable Resistor-Divider(RESDIV) 0 -->
            <field>
              <name>RDIVEN0</name>
              <description>Enable Resistor-Divider(RESDIV) 0</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN2N: Enable the negative OP of PGA 2 -->
            <field>
              <name>EN2N</name>
              <description>Enable the negative OP of PGA 2</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable the positive OP of PGA 2</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable the positive OP of PGA 2</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN1N: Enable the negative OP of PGA 1 -->
            <field>
              <name>EN1N</name>
              <description>Enable the negative OP of PGA 1</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable the positive OP of PGA 1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable the positive OP of PGA 1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN0N: Enable the negative OP of PGA 0 -->
            <field>
              <name>EN0N</name>
              <description>Enable the negative OP of PGA 0</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable the positive OP of PGA 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable the positive OP of PGA 0</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CMEN2N: Enable using the input from the negative OP of PGA 2 as a common voltage for the differential output -->
            <field>
              <name>CMEN2N</name>
              <description>Enable using the input from the negative OP of PGA 2 as a common voltage for the differential output</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CMEN1N: Enable using the input from the negative OP of PGA 1 as a common voltage for the differential output -->
            <field>
              <name>CMEN1N</name>
              <description>Enable using the input from the negative OP of PGA 1 as a common voltage for the differential output</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CMEN0N: Enable using the input from the negative OP of PGA 0 as a common voltage for the differential output -->
            <field>
              <name>CMEN0N</name>
              <description>Enable using the input from the negative OP of PGA 0 as a common voltage for the differential output</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SINGLE2N: Single-ended mode enable for the negative OP of PGA 2 -->
            <field>
              <name>SINGLE2N</name>
              <description>Single-ended mode enable for the negative OP of PGA 2</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SINGLE1N: Single-ended mode enable for the negative OP of PGA 1 -->
            <field>
              <name>SINGLE1N</name>
              <description>Single-ended mode enable for the negative OP of PGA 1</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SINGLE0N: Single-ended mode enable for the negative OP of PGA 0 -->
            <field>
              <name>SINGLE0N</name>
              <description>Single-ended mode enable for the negative OP of PGA 0</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- BYP2N: Bypass the negative OP of PGA 2. Input from the negative OP of PGA 2 will be sent to ADC directly. -->
            <field>
              <name>BYP2N</name>
              <description>Bypass the negative OP of PGA 2. Input from the negative OP of PGA 2 will be sent to ADC directly.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- BYP1N: Bypass the negative OP of PGA 1. Input from the negative OP of PGA 1 will be sent to ADC directly. -->
            <field>
              <name>BYP1N</name>
              <description>Bypass the negative OP of PGA 1. Input from the negative OP of PGA 1 will be sent to ADC directly.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- BYP0N: Bypass the negative OP of PGA 0. Input from the negative OP of PGA 0 will be sent to ADC directly. -->
            <field>
              <name>BYP0N</name>
              <description>Bypass the negative OP of PGA 0. Input from the negative OP of PGA 0 will be sent to ADC directly.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>COMP</name>
      <description>Split from ADC</description>
      <groupName>COMP</groupName>
      <baseAddress>0x4000A000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x108</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>

        <!-- COMPSEL: Comparator Input Selection Register -->
        <register>
          <name>COMPSEL</name>
          <displayName>COMPSEL</displayName>
          <description>Comparator Input Selection Register</description>
          <addressOffset>0x000000E0</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CHSEL2: Select the input source of high speed comparator in PGA 2 -->
            <field>
              <name>CHSEL2</name>
              <description>Select the input source of high speed comparator in PGA 2</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PGA2N_OUT</name>
                  <description>Select the input source of high speed comparator as output of pga2n</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PGA2P_OUT</name>
                  <description>Select the input source of high speed comparator as output of pga2p </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PGA2N_IN</name>
                  <description>Select the input source of high speed comparator as  input of pga2n </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PGA2P_IN</name>
                  <description>Select the input source of high speed comparator as  input of pga2p </description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CHSEL1: Select the input source of high speed comparator in PGA 1 -->
            <field>
              <name>CHSEL1</name>
              <description>Select the input source of high speed comparator in PGA 1</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PGA1N_OUT</name>
                  <description>Select the input source of high speed comparator as output of pga1n</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PGA1P_OUT</name>
                  <description>Select the input source of high speed comparator as output of pga1p </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PGA1N_IN</name>
                  <description>Select the input source of high speed comparator as  input of pga1n</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PGA1P_IN</name>
                  <description>Select the input source of high speed comparator as  input of pga1p </description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CHSEL0: Select the input source of high speed comparator in PGA 0 -->
            <field>
              <name>CHSEL0</name>
              <description>Select the input source of high speed comparator in PGA 0</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PGA0N_OUT</name>
                  <description>Select the input source of high speed comparator as output of pga0n</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PGA0P_OUT</name>
                  <description>Select the input source of high speed comparator as output of pga0p </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PGA0N_IN</name>
                  <description>Select the input source of high speed comparator as  input of pga0n</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PGA0P_IN</name>
                  <description>Select the input source of high speed comparator as  input of pga0p </description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- COMPCTL: Comparator Control Register -->
        <register>
          <name>COMPCTL</name>
          <displayName>COMPCTL</displayName>
          <description>Comparator Control Register</description>
          <addressOffset>0x000000E4</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DGEN: Synchronization select for output of the comparator before being passed to PWM/GPIO blocks -->
            <field>
              <name>DGEN</name>
              <description>Synchronization select for output of the comparator before being passed to PWM/GPIO blocks</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FILTER_DISABLE</name>
                  <description>Asynchronous version of Comparator output is passed</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FILTER_ENABLE</name>
                  <description>Synchronous version of comparator output is passed</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DGPRDSEL: Qualification period for synchronized output of the comparator 00h: Synchronized value of comparator is passed through 01h: Input to the block must be consistent for 2 consecutive clocks before output of deglitch block can change 02h: Input to the block must be consistent for 3 consecutive clocks before output of deglitch block can change ...... 7fh: Input to the block must be consistent for 128 consecutive clocks before output of deglitch block can change -->
            <field>
              <name>DGPRDSEL</name>
              <description>Qualification period for synchronized output of the comparator\n00h: Synchronized value of comparator is passed through\n01h: Input to the block must be consistent for 2 consecutive clocks before output of deglitch block can change\n02h: Input to the block must be consistent for 3 consecutive clocks before output of deglitch block can change\n......\n7fh: Input to the block must be consistent for 128 consecutive clocks before output of deglitch block can change</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>

            <!-- COMP2HHYEN: Enable high speed comparator&apos;s hysteresis of high-voltage protection in PGA 2 -->
            <field>
              <name>COMP2HHYEN</name>
              <description>Enable high speed comparator&apos;s hysteresis of high-voltage protection in PGA 2</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable hysteresis</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable hysteresis</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP1HHYEN: Enable high speed comparator&apos;s hysteresis of high-voltage protection in PGA 1 -->
            <field>
              <name>COMP1HHYEN</name>
              <description>Enable high speed comparator&apos;s hysteresis of high-voltage protection in PGA 1</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable hysteresis</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable hysteresis</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP0HHYEN: Enable high speed comparator&apos;s hysteresis of high-voltage protection in PGA 0 -->
            <field>
              <name>COMP0HHYEN</name>
              <description>Enable high speed comparator&apos;s hysteresis of high-voltage protection in PGA 0</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable hysteresis</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable hysteresis</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP2LHYEN: Enable high speed comparator&apos;s hysteresis of low-voltage protection in PGA 2 -->
            <field>
              <name>COMP2LHYEN</name>
              <description>Enable high speed comparator&apos;s hysteresis of low-voltage protection in PGA 2</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable hysteresis</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable hysteresis</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP1LHYEN: Enable high speed comparator&apos;s hysteresis of low-voltage protection in PGA 1 -->
            <field>
              <name>COMP1LHYEN</name>
              <description>Enable high speed comparator&apos;s hysteresis of low-voltage protection in PGA 1</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable hysteresis</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable hysteresis</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP0LHYEN: Enable high speed comparator&apos;s hysteresis of low-voltage protection in PGA 0 -->
            <field>
              <name>COMP0LHYEN</name>
              <description>Enable high speed comparator&apos;s hysteresis of low-voltage protection in PGA 0</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable hysteresis</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable hysteresis</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP2HEN: Enable the high speed comparator of high-voltage protection in PGA2 -->
            <field>
              <name>COMP2HEN</name>
              <description>Enable the high speed comparator of high-voltage protection in PGA2</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Comparator</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Comparator</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP1HEN: Enable the high speed comparator of high-voltage protection in PGA1 -->
            <field>
              <name>COMP1HEN</name>
              <description>Enable the high speed comparator of high-voltage protection in PGA1</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Comparator</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Comparator</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP0HEN: Enable the high speed comparator of high-voltage protection in PGA0 -->
            <field>
              <name>COMP0HEN</name>
              <description>Enable the high speed comparator of high-voltage protection in PGA0</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Comparator</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Comparator</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP2LEN: Enable the high speed comparator of low-voltage protection in PGA2 -->
            <field>
              <name>COMP2LEN</name>
              <description>Enable the high speed comparator of low-voltage protection in PGA2</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Comparator</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Comparator</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP1LEN: Enable the high speed comparator of low-voltage protection in PGA1 -->
            <field>
              <name>COMP1LEN</name>
              <description>Enable the high speed comparator of low-voltage protection in PGA1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Comparator</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Comparator</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP0LEN: Enable the high speed comparator of low-voltage protection in PGA0 -->
            <field>
              <name>COMP0LEN</name>
              <description>Enable the high speed comparator of low-voltage protection in PGA0</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Comparator</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Comparator</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP2HINV: Invert the output of high speed comparator for high-voltage protection in PGA 2 -->
            <field>
              <name>COMP2HINV</name>
              <description>Invert the output of high speed comparator for high-voltage protection in PGA 2</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Keep the output of high speed comparator </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Invert the output of high speed comparator </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP1HINV: Invert the output of high speed comparator for high-voltage protection in PGA 1 -->
            <field>
              <name>COMP1HINV</name>
              <description>Invert the output of high speed comparator for high-voltage protection in PGA 1</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Keep the output of high speed comparator </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Invert the output of high speed comparator </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP0HINV: Invert the output of high speed comparator for high-voltage protection in PGA 0 -->
            <field>
              <name>COMP0HINV</name>
              <description>Invert the output of high speed comparator for high-voltage protection in PGA 0</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Keep the output of high speed comparator </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Invert the output of high speed comparator </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP2LINV: Invert the output of high speed comparator for low-voltage protection in PGA 2 -->
            <field>
              <name>COMP2LINV</name>
              <description>Invert the output of high speed comparator for low-voltage protection in PGA 2</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Keep the output of high speed comparator </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Invert the output of high speed comparator </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP1LINV: Invert the output of high speed comparator for low-voltage protection in PGA 1 -->
            <field>
              <name>COMP1LINV</name>
              <description>Invert the output of high speed comparator for low-voltage protection in PGA 1</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Keep the output of high speed comparator </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Invert the output of high speed comparator </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP0LINV: Invert the output of high speed comparator for low-voltage protection in PGA 0 -->
            <field>
              <name>COMP0LINV</name>
              <description>Invert the output of high speed comparator for low-voltage protection in PGA 0</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Keep the output of high speed comparator </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Invert the output of high speed comparator </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- DACCODE: DAC Code Register -->
        <register>
          <name>DACCODE</name>
          <displayName>DACCODE</displayName>
          <description>DAC Code Register</description>
          <addressOffset>0x000000F8</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- HI: Digital input of 10-bit DAC for high-ref -->
            <field>
              <name>HI</name>
              <description>Digital input of 10-bit DAC for high-ref</description>
              <bitRange>[19:10]</bitRange>
              <access>read-write</access>
            </field>

            <!-- LO: Digital input of 10-bit DAC for low-ref -->
            <field>
              <name>LO</name>
              <description>Digital input of 10-bit DAC for low-ref</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- DACCTL: DAC Control Register -->
        <register>
          <name>DACCTL</name>
          <displayName>DACCTL</displayName>
          <description>DAC Control Register</description>
          <addressOffset>0x000000FC</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- ENHI: Enable 10-bit DAC to send HIGH ref for comparator -->
            <field>
              <name>ENHI</name>
              <description>Enable 10-bit DAC to send HIGH ref for comparator</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable DAC High</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable DAC High</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ENLO: Enable 10-bit DAC to send LOW ref for comparator -->
            <field>
              <name>ENLO</name>
              <description>Enable 10-bit DAC to send LOW ref for comparator</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable DAC Low</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable DAC Low</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIVSRCHI: Select DAC High DAC Driving Mode -->
            <field>
              <name>DIVSRCHI</name>
              <description>Select DAC High DAC Driving Mode</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CURRENT_DRV</name>
                  <description>Enable current driving mode as High DAC output, 10 bit resolution </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VDDX_DRV</name>
                  <description>Enable VDDX divider mode as High DAC output, MSB 7 bit resolution </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIVSRCLO: Select DAC Low DAC Driving Mode -->
            <field>
              <name>DIVSRCLO</name>
              <description>Select DAC Low DAC Driving Mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CURRENT_DRV</name>
                  <description>Enable current driving mode as High DAC output, 10 bit resolution </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VDDX_DRV</name>
                  <description>Enable VDDX divider mode as High DAC output, MSB 7 bit resolution </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RANGE2XHI: Select High DAC range in current driving mode -->
            <field>
              <name>RANGE2XHI</name>
              <description>Select High DAC range in current driving mode</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0_TO_1dot1_V</name>
                  <description>Set output range for high ref DAC to be 0~1.1V in current driving mode</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0_TO_2dot2_V</name>
                  <description>Set output range for high ref DAC to be 0~2.2V in current driving mode</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RANGE2XLO: Select Low DAC range in current driving mode -->
            <field>
              <name>RANGE2XLO</name>
              <description>Select Low DAC range in current driving mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0_TO_1dot1_V</name>
                  <description>Set output range for low ref DAC to be 0~1.1V in current driving mode</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0_TO_2dot2_V</name>
                  <description>Set output range for low ref DAC to be 0~2.2V in current driving mode</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>ADC</name>
      <description>Analog Digital converter</description>
      <groupName>ADC</groupName>
      <baseAddress>0x4000A000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x108</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>

        <!-- ADCCTL0: ADC Control Register 0 -->
        <register>
          <name>ADCCTL0</name>
          <displayName>ADCCTL0</displayName>
          <description>ADC Control Register 0</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- RST: ADC registers Reset  -->
            <field>
              <name>RST</name>
              <description>ADC registers Reset </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Nothing change </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RESET_ADC</name>
                  <description>Reset ADC registers to Default value</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN: ADC enable  -->
            <field>
              <name>EN</name>
              <description>ADC enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE_ADC</name>
                  <description>Disable ADC </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE_ADC</name>
                  <description>Enable ADC </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- VREFEN: ADC reference buffer enable  -->
            <field>
              <name>VREFEN</name>
              <description>ADC reference buffer enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE_REF_BUFF</name>
                  <description>Disable reference buffer </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE_REF_BUFF</name>
                  <description>Enable reference buffer </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- VREFSEL: Select reference source for reference buffer  -->
            <field>
              <name>VREFSEL</name>
              <description>Select reference source for reference buffer </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>INTERNAL_REF</name>
                  <description>Select internal reference source </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EXTERNAL_REF</name>
                  <description>Select external reference source </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCCTL1: ADC Control Register 1 -->
        <register>
          <name>ADCCTL1</name>
          <displayName>ADCCTL1</displayName>
          <description>ADC Control Register 1</description>
          <addressOffset>0x00000004</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- COMPPREAMPCTL: Comparator pre-amplifier time control  -->
            <field>
              <name>COMPPREAMPCTL</name>
              <description>Comparator pre-amplifier time control </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1dot23_NS</name>
                  <description>1.23ns </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot75_NS</name>
                  <description>1.75ns </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot20_NS</name>
                  <description>2.20ns </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot69_NS</name>
                  <description>2.69ns </description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot99_NS</name>
                  <description>2.99ns </description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot47_NS</name>
                  <description>3.47ns </description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot91_NS</name>
                  <description>3.91ns </description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4dot40_NS</name>
                  <description>4.40ns </description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SHBPTIEEN: Control bit for forcing positive input of SHB -->
            <field>
              <name>SHBPTIEEN</name>
              <description>Control bit for forcing positive input of SHB</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SHB_POSITIVE_DISABLE</name>
                  <description>Disable the function of forcing positive input of SHB</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHB_POSITIVE_ENABLE</name>
                  <description>Enable the function of forcing positive input of SHB</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SHAPTIEEN: Control bit for forcing positive input of SHA -->
            <field>
              <name>SHAPTIEEN</name>
              <description>Control bit for forcing positive input of SHA</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SHA_POSITIVE_DISABLE</name>
                  <description>Disable the function of forcing positive input of SHA</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHA_POSITIVE_ENABLE</name>
                  <description>Enable the function of forcing positive input of SHA</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SHBNTIEEN: Control bit for forcing negative input of SHB -->
            <field>
              <name>SHBNTIEEN</name>
              <description>Control bit for forcing negative input of SHB</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SHB_NEGATIVE_DISABLE</name>
                  <description>Disable the function of forcing negative input of SHB</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHB_NEGATIVE_ENABLE</name>
                  <description>Enable the function of forcing negative input of SHB</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SHANTIEEN: Control bit for forcing negative input of SHA -->
            <field>
              <name>SHANTIEEN</name>
              <description>Control bit for forcing negative input of SHA</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SHA_NEGATIVE_DISABLE</name>
                  <description>Disable the function of forcing negative input of SHA</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHA_NEGATIVE_ENABLE</name>
                  <description>Enable the function of forcing negative input of SHA</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SHBPTIELO: Tie-high/low selection for forcing positive input of SHB -->
            <field>
              <name>SHBPTIELO</name>
              <description>Tie-high/low selection for forcing positive input of SHB</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SHB_POSITIVE_TIE_HIGH</name>
                  <description>Tie-high of the positive input of SHB</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHB_POSITIVE_TIE_LOW</name>
                  <description>Tie-low of the positive input of SHB</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SHAPTIELO: Tie-high/low selection for forcing positive input of SHA -->
            <field>
              <name>SHAPTIELO</name>
              <description>Tie-high/low selection for forcing positive input of SHA</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SHA_POSITIVE_TIE_HIGH</name>
                  <description>Tie-high of the positive input of SHA</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHA_POSITIVE_TIE_LOW</name>
                  <description>Tie-low of the positive input of SHA</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SHBNTIELO: Tie-high/low selection for forcing negative input of SHB -->
            <field>
              <name>SHBNTIELO</name>
              <description>Tie-high/low selection for forcing negative input of SHB</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SHB_NEGATIVE_TIE_HIGH</name>
                  <description>Tie-high of the negative input of SHB</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHB_NEGATIVE_TIE_LOW</name>
                  <description>Tie-low of the negative input of SHB</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SHANTIELO: Tie-high/low selection for forcing negative input of SHA -->
            <field>
              <name>SHANTIELO</name>
              <description>Tie-high/low selection for forcing negative input of SHA</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SHA_NEGATIVE_TIE_HIGH</name>
                  <description>Tie-high of the negative input of SHA</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SHA_NEGATIVE_TIE_LOW</name>
                  <description>Tie-low of the negative input of SHA</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DLYSEL: Delay adjustment of ADC front-end  DLYSEL[3]: Non-overlap selection 1ns/0.5ns(1/0) from convert to sample  DLYSEL[2]: Delay selection 1ns/0.5ns(1/0) from sample_cm to sample_in  DLYSEL[1]: CDAC Initial selection 1ns/0.5ns(1/0)  DLYSEL[0]: Delay selection 1ns/0.5ns(1/0) from CDAC released to conversion starting  -->
            <field>
              <name>DLYSEL</name>
              <description>Delay adjustment of ADC front-end \nDLYSEL[3]: Non-overlap selection 1ns/0.5ns(1/0) from convert to sample \nDLYSEL[2]: Delay selection 1ns/0.5ns(1/0) from sample_cm to sample_in \nDLYSEL[1]: CDAC Initial selection 1ns/0.5ns(1/0) \nDLYSEL[0]: Delay selection 1ns/0.5ns(1/0) from CDAC released to conversion starting </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>

            <!-- SPEEDUP: ADC Speed-up mode control  -->
            <field>
              <name>SPEEDUP</name>
              <description>ADC Speed-up mode control </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable speed-up mode </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable speed-up mode </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DACSETTLECTL: DAC settling control for ADC conversion time.  -->
            <field>
              <name>DACSETTLECTL</name>
              <description>DAC settling control for ADC conversion time. </description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>125ns </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1</name>
                  <description>150ns </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>175ns </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3</name>
                  <description>200ns </description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLKSEL: Select clock source in ADC front-end  -->
            <field>
              <name>CLKSEL</name>
              <description>Select clock source in ADC front-end </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RCO</name>
                  <description>RCO clock</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>XO</name>
                  <description>XO clock</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL</name>
                  <description>PLL clock</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCCLK</name>
                  <description>ADC clock</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLKDIV: Select division for clk source in ADC front-end  -->
            <field>
              <name>CLKDIV</name>
              <description>Select division for clk source in ADC front-end </description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1</name>
                  <description>Fclk</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Fclk/2 </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Fclk/4 </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>8</name>
                  <description>Fclk/8 </description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>16</name>
                  <description>Fclk/16</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>32</name>
                  <description>Fclk/32</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>64</name>
                  <description>Fclk/64</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>128</name>
                  <description>Fclk/128 </description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLKSYNCEN: Analog clk to resynchronize mcu control signal  -->
            <field>
              <name>CLKSYNCEN</name>
              <description>Analog clk to resynchronize mcu control signal </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable this function </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable this function </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCIF: ADC Interrupt Flag Register -->
        <register>
          <name>ADCIF</name>
          <displayName>ADCIF</displayName>
          <description>ADC Interrupt Flag Register</description>
          <addressOffset>0x00000008</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- INT15: Flag signal indicates if ADC Interrupt 15 is generated  -->
            <field>
              <name>INT15</name>
              <description>Flag signal indicates if ADC Interrupt 15 is generated </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 15 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 15 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT14: Flag signal indicates if ADC Interrupt 14 is generated  -->
            <field>
              <name>INT14</name>
              <description>Flag signal indicates if ADC Interrupt 14 is generated </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 14 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 14 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT13: Flag signal indicates if ADC Interrupt 13 is generated  -->
            <field>
              <name>INT13</name>
              <description>Flag signal indicates if ADC Interrupt 13 is generated </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 13 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 13 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT12: Flag signal indicates if ADC Interrupt 12 is generated  -->
            <field>
              <name>INT12</name>
              <description>Flag signal indicates if ADC Interrupt 12 is generated </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 12 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 12 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT11: Flag signal indicates if ADC Interrupt 11 is generated  -->
            <field>
              <name>INT11</name>
              <description>Flag signal indicates if ADC Interrupt 11 is generated </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 11 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 11 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT10: Flag signal indicates if ADC Interrupt 10 is generated  -->
            <field>
              <name>INT10</name>
              <description>Flag signal indicates if ADC Interrupt 10 is generated </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 10 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 10 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT9: Flag signal indicates if ADC Interrupt 9 is generated  -->
            <field>
              <name>INT9</name>
              <description>Flag signal indicates if ADC Interrupt 9 is generated </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 9 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 9 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT8: Flag signal indicates if ADC Interrupt 8 is generated  -->
            <field>
              <name>INT8</name>
              <description>Flag signal indicates if ADC Interrupt 8 is generated </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 8 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 8 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT7: Flag signal indicates if ADC Interrupt 7 is generated  -->
            <field>
              <name>INT7</name>
              <description>Flag signal indicates if ADC Interrupt 7 is generated </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 7 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 7 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT6: Flag signal indicates if ADC Interrupt 6 is generated  -->
            <field>
              <name>INT6</name>
              <description>Flag signal indicates if ADC Interrupt 6 is generated </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 6 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 6 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT5: Flag signal indicates if ADC Interrupt 5 is generated  -->
            <field>
              <name>INT5</name>
              <description>Flag signal indicates if ADC Interrupt 5 is generated </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 5 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 5 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT4: Flag signal indicates if ADC Interrupt 4 is generated  -->
            <field>
              <name>INT4</name>
              <description>Flag signal indicates if ADC Interrupt 4 is generated </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 4 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 4 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT3: Flag signal indicates if ADC Interrupt 3 is generated  -->
            <field>
              <name>INT3</name>
              <description>Flag signal indicates if ADC Interrupt 3 is generated </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 3 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 3 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT2: Flag signal indicates if ADC Interrupt 2 is generated  -->
            <field>
              <name>INT2</name>
              <description>Flag signal indicates if ADC Interrupt 2 is generated </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 2 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 2 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT1: Flag signal indicates if ADC Interrupt 1 is generated  -->
            <field>
              <name>INT1</name>
              <description>Flag signal indicates if ADC Interrupt 1 is generated </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 1 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 1 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT0: Flag signal indicates if ADC Interrupt 0 is generated  -->
            <field>
              <name>INT0</name>
              <description>Flag signal indicates if ADC Interrupt 0 is generated </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>ADC Interrupt 0 isn&apos;t generated </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 0 is generated </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCIC: ADC Interrupt Flag Clear Register -->
        <register>
          <name>ADCIC</name>
          <displayName>ADCIC</displayName>
          <description>ADC Interrupt Flag Clear Register</description>
          <addressOffset>0x0000000C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- INT15: ADC Interrupt 15 flag clear bit  -->
            <field>
              <name>INT15</name>
              <description>ADC Interrupt 15 flag clear bit </description>
              <bitRange>[15:15]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 15 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT14: ADC Interrupt 14 flag clear bit  -->
            <field>
              <name>INT14</name>
              <description>ADC Interrupt 14 flag clear bit </description>
              <bitRange>[14:14]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 14 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT13: ADC Interrupt 13 flag clear bit  -->
            <field>
              <name>INT13</name>
              <description>ADC Interrupt 13 flag clear bit </description>
              <bitRange>[13:13]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 13 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT12: ADC Interrupt 12 flag clear bit  -->
            <field>
              <name>INT12</name>
              <description>ADC Interrupt 12 flag clear bit </description>
              <bitRange>[12:12]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 12 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT11: ADC Interrupt 11 flag clear bit  -->
            <field>
              <name>INT11</name>
              <description>ADC Interrupt 11 flag clear bit </description>
              <bitRange>[11:11]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 11 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT10: ADC Interrupt 10 flag clear bit  -->
            <field>
              <name>INT10</name>
              <description>ADC Interrupt 10 flag clear bit </description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 10 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT9: ADC Interrupt 9 flag clear bit  -->
            <field>
              <name>INT9</name>
              <description>ADC Interrupt 9 flag clear bit </description>
              <bitRange>[9:9]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 9 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT8: ADC Interrupt 8 flag clear bit  -->
            <field>
              <name>INT8</name>
              <description>ADC Interrupt 8 flag clear bit </description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 8 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT7: ADC Interrupt 7 flag clear bit  -->
            <field>
              <name>INT7</name>
              <description>ADC Interrupt 7 flag clear bit </description>
              <bitRange>[7:7]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 7 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT6: ADC Interrupt 6 flag clear bit  -->
            <field>
              <name>INT6</name>
              <description>ADC Interrupt 6 flag clear bit </description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 6 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT5: ADC Interrupt 5 flag clear bit  -->
            <field>
              <name>INT5</name>
              <description>ADC Interrupt 5 flag clear bit </description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 5 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT4: ADC Interrupt 4 flag clear bit  -->
            <field>
              <name>INT4</name>
              <description>ADC Interrupt 4 flag clear bit </description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 4 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT3: ADC Interrupt 3 flag clear bit  -->
            <field>
              <name>INT3</name>
              <description>ADC Interrupt 3 flag clear bit </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 3 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT2: ADC Interrupt 2 flag clear bit  -->
            <field>
              <name>INT2</name>
              <description>ADC Interrupt 2 flag clear bit </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 2 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT1: ADC Interrupt 1 flag clear bit  -->
            <field>
              <name>INT1</name>
              <description>ADC Interrupt 1 flag clear bit </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 1 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT0: ADC Interrupt 0 flag clear bit  -->
            <field>
              <name>INT0</name>
              <description>ADC Interrupt 0 flag clear bit </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC interrupt 0 flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCIOVF: ADC Interrupt Overflow Flag Register -->
        <register>
          <name>ADCIOVF</name>
          <displayName>ADCIOVF</displayName>
          <description>ADC Interrupt Overflow Flag Register</description>
          <addressOffset>0x00000010</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- INT15: ADC Interrupt 15 overflow flag  -->
            <field>
              <name>INT15</name>
              <description>ADC Interrupt 15 overflow flag </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 15 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT14: ADC Interrupt 14 overflow flag  -->
            <field>
              <name>INT14</name>
              <description>ADC Interrupt 14 overflow flag </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 14 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT13: ADC Interrupt 13 overflow flag  -->
            <field>
              <name>INT13</name>
              <description>ADC Interrupt 13 overflow flag </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 13 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT12: ADC Interrupt 12 overflow flag  -->
            <field>
              <name>INT12</name>
              <description>ADC Interrupt 12 overflow flag </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 12 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT11: ADC Interrupt 11 overflow flag  -->
            <field>
              <name>INT11</name>
              <description>ADC Interrupt 11 overflow flag </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 11 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT10: ADC Interrupt 10 overflow flag  -->
            <field>
              <name>INT10</name>
              <description>ADC Interrupt 10 overflow flag </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 10 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT9: ADC Interrupt 9 overflow flag  -->
            <field>
              <name>INT9</name>
              <description>ADC Interrupt 9 overflow flag </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 9 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT8: ADC Interrupt 8 overflow flag  -->
            <field>
              <name>INT8</name>
              <description>ADC Interrupt 8 overflow flag </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 8 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT7: ADC Interrupt 7 overflow flag  -->
            <field>
              <name>INT7</name>
              <description>ADC Interrupt 7 overflow flag </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 7 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT6: ADC Interrupt 6 overflow flag  -->
            <field>
              <name>INT6</name>
              <description>ADC Interrupt 6 overflow flag </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 6 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT5: ADC Interrupt 5 overflow flag  -->
            <field>
              <name>INT5</name>
              <description>ADC Interrupt 5 overflow flag </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 5 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT4: ADC Interrupt 4 overflow flag  -->
            <field>
              <name>INT4</name>
              <description>ADC Interrupt 4 overflow flag </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 4 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT3: ADC Interrupt 3 overflow flag  -->
            <field>
              <name>INT3</name>
              <description>ADC Interrupt 3 overflow flag </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 3 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT2: ADC Interrupt 2 overflow flag  -->
            <field>
              <name>INT2</name>
              <description>ADC Interrupt 2 overflow flag </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 2 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT1: ADC Interrupt 1 overflow flag  -->
            <field>
              <name>INT1</name>
              <description>ADC Interrupt 1 overflow flag </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 1 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT0: ADC Interrupt 0 overflow flag  -->
            <field>
              <name>INT0</name>
              <description>ADC Interrupt 0 overflow flag </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No overflow </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>ADC Interrupt 0 overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCIOVFC: ADC Interrupt Overflow Flag Clear Register -->
        <register>
          <name>ADCIOVFC</name>
          <displayName>ADCIOVFC</displayName>
          <description>ADC Interrupt Overflow Flag Clear Register</description>
          <addressOffset>0x00000014</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- INT15: ADC Interrupt 15 overflow flag clear bit -->
            <field>
              <name>INT15</name>
              <description>ADC Interrupt 15 overflow flag clear bit</description>
              <bitRange>[15:15]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 15 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT14: ADC Interrupt 14 overflow flag clear bit  -->
            <field>
              <name>INT14</name>
              <description>ADC Interrupt 14 overflow flag clear bit </description>
              <bitRange>[14:14]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 14 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT13: ADC Interrupt 13 overflow flag clear bit  -->
            <field>
              <name>INT13</name>
              <description>ADC Interrupt 13 overflow flag clear bit </description>
              <bitRange>[13:13]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 13 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT12: ADC Interrupt 12 overflow flag clear bit  -->
            <field>
              <name>INT12</name>
              <description>ADC Interrupt 12 overflow flag clear bit </description>
              <bitRange>[12:12]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 12 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT11: ADC Interrupt 11 overflow flag clear bit  -->
            <field>
              <name>INT11</name>
              <description>ADC Interrupt 11 overflow flag clear bit </description>
              <bitRange>[11:11]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 11 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT10: ADC Interrupt 10 overflow flag clear bit  -->
            <field>
              <name>INT10</name>
              <description>ADC Interrupt 10 overflow flag clear bit </description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 10 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT9: ADC Interrupt 9 overflow flag clear bit  -->
            <field>
              <name>INT9</name>
              <description>ADC Interrupt 9 overflow flag clear bit </description>
              <bitRange>[9:9]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 9 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT8: ADC Interrupt 8 overflow flag clear bit  -->
            <field>
              <name>INT8</name>
              <description>ADC Interrupt 8 overflow flag clear bit </description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 8 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT7: ADC Interrupt 7 overflow flag clear bit  -->
            <field>
              <name>INT7</name>
              <description>ADC Interrupt 7 overflow flag clear bit </description>
              <bitRange>[7:7]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 7 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT6: ADC Interrupt 6 overflow flag clear bit  -->
            <field>
              <name>INT6</name>
              <description>ADC Interrupt 6 overflow flag clear bit </description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 6 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT5: ADC Interrupt 5 overflow flag clear bit  -->
            <field>
              <name>INT5</name>
              <description>ADC Interrupt 5 overflow flag clear bit </description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 5 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT4: ADC Interrupt 4 overflow flag clear bit  -->
            <field>
              <name>INT4</name>
              <description>ADC Interrupt 4 overflow flag clear bit </description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 4 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT3: ADC Interrupt 3 overflow flag clear bit  -->
            <field>
              <name>INT3</name>
              <description>ADC Interrupt 3 overflow flag clear bit </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 3 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT2: ADC Interrupt 2 overflow flag clear bit  -->
            <field>
              <name>INT2</name>
              <description>ADC Interrupt 2 overflow flag clear bit </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 2 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT1: ADC Interrupt 1 overflow flag clear bit  -->
            <field>
              <name>INT1</name>
              <description>ADC Interrupt 1 overflow flag clear bit </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 1 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT0: ADC Interrupt 0 overflow flag clear bit  -->
            <field>
              <name>INT0</name>
              <description>ADC Interrupt 0 overflow flag clear bit </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear ADC Interrupt 0 overflow flag </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCINTSEL0: ADC Interrupt Select Register 0 -->
        <register>
          <name>ADCINTSEL0</name>
          <displayName>ADCINTSEL0</displayName>
          <description>ADC Interrupt Select Register 0</description>
          <addressOffset>0x00000018</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- INT1CONT: ADC Interrupt 1 continuous mode enable  -->
            <field>
              <name>INT1CONT</name>
              <description>ADC Interrupt 1 continuous mode enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 1 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 1 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT1EN: ADC Interrupt 1 enable  -->
            <field>
              <name>INT1EN</name>
              <description>ADC Interrupt 1 enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 1 </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 1 </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT0CONT: ADC interrupt 0 continuous mode enable  -->
            <field>
              <name>INT0CONT</name>
              <description>ADC interrupt 0 continuous mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 0 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 0 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT0EN: ADC interrupt 0 enable  -->
            <field>
              <name>INT0EN</name>
              <description>ADC interrupt 0 enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 0</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCINTSEL1: ADC Interrupt Select Register 1 -->
        <register>
          <name>ADCINTSEL1</name>
          <displayName>ADCINTSEL1</displayName>
          <description>ADC Interrupt Select Register 1</description>
          <addressOffset>0x0000001C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- INT3CONT: ADC interrupt 3 continuous mode enable  -->
            <field>
              <name>INT3CONT</name>
              <description>ADC interrupt 3 continuous mode enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 3 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 3 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT3EN: ADC interrupt 3 enable  -->
            <field>
              <name>INT3EN</name>
              <description>ADC interrupt 3 enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 3</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 3</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT2CONT: ADC interrupt 2 continuous mode enable  -->
            <field>
              <name>INT2CONT</name>
              <description>ADC interrupt 2 continuous mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 2 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 2 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT2EN: ADC interrupt 2 enable  -->
            <field>
              <name>INT2EN</name>
              <description>ADC interrupt 2 enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 2</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 2</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCINTSEL2: ADC Interrupt Select Register 2 -->
        <register>
          <name>ADCINTSEL2</name>
          <displayName>ADCINTSEL2</displayName>
          <description>ADC Interrupt Select Register 2</description>
          <addressOffset>0x00000020</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- INT5CONT: ADC interrupt 5 continuous mode enable  -->
            <field>
              <name>INT5CONT</name>
              <description>ADC interrupt 5 continuous mode enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 5 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 5 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT5EN: ADC interrupt 5 enable  -->
            <field>
              <name>INT5EN</name>
              <description>ADC interrupt 5 enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 5</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 5</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT4CONT: ADC interrupt 4 continuous mode enable  -->
            <field>
              <name>INT4CONT</name>
              <description>ADC interrupt 4 continuous mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 4 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 4 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT4EN: ADC interrupt 4 enable  -->
            <field>
              <name>INT4EN</name>
              <description>ADC interrupt 4 enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 4</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 4</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCINTSEL3: ADC Interrupt Select Register 3 -->
        <register>
          <name>ADCINTSEL3</name>
          <displayName>ADCINTSEL3</displayName>
          <description>ADC Interrupt Select Register 3</description>
          <addressOffset>0x00000024</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- INT7CONT: ADC interrupt 7 continuous mode enable  -->
            <field>
              <name>INT7CONT</name>
              <description>ADC interrupt 7 continuous mode enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 7 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 7 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT7EN: ADC interrupt 7 enable  -->
            <field>
              <name>INT7EN</name>
              <description>ADC interrupt 7 enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 7</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 7</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT13CONT: ADC interrupt 13 continuous mode enable  -->
            <field>
              <name>INT13CONT</name>
              <description>ADC interrupt 13 continuous mode enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 13 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 13 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT13EN: ADC interrupt 13 enable  -->
            <field>
              <name>INT13EN</name>
              <description>ADC interrupt 13 enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 13</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 13</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT14CONT: ADC interrupt 14 continuous mode enable  -->
            <field>
              <name>INT14CONT</name>
              <description>ADC interrupt 14 continuous mode enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 14 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 14 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT14EN: ADC interrupt 14 enable  -->
            <field>
              <name>INT14EN</name>
              <description>ADC interrupt 14 enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 14</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 14</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT15EN: ADC interrupt 15 enable  -->
            <field>
              <name>INT15EN</name>
              <description>ADC interrupt 15 enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 15</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 15</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT6CONT: ADC interrupt 6 continuous mode enable  -->
            <field>
              <name>INT6CONT</name>
              <description>ADC interrupt 6 continuous mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 6 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 6 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT6EN: ADC interrupt 6 enable  -->
            <field>
              <name>INT6EN</name>
              <description>ADC interrupt 6 enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 6</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 6</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT11CONT: ADC interrupt 11 continuous mode enable  -->
            <field>
              <name>INT11CONT</name>
              <description>ADC interrupt 11 continuous mode enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 11 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 11 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT11EN: ADC interrupt 11 enable  -->
            <field>
              <name>INT11EN</name>
              <description>ADC interrupt 11 enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 11</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 11</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT12CONT: ADC interrupt 12 continuous mode enable  -->
            <field>
              <name>INT12CONT</name>
              <description>ADC interrupt 12 continuous mode enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 12 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 12 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT12EN: ADC interrupt 12 enable  -->
            <field>
              <name>INT12EN</name>
              <description>ADC interrupt 12 enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 12</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 12</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT15CONT: ADC interrupt 15 continuous mode enable  -->
            <field>
              <name>INT15CONT</name>
              <description>ADC interrupt 15 continuous mode enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 15 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 15 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCINTSEL4: ADC Interrupt Select Register 4 -->
        <register>
          <name>ADCINTSEL4</name>
          <displayName>ADCINTSEL4</displayName>
          <description>ADC Interrupt Select Register 4</description>
          <addressOffset>0x00000028</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- INT8CONT: ADC interrupt 8 continuous mode enable  -->
            <field>
              <name>INT8CONT</name>
              <description>ADC interrupt 8 continuous mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 8 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 8 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT8EN: ADC interrupt 8 enable  -->
            <field>
              <name>INT8EN</name>
              <description>ADC interrupt 8 enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 8</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 8</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT9CONT: ADC interrupt 9 continuous mode enable  -->
            <field>
              <name>INT9CONT</name>
              <description>ADC interrupt 9 continuous mode enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 9 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 9 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT9EN: ADC interrupt 9 enable  -->
            <field>
              <name>INT9EN</name>
              <description>ADC interrupt 9 enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 9</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 9</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT10CONT: ADC interrupt 10 continuous mode enable  -->
            <field>
              <name>INT10CONT</name>
              <description>ADC interrupt 10 continuous mode enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINUE_MODE_DISABLE</name>
                  <description>No further ADC Interrupt 10 is generated unless the flag bit is clear by user</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CONTINUE_MODE_ENABLE</name>
                  <description>ADC Interrupt 10 is generated whenever an EOC pulse happen \nirrespective whether the flag bit is clear </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- INT10EN: ADC interrupt 10 enable  -->
            <field>
              <name>INT10EN</name>
              <description>ADC interrupt 10 enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable ADC Interrupt 10</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable ADC Interrupt 10</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCSOCPRICTL: ADC State of Conversion Priority Control Register -->
        <register>
          <name>ADCSOCPRICTL</name>
          <displayName>ADCSOCPRICTL</displayName>
          <description>ADC State of Conversion Priority Control Register</description>
          <addressOffset>0x0000002C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- RRPOINTER: Round Ring Pointer  Holds the latest SOCx in Round Ring, and determine the next order of conversion.  -->
            <field>
              <name>RRPOINTER</name>
              <description>Round Ring Pointer \nHolds the latest SOCx in Round Ring, and determine the next order of conversion. </description>
              <bitRange>[10:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SOC0</name>
                  <description> SOC0 was the latest SOC. SOC1 is next one in Round Robin. </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC1</name>
                  <description>SOC1 was the latest SOC. SOC2 is next one in Round Robin.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC2</name>
                  <description>SOC2 was the latest SOC. SOC3 is next one in Round Robin.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC3</name>
                  <description>SOC3 was the latest SOC. SOC4 is next one in Round Robin.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC4</name>
                  <description>SOC4 was the latest SOC. SOC5 is next one in Round Robin.</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC5</name>
                  <description>SOC5 was the latest SOC. SOC6 is next one in Round Robin.</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC6</name>
                  <description>SOC6 was the latest SOC. SOC7 is next one in Round Robin.</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC7</name>
                  <description>SOC7 was the latest SOC. SOC8 is next one in Round Robin.</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC8</name>
                  <description>SOC8 was the latest SOC. SOC9 is next one in Round Robin.</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC9</name>
                  <description>SOC9 was the latest SOC. SOC10 is next one in Round Robin.</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC10</name>
                  <description>SOC10 was the latest SOC. SOC11 is next one in Round Robin.</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC11</name>
                  <description>SOC11 was the latest SOC. SOC12 is next one in Round Robin.</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC12</name>
                  <description>SOC12 was the latest SOC. SOC13 is next one in Round Robin.</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC13</name>
                  <description>SOC13 was the latest SOC. SOC14 is next one in Round Robin.</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC14</name>
                  <description>SOC14 was the latest SOC. SOC15 is next one in Round Robin.</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SOC15</name>
                  <description>SOC15 was the latest SOC. SOC0 is next one in Round Robin.</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PRIORITY: SOC (State-machine of Conversion) Priority  Determines the cutoff point for priority mode and round arbitration of SOCs  -->
            <field>
              <name>PRIORITY</name>
              <description>SOC (State-machine of Conversion) Priority \nDetermines the cutoff point for priority mode and round arbitration of SOCs </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC0</name>
                  <description>All SOCs priority follow the rule of round mode </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC1</name>
                  <description>SOC0 are high priority, SOC1-SOC15 is in round mode </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC2</name>
                  <description>SOC0-SOC1 are high priority, SOC2-SOC15 is in round mode </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC3</name>
                  <description>SOC0-SOC2 are high priority, SOC3-SOC15 is in round mode </description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC4</name>
                  <description>SOC0-SOC3 are high priority, SOC4-SOC15 is in round mode </description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC5</name>
                  <description>SOC0-SOC4 are high priority, SOC5-SOC15 is in round mode </description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC6</name>
                  <description>SOC0-SOC5 are high priority, SOC6-SOC15 is in round mode </description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC7</name>
                  <description>SOC0-SOC6 are high priority, SOC7-SOC15 is in round mode </description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC8</name>
                  <description>SOC0-SOC7 are high priority, SOC8-SOC15 is in round mode </description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC9</name>
                  <description>SOC0-SOC8 are high priority, SOC9-SOC15 is in round mode </description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC10</name>
                  <description>SOC0-SOC9 are high priority, SOC10-SOC15 is in round mode </description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC11</name>
                  <description>SOC0-SOC10 are high priority, SOC11-SOC15 is in round mode </description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC12</name>
                  <description>SOC0-SOC11 are high priority, SOC12-SOC15 is in round mode </description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC13</name>
                  <description>SOC0-SOC12 are high priority, SOC13-SOC15 is in round mode </description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC14</name>
                  <description>SOC0-SOC13 are high priority, SOC14-SOC15 is in round mode </description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CUTOFF_AT_SOC15</name>
                  <description>SOC0-SOC14 are high priority, SOC15 is in round mode </description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCINTSOCSEL0: ADC Interrupt Trigger SOC Select Register 0 -->
        <register>
          <name>ADCINTSOCSEL0</name>
          <displayName>ADCINTSOCSEL0</displayName>
          <description>ADC Interrupt Trigger SOC Select Register 0</description>
          <addressOffset>0x00000034</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SOC5: Select ADC interrupt source for SOC5. This Field will overrides the TRIGSEL Field in the ADCSOC5CTL Register.  TRIGSEL Field will determine trigger source for SOC5.  -->
            <field>
              <name>SOC5</name>
              <description>Select ADC interrupt source for SOC5. This Field will overrides the TRIGSEL Field in the ADCSOC5CTL Register. \nTRIGSEL Field will determine trigger source for SOC5. </description>
              <bitRange>[29:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC5</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC5</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC5</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC5</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC5</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC5</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC5</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC5</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC5</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC5</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC5</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC5</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC5</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC5</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC5</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC5</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC4: Select ADC interrupt source for SOC4. This Field will overrides the TRIGSEL Field in the ADCSOC4CTL Register.  TRIGSEL Field will determine trigger source for SOC4.  -->
            <field>
              <name>SOC4</name>
              <description>Select ADC interrupt source for SOC4. This Field will overrides the TRIGSEL Field in the ADCSOC4CTL Register. \nTRIGSEL Field will determine trigger source for SOC4. </description>
              <bitRange>[24:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC4</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC4</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC4</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC4</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC4</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC4</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC4</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC4</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC4</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC4</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC4</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC4</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC4</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC4</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC4</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC4</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC3: Select ADC interrupt source for SOC3. This Field will overrides the TRIGSEL Field in the ADCSOC3CTL Register.  TRIGSEL Field will determine trigger source for SOC3.  -->
            <field>
              <name>SOC3</name>
              <description>Select ADC interrupt source for SOC3. This Field will overrides the TRIGSEL Field in the ADCSOC3CTL Register. \nTRIGSEL Field will determine trigger source for SOC3. </description>
              <bitRange>[19:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC3</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC3</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC3</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC3</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC3</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC3</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC3</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC3</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC3</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC3</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC3</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC3</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC3</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC3</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC3</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC3</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC2: Select ADC interrupt source for SOC2. This Field will overrides the TRIGSEL Field in the ADCSOC2CTL Register.  TRIGSEL Field will determine trigger source for SOC2.  -->
            <field>
              <name>SOC2</name>
              <description>Select ADC interrupt source for SOC2. This Field will overrides the TRIGSEL Field in the ADCSOC2CTL Register. \nTRIGSEL Field will determine trigger source for SOC2. </description>
              <bitRange>[14:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC2</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC2</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC2</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC2</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC2</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC2</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC2</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC2</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC2</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC2</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC2</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC2</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC2</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC2</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC2</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC2</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC1: Select ADC interrupt source for SOC1. This Field will overrides the TRIGSEL Field in the ADCSOC1CTL Register.  TRIGSEL Field will determine trigger source for SOC1.  -->
            <field>
              <name>SOC1</name>
              <description>Select ADC interrupt source for SOC1. This Field will overrides the TRIGSEL Field in the ADCSOC1CTL Register. \nTRIGSEL Field will determine trigger source for SOC1. </description>
              <bitRange>[9:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC1</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC1</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC1</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC1</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC1</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC1</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC1</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC1</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC1</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC1</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC1</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC1</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC1</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC1</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC1</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC1</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC0: Select ADC interrupt source for SOC0. This Field will overrides the TRIGSEL Field in the ADCSOC0CTL Register.  TRIGSEL Field will determine trigger source for SOC0.  -->
            <field>
              <name>SOC0</name>
              <description>Select ADC interrupt source for SOC0. This Field will overrides the TRIGSEL Field in the ADCSOC0CTL Register. \nTRIGSEL Field will determine trigger source for SOC0. </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC0</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC0</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC0</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC0</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC0</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC0</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC0</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC0</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC0</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC0</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC0</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC0</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC0</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC0</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC0</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC0</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCINTSOCSEL1: ADC Interrupt Trigger SOC Select Register 1 -->
        <register>
          <name>ADCINTSOCSEL1</name>
          <displayName>ADCINTSOCSEL1</displayName>
          <description>ADC Interrupt Trigger SOC Select Register 1</description>
          <addressOffset>0x00000038</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SOC11: Select ADC interrupt source for SOC11. This Field will overrides the TRIGSEL Field in the ADCSOC11CTL Register.  TRIGSEL Field will determine trigger source for SOC11.  -->
            <field>
              <name>SOC11</name>
              <description>Select ADC interrupt source for SOC11. This Field will overrides the TRIGSEL Field in the ADCSOC11CTL Register. \nTRIGSEL Field will determine trigger source for SOC11. </description>
              <bitRange>[29:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC11</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC11</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC11</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC11</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC11</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC11</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC11</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC11</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC11</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC11</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC11</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC11</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC11</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC11</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC11</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC11</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC10: Select ADC interrupt source for SOC10. This Field will overrides the TRIGSEL Field in the ADCSOC10CTL Register.  TRIGSEL Field will determine trigger source for SOC10.  -->
            <field>
              <name>SOC10</name>
              <description>Select ADC interrupt source for SOC10. This Field will overrides the TRIGSEL Field in the ADCSOC10CTL Register. \nTRIGSEL Field will determine trigger source for SOC10. </description>
              <bitRange>[24:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC10</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC10</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC10</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC10</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC10</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC10</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC10</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC10</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC10</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC10</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC10</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC10</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC10</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC10</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC10</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC10</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC9: Select ADC interrupt source for SOC9. This Field will overrides the TRIGSEL Field in the ADCSOC9CTL Register.  TRIGSEL Field will determine trigger source for SOC9.  -->
            <field>
              <name>SOC9</name>
              <description>Select ADC interrupt source for SOC9. This Field will overrides the TRIGSEL Field in the ADCSOC9CTL Register. \nTRIGSEL Field will determine trigger source for SOC9. </description>
              <bitRange>[19:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC9</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC9</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC9</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC9</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC9</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC9</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC9</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC9</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC9</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC9</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC9</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC9</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC9</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC9</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC9</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC9</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC8: Select ADC interrupt source for SOC8. This Field will overrides the TRIGSEL Field in the ADCSOC8CTL Register.  TRIGSEL Field will determine trigger source for SOC8.  -->
            <field>
              <name>SOC8</name>
              <description>Select ADC interrupt source for SOC8. This Field will overrides the TRIGSEL Field in the ADCSOC8CTL Register. \nTRIGSEL Field will determine trigger source for SOC8. </description>
              <bitRange>[14:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC8</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC8</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC8</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC8</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC8</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC8</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC8</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC8</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC8</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC8</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC8</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC8</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC8</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC8</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC8</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC8</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC7: Select ADC interrupt source for SOC7. This Field will overrides the TRIGSEL Field in the ADCSOC7CTL Register.  TRIGSEL Field will determine trigger source for SOC7.  -->
            <field>
              <name>SOC7</name>
              <description>Select ADC interrupt source for SOC7. This Field will overrides the TRIGSEL Field in the ADCSOC7CTL Register. \nTRIGSEL Field will determine trigger source for SOC7. </description>
              <bitRange>[9:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC7</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC7</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC7</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC7</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC7</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC7</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC7</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC7</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC7</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC7</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC7</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC7</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC7</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC7</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC7</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC7</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC6: Select ADC interrupt source for SOC6. This Field will overrides the TRIGSEL Field in the ADCSOC6CTL Register.  TRIGSEL Field will determine trigger source for SOC6.  -->
            <field>
              <name>SOC6</name>
              <description>Select ADC interrupt source for SOC6. This Field will overrides the TRIGSEL Field in the ADCSOC6CTL Register. \nTRIGSEL Field will determine trigger source for SOC6. </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC6</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC6</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC6</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC6</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC6</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC6</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC6</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC6</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC6</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC6</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC6</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC6</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC6</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC6</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC6</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC6</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCSOCFLG: ADC SOC Flag Register -->
        <register>
          <name>ADCSOCFLG</name>
          <displayName>ADCSOCFLG</displayName>
          <description>ADC SOC Flag Register</description>
          <addressOffset>0x0000003C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SOC15: SOC15 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC15</name>
              <description>SOC15 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC15</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC15</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC14: SOC14 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC14</name>
              <description>SOC14 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC14</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC14</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC13: SOC13 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC13</name>
              <description>SOC13 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC13</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC13</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC12: SOC12 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC12</name>
              <description>SOC12 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC12</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC12</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC11: SOC11 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC11</name>
              <description>SOC11 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC11</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC11</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC10: SOC10 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC10</name>
              <description>SOC10 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC10</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC10</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC9: SOC9 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC9</name>
              <description>SOC9 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC9</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC9</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC8: SOC8 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC8</name>
              <description>SOC8 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC8</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC8</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC7: SOC7 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC7</name>
              <description>SOC7 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC7</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC7</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC6: SOC6 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC6</name>
              <description>SOC6 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC6</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC6</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC5: SOC5 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC5</name>
              <description>SOC5 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC5</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC5</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC4: SOC4 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC4</name>
              <description>SOC4 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC4</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC4</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC3: SOC3 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC3</name>
              <description>SOC3 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC3</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC3</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC2: SOC2 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC2</name>
              <description>SOC2 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC2</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC2</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC1: SOC1 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC1</name>
              <description>SOC1 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC0: SOC0 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started.  If this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not.  -->
            <field>
              <name>SOC0</name>
              <description>SOC0 (State-machine of Conversion) Flag. This indicates state of each SOC. This bit will be automatically cleared when respective SOC0 conversion is started. \nIf this bit receive both a request to set and a request to clear simultaneously, the bit will be set and ignore the request to clear. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether this bit was previously set or not. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_PENDING</name>
                  <description>No sample pending for SOC0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_RECEIVED</name>
                  <description>Trigger has been received and sample is pending for SOC0</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCSOCFRC: ADC SOC Force Register -->
        <register>
          <name>ADCSOCFRC</name>
          <displayName>ADCSOCFRC</displayName>
          <description>ADC SOC Force Register</description>
          <addressOffset>0x00000040</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SOC15: SOC15 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC15</name>
              <description>SOC15 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[15:15]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC15 Flag bit in ADCSOCFLG Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC14: SOC14 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC14</name>
              <description>SOC14 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[14:14]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC14 Flag bit in ADCSOCFLG Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC13: SOC13 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC13</name>
              <description>SOC13 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[13:13]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC13 Flag bit in ADCSOCFLG Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC12: SOC12 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC12</name>
              <description>SOC12 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[12:12]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC12 Flag bit in ADCSOCFLG Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC11: SOC11 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC11</name>
              <description>SOC11 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[11:11]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC11 Flag bit in ADCSOCFLG Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC10: SOC10 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC10</name>
              <description>SOC10 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action. </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC10 Flag bit in ADCSOCFLG Register. </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC9: SOC9 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC9</name>
              <description>SOC9 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[9:9]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC9 Flag bit in ADCSOCFLG Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC8: SOC8 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC8</name>
              <description>SOC8 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC8 Flag bit in ADCSOCFLG Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC7: SOC7 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC7</name>
              <description>SOC7 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[7:7]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC7 Flag bit in ADCSOCFLG Register. </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC6: SOC6 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC6</name>
              <description>SOC6 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action. </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC6 Flag bit in ADCSOCFLG Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC5: SOC5 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC5</name>
              <description>SOC5 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC5 Flag bit in ADCSOCFLG Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC4: SOC4 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC4</name>
              <description>SOC4 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC4 Flag bit in ADCSOCFLG Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC3: SOC3 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC3</name>
              <description>SOC3 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC3 Flag bit in ADCSOCFLG Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC2: SOC2 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC2</name>
              <description>SOC2 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC2 Flag bit in ADCSOCFLG Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC1: SOC1 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC1</name>
              <description>SOC1 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC1 Flag bit in ADCSOCFLG Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC0: SOC0 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not.  -->
            <field>
              <name>SOC0</name>
              <description>SOC0 (State-machine of Conversion) Force Flag. This can be used to initialize a software initiated conversion. If ADCSOCFLG Register receive both a request to set from software and a request to clear from hardware simultaneously, then software has priority and ADCSOCFLG will be set. In this case, the overflow bit in the ADCSOCOVF Register will not be affected regardless of whether ADCSOCFLG bit was previously set or not. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No action</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CONVERT</name>
                  <description>Force High to SOC0 Flag bit in ADCSOCFLG Register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCSOCOVF: ADC SOC Overflow Register -->
        <register>
          <name>ADCSOCOVF</name>
          <displayName>ADCSOCOVF</displayName>
          <description>ADC SOC Overflow Register</description>
          <addressOffset>0x00000044</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SOC15: SOC15 (State-machine of Conversion) Overflow Flag. This indicates an SOC15 event was generated while an existing SOC15 event was already pending. This overflow flag can&apos;t stop SOC15 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC15</name>
              <description>SOC15 (State-machine of Conversion) Overflow Flag. This indicates an SOC15 event was generated while an existing SOC15 event was already pending. This overflow flag can&apos;t stop SOC15 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC15 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC15 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC14: SOC14 (State-machine of Conversion) Overflow Flag. This indicates an SOC14 event was generated while an existing SOC14 event was already pending. This overflow flag can&apos;t stop SOC14 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC14</name>
              <description>SOC14 (State-machine of Conversion) Overflow Flag. This indicates an SOC14 event was generated while an existing SOC14 event was already pending. This overflow flag can&apos;t stop SOC14 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC14 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC14 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC13: SOC13 (State-machine of Conversion) Overflow Flag. This indicates an SOC13 event was generated while an existing SOC13 event was already pending. This overflow flag can&apos;t stop SOC13 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC13</name>
              <description>SOC13 (State-machine of Conversion) Overflow Flag. This indicates an SOC13 event was generated while an existing SOC13 event was already pending. This overflow flag can&apos;t stop SOC13 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC13 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC13 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC12: SOC12 (State-machine of Conversion) Overflow Flag. This indicates an SOC12 event was generated while an existing SOC12 event was already pending. This overflow flag can&apos;t stop SOC12 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC12</name>
              <description>SOC12 (State-machine of Conversion) Overflow Flag. This indicates an SOC12 event was generated while an existing SOC12 event was already pending. This overflow flag can&apos;t stop SOC12 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC12 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC12 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC11: SOC11 (State-machine of Conversion) Overflow Flag. This indicates an SOC11 event was generated while an existing SOC11 event was already pending. This overflow flag can&apos;t stop SOC11 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC11</name>
              <description>SOC11 (State-machine of Conversion) Overflow Flag. This indicates an SOC11 event was generated while an existing SOC11 event was already pending. This overflow flag can&apos;t stop SOC11 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC11 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC11 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC10: SOC10 (State-machine of Conversion) Overflow Flag. This indicates an SOC10 event was generated while an existing SOC10 event was already pending. This overflow flag can&apos;t stop SOC10 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC10</name>
              <description>SOC10 (State-machine of Conversion) Overflow Flag. This indicates an SOC10 event was generated while an existing SOC10 event was already pending. This overflow flag can&apos;t stop SOC10 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC10 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC10 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC9: SOC9 (State-machine of Conversion) Overflow Flag. This indicates an SOC9 event was generated while an existing SOC9 event was already pending. This overflow flag can&apos;t stop SOC9 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC9</name>
              <description>SOC9 (State-machine of Conversion) Overflow Flag. This indicates an SOC9 event was generated while an existing SOC9 event was already pending. This overflow flag can&apos;t stop SOC9 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC9 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC9 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC8: SOC8 (State-machine of Conversion) Overflow Flag. This indicates an SOC8 event was generated while an existing SOC8 event was already pending. This overflow flag can&apos;t stop SOC8 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC8</name>
              <description>SOC8 (State-machine of Conversion) Overflow Flag. This indicates an SOC8 event was generated while an existing SOC8 event was already pending. This overflow flag can&apos;t stop SOC8 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC8 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC8 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC7: SOC7 (State-machine of Conversion) Overflow Flag. This indicates an SOC7 event was generated while an existing SOC7 event was already pending. This overflow flag can&apos;t stop SOC7 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC7</name>
              <description>SOC7 (State-machine of Conversion) Overflow Flag. This indicates an SOC7 event was generated while an existing SOC7 event was already pending. This overflow flag can&apos;t stop SOC7 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC7 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC7 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC6: SOC6 (State-machine of Conversion) Overflow Flag. This indicates an SOC6 event was generated while an existing SOC6 event was already pending. This overflow flag can&apos;t stop SOC6 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC6</name>
              <description>SOC6 (State-machine of Conversion) Overflow Flag. This indicates an SOC6 event was generated while an existing SOC6 event was already pending. This overflow flag can&apos;t stop SOC6 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC6 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC6 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC5: SOC5 (State-machine of Conversion) Overflow Flag. This indicates an SOC5 event was generated while an existing SOC5 event was already pending. This overflow flag can&apos;t stop SOC5 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC5</name>
              <description>SOC5 (State-machine of Conversion) Overflow Flag. This indicates an SOC5 event was generated while an existing SOC5 event was already pending. This overflow flag can&apos;t stop SOC5 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC5 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC5 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC4: SOC4 (State-machine of Conversion) Overflow Flag. This indicates an SOC4 event was generated while an existing SOC4 event was already pending. This overflow flag can&apos;t stop SOC4 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC4</name>
              <description>SOC4 (State-machine of Conversion) Overflow Flag. This indicates an SOC4 event was generated while an existing SOC4 event was already pending. This overflow flag can&apos;t stop SOC4 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC4 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC4 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC3: SOC3 (State-machine of Conversion) Overflow Flag. This indicates an SOC3 event was generated while an existing SOC3 event was already pending. This overflow flag can&apos;t stop SOC3 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC3</name>
              <description>SOC3 (State-machine of Conversion) Overflow Flag. This indicates an SOC3 event was generated while an existing SOC3 event was already pending. This overflow flag can&apos;t stop SOC3 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC3 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC3 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC2: SOC2 (State-machine of Conversion) Overflow Flag. This indicates an SOC2 event was generated while an existing SOC2 event was already pending. This overflow flag can&apos;t stop SOC2 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC2</name>
              <description>SOC2 (State-machine of Conversion) Overflow Flag. This indicates an SOC2 event was generated while an existing SOC2 event was already pending. This overflow flag can&apos;t stop SOC2 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC2 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC2 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC1: SOC1 (State-machine of Conversion) Overflow Flag. This indicates an SOC1 event was generated while an existing SOC1 event was already pending. This overflow flag can&apos;t stop SOC1 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC1</name>
              <description>SOC1 (State-machine of Conversion) Overflow Flag. This indicates an SOC1 event was generated while an existing SOC1 event was already pending. This overflow flag can&apos;t stop SOC1 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC1 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC1 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC0: SOC0 (State-machine of Conversion) Overflow Flag. This indicates an SOC0 event was generated while an existing SOC0 event was already pending. This overflow flag can&apos;t stop SOC0 events from being processing. It just show that a trigger was missed.  -->
            <field>
              <name>SOC0</name>
              <description>SOC0 (State-machine of Conversion) Overflow Flag. This indicates an SOC0 event was generated while an existing SOC0 event was already pending. This overflow flag can&apos;t stop SOC0 events from being processing. It just show that a trigger was missed. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>No SOC0 event overflow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>SOC0 event overflow</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCSOCOVFC: ADC SOC Overflow Clear Register -->
        <register>
          <name>ADCSOCOVFC</name>
          <displayName>ADCSOCOVFC</displayName>
          <description>ADC SOC Overflow Clear Register</description>
          <addressOffset>0x00000048</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SOC15: Clear SOC15 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC15 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC15</name>
              <description>Clear SOC15 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC15 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[15:15]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC15 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC14: Clear SOC14 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC14 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC14</name>
              <description>Clear SOC14 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC14 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[14:14]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC14 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC13: Clear SOC13 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC13 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC13</name>
              <description>Clear SOC13 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC13 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[13:13]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC13 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC12: Clear SOC12 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC12 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC12</name>
              <description>Clear SOC12 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC12 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[12:12]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC12 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC11: Clear SOC11 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC11 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC11</name>
              <description>Clear SOC11 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC11 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[11:11]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC11 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC10: Clear SOC10 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC10 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC10</name>
              <description>Clear SOC10 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC10 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC10 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC9: Clear SOC9 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC9 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC9</name>
              <description>Clear SOC9 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC9 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[9:9]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC9 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC8: Clear SOC8 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC8 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC8</name>
              <description>Clear SOC8 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC8 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC8 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC7: Clear SOC7 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC7 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC7</name>
              <description>Clear SOC7 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC7 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[7:7]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC7 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC6: Clear SOC6 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC6 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC6</name>
              <description>Clear SOC6 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC6 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC6 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC5: Clear SOC5 Overflow Flag  If this bit receive a request to set from software and hardware try to set respective SOC5 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC5</name>
              <description>Clear SOC5 Overflow Flag \nIf this bit receive a request to set from software and hardware try to set respective SOC5 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC5 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC4: Clear SOC4 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC4 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC4</name>
              <description>Clear SOC4 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC4 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC4 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC3: Clear SOC3 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC3 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC3</name>
              <description>Clear SOC3 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC3 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC3 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC2: Clear SOC2 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC2 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC2</name>
              <description>Clear SOC2 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC2 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC2 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC1: Clear SOC1 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC1 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC1</name>
              <description>Clear SOC1 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC1 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC1 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC0: Clear SOC0 Overflow Flag If this bit receive a request to set from software and hardware try to set respective SOC0 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set.  -->
            <field>
              <name>SOC0</name>
              <description>Clear SOC0 Overflow Flag\nIf this bit receive a request to set from software and hardware try to set respective SOC0 overflow bit in ADCSOCOVF Register simultaneously, then hardware has priority and ADCSOCOVF Register will be set. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Clear SOC0 Overflow Flag</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCSOCCTL[16]: ADC SOC0 Control Register -->
        <register>
          <!-- dimElementGroup -->
          <dim>16</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>ADCSOCCTL[%s]</name>
          <displayName>ADCSOCCTL[%s]</displayName>
          <description>ADC SOC0 Control Register</description>
          <addressOffset>0x0000004C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SHAEN: Enable Sample and Hold A(SHA) to sample input of CHSELAP and CHSELAN -->
            <field>
              <name>SHAEN</name>
              <description>Enable Sample and Hold A(SHA) to sample input of CHSELAP and CHSELAN</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable SHA to sample </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable SHA to sample </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SHBEN: Enable Sample and Hold B(SHB) to sample input of CHSELBP and CHSELBN -->
            <field>
              <name>SHBEN</name>
              <description>Enable Sample and Hold B(SHB) to sample input of CHSELBP and CHSELBN</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable SHB to sample </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable SHB to sample</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TRIGSEL: Select SOC0 Trigger Source  Configures which trigger source will set SOC0 flag in the ADCSOCFLG Register. The Flag will initiate a conversion to start once and the priority is given to SOC0. This setting can be overridden by the respective SOC0 Field in the ADCINTSOCSEL0~2 Registers.  -->
            <field>
              <name>TRIGSEL</name>
              <description>Select SOC0 Trigger Source \nConfigures which trigger source will set SOC0 flag in the ADCSOCFLG Register. The Flag will initiate a conversion to start once and the priority is given to SOC0. This setting can be overridden by the respective SOC0 Field in the ADCINTSOCSEL0~2 Registers. </description>
              <bitRange>[29:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SOFTWARE</name>
                  <description>ADCTRIG0 - Software only</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TIMER0</name>
                  <description>ADCTRIG1 - CPU Timer 0 </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TIMER1</name>
                  <description>ADCTRIG2 - CPU Timer 1 </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TIMER2</name>
                  <description>ADCTRIG3 - CPU Timer 2 </description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>XINT2</name>
                  <description>ADCTRIG4 - XINT2 </description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM0A</name>
                  <description>ADCTRIG5 - PWM0A </description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM0B</name>
                  <description>ADCTRIG6 - PWM0B </description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM1A</name>
                  <description>ADCTRIG7 - PWM1A </description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM1B</name>
                  <description>ADCTRIG8 - PWM1B </description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM2A</name>
                  <description>ADCTRIG9 - PWM2A </description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM2B</name>
                  <description>ADCTRIG10 - PWM2B </description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM3A</name>
                  <description>ADCTRIG11 - PWM3A </description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM3B</name>
                  <description>ADCTRIG12 - PWM3B </description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM4A</name>
                  <description>ADCTRIG13 - PWM4A </description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM4B</name>
                  <description>ADCTRIG14 - PWM4B </description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM5A</name>
                  <description>ADCTRIG15 - PWM5A </description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM5B</name>
                  <description>ADCTRIG16 - PWM5B </description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM6A</name>
                  <description>ADCTRIG17 - PWM6A </description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM6B</name>
                  <description>ADCTRIG18 - PWM6B </description>
                  <value>0x12</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CHSELBP: Select channel to positive terminal of SHB for SOC0 -->
            <field>
              <name>CHSELBP</name>
              <description>Select channel to positive terminal of SHB for SOC0</description>
              <bitRange>[24:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PGA2P_OUT</name>
                  <description>Positive output of PGA2 </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PGA1P_OUT</name>
                  <description>Positive output of PGA1 </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GND</name>
                  <description>VSSA </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TSENSOR1</name>
                  <description>T-sensor output 1 </description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC8</name>
                  <description>GPIO9 </description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC9</name>
                  <description>GPIO10 </description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC10</name>
                  <description>GPIO11 </description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC11</name>
                  <description>GPIO12 </description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CHSELBN: Select channel to negative terminal of SHB for SOC0 -->
            <field>
              <name>CHSELBN</name>
              <description>Select channel to negative terminal of SHB for SOC0</description>
              <bitRange>[21:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PGA2N_OUT</name>
                  <description>Negative output of PGA2 </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PGA1N_OUT</name>
                  <description>Negative output of PGA1 </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GND</name>
                  <description>VSSA </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TSENSOR0</name>
                  <description>T-sensor output 0 </description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC12</name>
                  <description>GPIO13 </description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC13</name>
                  <description>GPIO14 </description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC14</name>
                  <description>GPIO15 </description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC15</name>
                  <description>GPIO16 </description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CHSELAP: Select channel to positive terminal of SHA for SOC0 -->
            <field>
              <name>CHSELAP</name>
              <description>Select channel to positive terminal of SHA for SOC0</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PGA0P_OUT</name>
                  <description>Positive output of PGA0 </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PGA1P_OUT</name>
                  <description>Positive output of PGA1 </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GND</name>
                  <description>VSSA </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VDD12</name>
                  <description>VDD12 </description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC0</name>
                  <description>GPIO1 </description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC1</name>
                  <description>GPIO2 </description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC2</name>
                  <description>GPIO3 </description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC3</name>
                  <description>GPIO4 </description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CHSELAN: Select channel to negative terminal of SHA for SOC0 -->
            <field>
              <name>CHSELAN</name>
              <description>Select channel to negative terminal of SHA for SOC0</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PGA0N_OUT</name>
                  <description>Negative output of PGA0 </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PGA1N_OUT</name>
                  <description>Negative output of PGA1 </description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GND</name>
                  <description>VSSA </description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VDDA</name>
                  <description>VDDA </description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC4</name>
                  <description>GPIO5 </description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC5</name>
                  <description>GPIO6 </description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC6</name>
                  <description>GPIO7 </description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC7</name>
                  <description>GPIO8 </description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SAMPCNT: Select SOC0 Sample Window Size -->
            <field>
              <name>SAMPCNT</name>
              <description>Select SOC0 Sample Window Size</description>
              <bitRange>[12:6]</bitRange>
              <access>read-write</access>
            </field>

            <!-- CONVCNT: Select SOC0 Convert Window Size -->
            <field>
              <name>CONVCNT</name>
              <description>Select SOC0 Convert Window Size</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- ADCGAINTRIM: ADC Gain Trim Register -->
        <register>
          <name>ADCGAINTRIM</name>
          <displayName>ADCGAINTRIM</displayName>
          <description>ADC Gain Trim Register</description>
          <addressOffset>0x0000008C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SHBGAIN: Gain Error Register 1. It will store the gain-error of SHB and ADC core.  -->
            <field>
              <name>SHBGAIN</name>
              <description>Gain Error Register 1. It will store the gain-error of SHB and ADC core. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>

            <!-- SHAGAIN: Gain Error Register 0. It will store the gain-error of SHA and ADC core.  -->
            <field>
              <name>SHAGAIN</name>
              <description>Gain Error Register 0. It will store the gain-error of SHA and ADC core. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- ADCOFFSETTRIM: ADC Offset Trim Register -->
        <register>
          <name>ADCOFFSETTRIM</name>
          <displayName>ADCOFFSETTRIM</displayName>
          <description>ADC Offset Trim Register</description>
          <addressOffset>0x00000090</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SHBOFFSET: Offset Error Register 1. It will store the offset-error of SHB and ADC core.  -->
            <field>
              <name>SHBOFFSET</name>
              <description>Offset Error Register 1. It will store the offset-error of SHB and ADC core. </description>
              <bitRange>[17:9]</bitRange>
              <access>read-write</access>
            </field>

            <!-- SHAOFFSET: Offset Error Register 0. It will store the offset-error of SHA and ADC core.  -->
            <field>
              <name>SHAOFFSET</name>
              <description>Offset Error Register 0. It will store the offset-error of SHA and ADC core. </description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- ADCRESULT[16]: ADC Result Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>16</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>ADCRESULT[%s]</name>
          <displayName>ADCRESULT[%s]</displayName>
          <description>ADC Result Register 0</description>
          <addressOffset>0x00000098</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: 13-bit ADC result - Sequential Sampling Mode After the ADC completes a conversion of an SOC0, the digital result is placed in the corresponding ADCRESULT0 Register.  - Simultaneous Sampling Mode After the ADC completes a conversion of a channel pair, the digital results are found in the corresponding ADCRESULTx and ADCRESULTx+1 registers  (assuming x is even). For example, for SOC0, the completed results of those conversions will be placed in ADCRESULT0 and ADCRESULT1.  -->
            <field>
              <name>VAL</name>
              <description>13-bit ADC result\n- Sequential Sampling Mode\nAfter the ADC completes a conversion of an SOC0, the digital result is placed in the corresponding ADCRESULT0 Register. \n- Simultaneous Sampling Mode\nAfter the ADC completes a conversion of a channel pair, the digital results are found in the corresponding ADCRESULTx and ADCRESULTx+1 registers \n(assuming x is even). For example, for SOC0, the completed results of those conversions will be placed in ADCRESULT0 and ADCRESULT1. </description>
              <bitRange>[12:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- ADCSTS: ADC Status Register -->
        <register>
          <name>ADCSTS</name>
          <displayName>ADCSTS</displayName>
          <description>ADC Status Register</description>
          <addressOffset>0x000000D8</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- COMPSTSCLR: Write 1 to clear latched comparator status(self-clear) -->
            <field>
              <name>COMPSTSCLR</name>
              <description>Write 1 to clear latched comparator status(self-clear)</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Has no effect</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear latched comparator status</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP2H: The output of comparator for high-voltage protection in PGA 2 -->
            <field>
              <name>COMP2H</name>
              <description>The output of comparator for high-voltage protection in PGA 2</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>The output of comparator for high-voltage protection in PGA 2 is low</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>The output of comparator for high-voltage protection in PGA 2 is high</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP1H: The output of comparator for high-voltage protection in PGA 1 -->
            <field>
              <name>COMP1H</name>
              <description>The output of comparator for high-voltage protection in PGA 1</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>The output of comparator for high-voltage protection in PGA 1 is low</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>The output of comparator for high-voltage protection in PGA 1 is high</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP0H: The output of comparator for high-voltage protection in PGA 0 -->
            <field>
              <name>COMP0H</name>
              <description>The output of comparator for high-voltage protection in PGA 0</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>The output of comparator for high-voltage protection in PGA 0 is low</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>The output of comparator for high-voltage protection in PGA 0 is high</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP2L: The output of comparator for low-voltage protection in PGA 2 -->
            <field>
              <name>COMP2L</name>
              <description>The output of comparator for low-voltage protection in PGA 2</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>The output of comparator for low-voltage protection in PGA 2 is low</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>The output of comparator for low-voltage protection in PGA 2 is high</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP1L: The output of comparator for low-voltage protection in PGA 1 -->
            <field>
              <name>COMP1L</name>
              <description>The output of comparator for low-voltage protection in PGA 1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>The output of comparator for low-voltage protection in PGA 1 is low</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>The output of comparator for low-voltage protection in PGA 1 is high</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- COMP0L: The output of comparator for low-voltage protection in PGA 0 -->
            <field>
              <name>COMP0L</name>
              <description>The output of comparator for low-voltage protection in PGA 0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOW</name>
                  <description>The output of comparator for low-voltage protection in PGA 0 is low</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HIGH</name>
                  <description>The output of comparator for low-voltage protection in PGA 0 is high</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- TSENSCTL: Temperature Sensor Control Register -->
        <register>
          <name>TSENSCTL</name>
          <displayName>TSENSCTL</displayName>
          <description>Temperature Sensor Control Register</description>
          <addressOffset>0x000000DC</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: T-sensor enable  -->
            <field>
              <name>EN</name>
              <description>T-sensor enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable T-sensor </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable T-sensor </description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ADCTRIM: ADC Trimming Control Register -->
        <register>
          <name>ADCTRIM</name>
          <displayName>ADCTRIM</displayName>
          <description>ADC Trimming Control Register</description>
          <addressOffset>0x00000100</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0053DC00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VREGBLEEDTRIM: Trimming option (fine) for ADC 1.2V Regulator output  -->
            <field>
              <name>VREGBLEEDTRIM</name>
              <description>Trimming option (fine) for ADC 1.2V Regulator output </description>
              <bitRange>[22:19]</bitRange>
              <access>read-write</access>
            </field>

            <!-- VREFTRIM: Trimming option of ADC 1.2V Reference  -->
            <field>
              <name>VREFTRIM</name>
              <description>Trimming option of ADC 1.2V Reference </description>
              <bitRange>[18:14]</bitRange>
              <access>read-write</access>
            </field>

            <!-- VREGTRIM: Trimming option (coarse) for ADC 1.2V Regulator output  -->
            <field>
              <name>VREGTRIM</name>
              <description>Trimming option (coarse) for ADC 1.2V Regulator output </description>
              <bitRange>[13:10]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- ADCINTSOCSEL2: ADC Interrupt Trigger SOC Select Register 2 -->
        <register>
          <name>ADCINTSOCSEL2</name>
          <displayName>ADCINTSOCSEL2</displayName>
          <description>ADC Interrupt Trigger SOC Select Register 2</description>
          <addressOffset>0x00000104</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- SOC15: Select ADC interrupt source for SOC15. This Field will overrides the TRIGSEL Field in the ADCSOC15CTL Register.  TRIGSEL Field will determine trigger source for SOC15.  -->
            <field>
              <name>SOC15</name>
              <description>Select ADC interrupt source for SOC15. This Field will overrides the TRIGSEL Field in the ADCSOC15CTL Register. \nTRIGSEL Field will determine trigger source for SOC15. </description>
              <bitRange>[19:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC15</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC15</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC15</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC15</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC15</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC15</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC15</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC15</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC15</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC15</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC15</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC15</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC15</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC15</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC15</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC15</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC14: Select ADC interrupt source for SOC14. This Field will overrides the TRIGSEL Field in the ADCSOC14CTL Register.  TRIGSEL Field will determine trigger source for SOC14.  -->
            <field>
              <name>SOC14</name>
              <description>Select ADC interrupt source for SOC14. This Field will overrides the TRIGSEL Field in the ADCSOC14CTL Register. \nTRIGSEL Field will determine trigger source for SOC14. </description>
              <bitRange>[14:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC14</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC14</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC14</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC14</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC14</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC14</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC14</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC14</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC14</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC14</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC14</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC14</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC14</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC14</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC14</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC14</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC13: Select ADC interrupt source for SOC13. This Field will overrides the TRIGSEL Field in the ADCSOC13CTL Register.  TRIGSEL Field will determine trigger source for SOC13.  -->
            <field>
              <name>SOC13</name>
              <description>Select ADC interrupt source for SOC13. This Field will overrides the TRIGSEL Field in the ADCSOC13CTL Register. \nTRIGSEL Field will determine trigger source for SOC13. </description>
              <bitRange>[9:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC13</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC13</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC13</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC13</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC13</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC13</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC13</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC13</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC13</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC13</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC13</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC13</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC13</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC13</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC13</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC13</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SOC12: Select ADC interrupt source for SOC12. This Field will overrides the TRIGSEL Field in the ADCSOC12CTL Register.  TRIGSEL Field will determine trigger source for SOC12.  -->
            <field>
              <name>SOC12</name>
              <description>Select ADC interrupt source for SOC12. This Field will overrides the TRIGSEL Field in the ADCSOC12CTL Register. \nTRIGSEL Field will determine trigger source for SOC12. </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_BY_INT0</name>
                  <description>Select ADCINT0 trigger SOC12</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT1</name>
                  <description>Select ADCINT1 trigger SOC12</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT2</name>
                  <description>Select ADCINT2 trigger SOC12</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT3</name>
                  <description>Select ADCINT3 trigger SOC12</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT4</name>
                  <description>Select ADCINT4 trigger SOC12</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT5</name>
                  <description>Select ADCINT5 trigger SOC12</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT6</name>
                  <description>Select ADCINT6 trigger SOC12</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT7</name>
                  <description>Select ADCINT7 trigger SOC12</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT8</name>
                  <description>Select ADCINT8 trigger SOC12</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT9</name>
                  <description>Select ADCINT9 trigger SOC12</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT10</name>
                  <description>Select ADCINT10 trigger SOC12</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT11</name>
                  <description>Select ADCINT11 trigger SOC12</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT12</name>
                  <description>Select ADCINT12 trigger SOC12</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT13</name>
                  <description>Select ADCINT13 trigger SOC12</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT14</name>
                  <description>Select ADCINT14 trigger SOC12</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_BY_INT15</name>
                  <description>Select ADCINT15 trigger SOC12</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>CLOCK</name>
      <description>Split from GLOBAL</description>
      <groupName>CLOCK</groupName>
      <baseAddress>0x4000B000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x174</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
         <name>CLOCK</name>
         <description>CLOCK     </description>
         <value>37</value>
      </interrupt>
      <registers>

        <!-- HCLKCTL: HCLK Control Register -->
        <register>
          <name>HCLKCTL</name>
          <displayName>HCLKCTL</displayName>
          <description>HCLK Control Register</description>
          <addressOffset>0x00000094</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- PCLKCTL: PCLK Control Register -->
        <register>
          <name>PCLKCTL</name>
          <displayName>PCLKCTL</displayName>
          <description>PCLK Control Register</description>
          <addressOffset>0x00000098</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- UARTCLKCTL: UART Clock Control Register -->
        <register>
          <name>UARTCLKCTL</name>
          <displayName>UARTCLKCTL</displayName>
          <description>UART Clock Control Register</description>
          <addressOffset>0x0000009C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- SSPCLKCTL: SSP Clock Control Register -->
        <register>
          <name>SSPCLKCTL</name>
          <displayName>SSPCLKCTL</displayName>
          <description>SSP Clock Control Register</description>
          <addressOffset>0x000000A0</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000181</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DIV1: Clock dividing ratio for the 2nd divider -->
            <field>
              <name>DIV1</name>
              <description>Clock dividing ratio for the 2nd divider</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV0: Clock dividing ratio for the 1st divider -->
            <field>
              <name>DIV0</name>
              <description>Clock dividing ratio for the 1st divider</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- QSPICLKCTL: QSPI Clock Control Register -->
        <register>
          <name>QSPICLKCTL</name>
          <displayName>QSPICLKCTL</displayName>
          <description>QSPI Clock Control Register</description>
          <addressOffset>0x000000A4</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- I2CCLKCTL: I2C Clock Control Register -->
        <register>
          <name>I2CCLKCTL</name>
          <displayName>I2CCLKCTL</displayName>
          <description>I2C Clock Control Register</description>
          <addressOffset>0x000000A8</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- ADCCLKCTL: ADC Clock Control Register -->
        <register>
          <name>ADCCLKCTL</name>
          <displayName>ADCCLKCTL</displayName>
          <description>ADC Clock Control Register</description>
          <addressOffset>0x000000AC</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- PWM0CLKCTL: PWM0 Clock Control Register -->
        <register>
          <name>PWM0CLKCTL</name>
          <displayName>PWM0CLKCTL</displayName>
          <description>PWM0 Clock Control Register</description>
          <addressOffset>0x000000B0</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- GLBCLKCTL: Global Clock Control Register -->
        <register>
          <name>GLBCLKCTL</name>
          <displayName>GLBCLKCTL</displayName>
          <description>Global Clock Control Register</description>
          <addressOffset>0x000000B4</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x080003C0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- PWMCLKSYNC: PWM clock synchronization -->
            <field>
              <name>PWMCLKSYNC</name>
              <description>PWM clock synchronization</description>
              <bitRange>[29:29]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Write a 1 will issue a PWM clock synchronization. This bit is self-cleared.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WDT1CLKSEL: WDT1CLK selection -->
            <field>
              <name>WDT1CLKSEL</name>
              <description>WDT1CLK selection</description>
              <bitRange>[28:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RCO0</name>
                  <description>CLK_RCO0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RCO1</name>
                  <description>CLK_RCO1</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL</name>
                  <description>CLK_PLL</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>XO</name>
                  <description>CLK_XO</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- WDT0CLKSEL: WDT0CLK selection -->
            <field>
              <name>WDT0CLKSEL</name>
              <description>WDT0CLK selection</description>
              <bitRange>[26:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RCO0</name>
                  <description>CLK_RCO0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RCO1</name>
                  <description>CLK_RCO1</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL</name>
                  <description>CLK_PLL</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>XO</name>
                  <description>CLK_XO</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ECAPCLKSEL: ECAPCLK selection -->
            <field>
              <name>ECAPCLKSEL</name>
              <description>ECAPCLK selection</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLK1</name>
                  <description>CLK1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK0</name>
                  <description>CLK0</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PWM6CLKSEL: PWM6CLK selection -->
            <field>
              <name>PWM6CLKSEL</name>
              <description>PWM6CLK selection</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLK1</name>
                  <description>CLK1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>CLK_PWM</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK0</name>
                  <description>CLK0</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PWM5CLKSEL: PWM5CLK selection -->
            <field>
              <name>PWM5CLKSEL</name>
              <description>PWM5CLK selection</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLK1</name>
                  <description>CLK1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>CLK_PWM</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK0</name>
                  <description>CLK0</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PWM4CLKSEL: PWM4CLK selection -->
            <field>
              <name>PWM4CLKSEL</name>
              <description>PWM4CLK selection</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLK1</name>
                  <description>CLK1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>CLK_PWM</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK0</name>
                  <description>CLK0</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PWM3CLKSEL: PWM3CLK selection -->
            <field>
              <name>PWM3CLKSEL</name>
              <description>PWM3CLK selection</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLK1</name>
                  <description>CLK1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>CLK_PWM</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK0</name>
                  <description>CLK0</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PWM2CLKSEL: PWM2CLK selection -->
            <field>
              <name>PWM2CLKSEL</name>
              <description>PWM2CLK selection</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLK1</name>
                  <description>CLK1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>CLK_PWM</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK0</name>
                  <description>CLK0</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PWM1CLKSEL: PWM1CLK selection -->
            <field>
              <name>PWM1CLKSEL</name>
              <description>PWM1CLK selection</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLK1</name>
                  <description>CLK1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>CLK_PWM</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK0</name>
                  <description>CLK0</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PWM0CLKSEL: PWM0CLK selection -->
            <field>
              <name>PWM0CLKSEL</name>
              <description>PWM0CLK selection</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLK1</name>
                  <description>CLK1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>CLK_PWM</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK0</name>
                  <description>CLK0</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLK1SEL: CLK1 selection -->
            <field>
              <name>CLK1SEL</name>
              <description>CLK1 selection</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>XO</name>
                  <description>CLK_XO</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL</name>
                  <description>CLK_PLL</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RCO1</name>
                  <description>CLK_RCO1</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLK0SEL: CLK0 selection -->
            <field>
              <name>CLK0SEL</name>
              <description>CLK0 selection</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>XO</name>
                  <description>CLK_XO</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL</name>
                  <description>CLK_PLL</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RCO0</name>
                  <description>CLK_RCO0</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLK1GATEDIS: Disable CLK1 gating -->
            <field>
              <name>CLK1GATEDIS</name>
              <description>Disable CLK1 gating</description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE_CLK1_GATE</name>
                  <description>Write a 1 will issue a pulse to disable CLK1 gating so that CLK1 will be on. This bit is self-cleared</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLK1GATEEN: Enable CLK1 gating -->
            <field>
              <name>CLK1GATEEN</name>
              <description>Enable CLK1 gating</description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE_CLK1_GATE</name>
                  <description>Write a 1 will issue a pulse to enable CLK1 gating so that CLK1 will be off. This bit is self-cleared</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLK1GATEBYP: Bypass CLK1 gating -->
            <field>
              <name>CLK1GATEBYP</name>
              <description>Bypass CLK1 gating</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Activate the CLK1 gating logic so CLK1 can be on/off by writing 1 to CLK1GATEDIS or CLK1GATEEN</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Bypass the CLK1 gating logic so that CLK1 is always on</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLK0GATEDIS: Disable CLK0 gating -->
            <field>
              <name>CLK0GATEDIS</name>
              <description>Disable CLK0 gating</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE_CLK0_GATE</name>
                  <description>Write a 1 will issue a pulse to disable CLK0 gating so that CLK0 will be on. This bit is self-cleared</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLK0GATEEN: Enable CLK0 gating -->
            <field>
              <name>CLK0GATEEN</name>
              <description>Enable CLK0 gating</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE_CLK0_GATE</name>
                  <description>Write a 1 will issue a pulse to enable CLK0 gating so that CLK0 will be off. This bit is self-cleared</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CLK0GATEBYP: Bypass CLK0 gating -->
            <field>
              <name>CLK0GATEBYP</name>
              <description>Bypass CLK0 gating</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Activate the CLK0 gating logic so CLK0 can be on/off by writing 1 to CLK0GATEDIS or CLK0GATEEN</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Bypass the CLK0 gating logic so that CLK0 is always on</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- ECAPCLKCTL: ECAP Clock Control Register -->
        <register>
          <name>ECAPCLKCTL</name>
          <displayName>ECAPCLKCTL</displayName>
          <description>ECAP Clock Control Register</description>
          <addressOffset>0x000000B8</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- DGCLKCTL: De-glitch Clock Control Register -->
        <register>
          <name>DGCLKCTL</name>
          <displayName>DGCLKCTL</displayName>
          <description>De-glitch Clock Control Register</description>
          <addressOffset>0x000000C0</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DIV: De-glitch clock dividing ratio from PCLK -->
            <field>
              <name>DIV</name>
              <description>De-glitch clock dividing ratio from PCLK</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1</name>
                  <description>Divide by 1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Divide by 2</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Divide by 4</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>8</name>
                  <description>Divide by 8</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>16</name>
                  <description>Divide by 16</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>32</name>
                  <description>Divide by 32</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>64</name>
                  <description>Divide by 64</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>128</name>
                  <description>Divide by 128</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- PWM1CLKCTL: PWM1 Clock Control Register -->
        <register>
          <name>PWM1CLKCTL</name>
          <displayName>PWM1CLKCTL</displayName>
          <description>PWM1 Clock Control Register</description>
          <addressOffset>0x000000E4</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- PWM2CLKCTL: PWM2 Clock Control Register -->
        <register>
          <name>PWM2CLKCTL</name>
          <displayName>PWM2CLKCTL</displayName>
          <description>PWM2 Clock Control Register</description>
          <addressOffset>0x000000E8</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- PWM3CLKCTL: PWM3 Clock Control Register -->
        <register>
          <name>PWM3CLKCTL</name>
          <displayName>PWM3CLKCTL</displayName>
          <description>PWM3 Clock Control Register</description>
          <addressOffset>0x000000EC</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- PWM4CLKCTL: PWM4 Clock Control Register -->
        <register>
          <name>PWM4CLKCTL</name>
          <displayName>PWM4CLKCTL</displayName>
          <description>PWM4 Clock Control Register</description>
          <addressOffset>0x000000F0</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- PWM5CLKCTL: PWM5 Clock Control Register -->
        <register>
          <name>PWM5CLKCTL</name>
          <displayName>PWM5CLKCTL</displayName>
          <description>PWM5 Clock Control Register</description>
          <addressOffset>0x000000F4</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- PWM6CLKCTL: PWM6 Clock Control Register -->
        <register>
          <name>PWM6CLKCTL</name>
          <displayName>PWM6CLKCTL</displayName>
          <description>PWM6 Clock Control Register</description>
          <addressOffset>0x000000F8</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CLKDETCTL: Clock Detection Control Register -->
        <register>
          <name>CLKDETCTL</name>
          <displayName>CLKDETCTL</displayName>
          <description>Clock Detection Control Register</description>
          <addressOffset>0x000000FC</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock detection enable When disabled, the interrupts and the clock error events will be cleared -->
            <field>
              <name>EN</name>
              <description>Clock detection enable\nWhen disabled, the interrupts and the clock error events will be cleared</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock detection</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock detection</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TZOE: Clock error trip-zone event enable This bit does not affect internal clock error status. If clock error happened during the period this bit is set to 0, a trip-zone event will be issued immediately when this bit is set to 1 -->
            <field>
              <name>TZOE</name>
              <description>Clock error trip-zone event enable\nThis bit does not affect internal clock error status. If clock error happened during the period this bit is set to 0, a trip-zone event will be issued immediately when this bit is set to 1</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock error trip-zone event</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock error trip-zone event</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IE: Clock detection interrupt enable When enabled, an interrupt will be generated at the end of a clock detect cycle -->
            <field>
              <name>IE</name>
              <description>Clock detection interrupt enable\nWhen enabled, an interrupt will be generated at the end of a clock detect cycle</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock detection interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock detection interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IC: Clock detection interrupt clear -->
            <field>
              <name>IC</name>
              <description>Clock detection interrupt clear</description>
              <bitRange>[12:12]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Write 1 will clear the interrupt event. This bit is self cleared to 0</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCLKDIV: DCLK dividing ratio -->
            <field>
              <name>DCLKDIV</name>
              <description>DCLK dividing ratio</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1</name>
                  <description>Divide by 1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Divide by 2</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Divide by 4</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>8</name>
                  <description>Divide by 8</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>16</name>
                  <description>Divide by 16</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>32</name>
                  <description>Divide by 32</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>64</name>
                  <description>Divide by 64</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>128</name>
                  <description>Divide by 128</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RCLKDIV: MCLK dividing ratio -->
            <field>
              <name>RCLKDIV</name>
              <description>MCLK dividing ratio</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1</name>
                  <description>Divide by 1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Divide by 2</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Divide by 4</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>8</name>
                  <description>Divide by 8</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>16</name>
                  <description>Divide by 16</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>32</name>
                  <description>Divide by 32</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>64</name>
                  <description>Divide by 64</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>128</name>
                  <description>Divide by 128</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCLKSEL: Detected clock select -->
            <field>
              <name>DCLKSEL</name>
              <description>Detected clock select</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RCO0</name>
                  <description>CLK_RCO0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RCO1</name>
                  <description>CLK_RCO1</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>XO</name>
                  <description>CLK_XO</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL</name>
                  <description>CLK_PLL</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>CLK_PWM</description>
                  <value>0x4</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RCLKSEL: Master clock select -->
            <field>
              <name>RCLKSEL</name>
              <description>Master clock select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RCO0</name>
                  <description>CLK_RCO0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RCO1</name>
                  <description>CLK_RCO1</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>XO</name>
                  <description>CLK_XO</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL</name>
                  <description>CLK_PLL</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>CLK_PWM</description>
                  <value>0x4</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- CLKDETCTH: Clock Detection Counter Threshold Register -->
        <register>
          <name>CLKDETCTH</name>
          <displayName>CLKDETCTH</displayName>
          <description>Clock Detection Counter Threshold Register</description>
          <addressOffset>0x00000100</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- HI: Upper counter threshold for clock detect If the final counter value &amp;gt; HI, a trip-zone event will be generated for PWM -->
            <field>
              <name>HI</name>
              <description>Upper counter threshold for clock detect\nIf the final counter value &amp;gt; HI, a trip-zone event will be generated for PWM</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>

            <!-- LO: Lower counter threshold for clock detect If the final counter value &amp;lt; LO, a trip-zone event will be generated for PWM -->
            <field>
              <name>LO</name>
              <description>Lower counter threshold for clock detect\nIf the final counter value &amp;lt; LO, a trip-zone event will be generated for PWM</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CLKDETCNT: Clock Detection Counter Register -->
        <register>
          <name>CLKDETCNT</name>
          <displayName>CLKDETCNT</displayName>
          <description>Clock Detection Counter Register</description>
          <addressOffset>0x00000104</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Final counter value of the clock detect -->
            <field>
              <name>VAL</name>
              <description>Final counter value of the clock detect</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- CLKSTS: Clock Status Register -->
        <register>
          <name>CLKSTS</name>
          <displayName>CLKSTS</displayName>
          <description>Clock Status Register</description>
          <addressOffset>0x00000114</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x0000001E</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CLKDETERR: Clock error indicator from the clock detector -->
            <field>
              <name>CLKDETERR</name>
              <description>Clock error indicator from the clock detector</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Clock is correct for last detection</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Clock is error for last detection</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PLLFLGRDY: PLL frequency calibration flag ready indicator -->
            <field>
              <name>PLLFLGRDY</name>
              <description>PLL frequency calibration flag ready indicator</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_READY</name>
                  <description>PLLFLG is invalid</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READY</name>
                  <description>PLLFLG is valid</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PLLFLG: PLL frequency calibration flag -->
            <field>
              <name>PLLFLG</name>
              <description>PLL frequency calibration flag</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TOO_SLOW</name>
                  <description>VCO in PLL is too slow</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TOO_FAST</name>
                  <description>VCO in PLL is too fast</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PLLCSDDN: PLL down-cycle-slip detection status Once it is 1, this bit keeps as 1 until PLLCTL0.CSDEN=0 or PLLCTL0.CSDRST=1 -->
            <field>
              <name>PLLCSDDN</name>
              <description>PLL down-cycle-slip detection status\nOnce it is 1, this bit keeps as 1 until PLLCTL0.CSDEN=0 or PLLCTL0.CSDRST=1</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_DETECTED</name>
                  <description>Down-cycle-slip is not detected</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DETECTED</name>
                  <description>Down-cycle-slip is detected since feedback divider output is too fast</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PLLCSDUP: PLL up-cycle-slip detection status Once it is 1, this bit keeps as 1 until PLLCTL10.CSDEN=0 or PLLCTL0.CSDRST=1 -->
            <field>
              <name>PLLCSDUP</name>
              <description>PLL up-cycle-slip detection status\nOnce it is 1, this bit keeps as 1 until PLLCTL10.CSDEN=0 or PLLCTL0.CSDRST=1</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_DETECTED</name>
                  <description>Up-cycle-slip is not detected</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DETECTED</name>
                  <description>Up-cycle-slip is detected since feedback divider output is too fast</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PLLPRDY: PLL PWM clock ready indicator -->
            <field>
              <name>PLLPRDY</name>
              <description>PLL PWM clock ready indicator</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_READY</name>
                  <description>Not ready</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READY</name>
                  <description>Ready</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PLLDRDY: PLL digital clock ready indicator -->
            <field>
              <name>PLLDRDY</name>
              <description>PLL digital clock ready indicator</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_READY</name>
                  <description>Not ready</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READY</name>
                  <description>Ready</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PLLARDY: PLL analog clock ready indicator -->
            <field>
              <name>PLLARDY</name>
              <description>PLL analog clock ready indicator</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_READY</name>
                  <description>Not ready</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READY</name>
                  <description>Ready</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- XORDY: XO clock ready indicator -->
            <field>
              <name>XORDY</name>
              <description>XO clock ready indicator</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_READY</name>
                  <description>Not ready</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READY</name>
                  <description>Ready</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RCO1DRDY: RCO1 digital clock ready indicator -->
            <field>
              <name>RCO1DRDY</name>
              <description>RCO1 digital clock ready indicator</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_READY</name>
                  <description>Not ready</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READY</name>
                  <description>Ready</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RCO1ARDY: RCO1 analog clock ready indicator -->
            <field>
              <name>RCO1ARDY</name>
              <description>RCO1 analog clock ready indicator</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_READY</name>
                  <description>Not ready</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READY</name>
                  <description>Ready</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RCO0DRDY: RCO0 digital clock ready indicator -->
            <field>
              <name>RCO0DRDY</name>
              <description>RCO0 digital clock ready indicator</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_READY</name>
                  <description>Not ready</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READY</name>
                  <description>Ready</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RCO0ARDY: RCO0 analog clock ready indicator -->
            <field>
              <name>RCO0ARDY</name>
              <description>RCO0 analog clock ready indicator</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_READY</name>
                  <description>Not ready</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READY</name>
                  <description>Ready</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CPREGRDY: CPREG ready indicator -->
            <field>
              <name>CPREGRDY</name>
              <description>CPREG ready indicator</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_READY</name>
                  <description>Not ready</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READY</name>
                  <description>Ready</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- CPREGCTL: Charge-pump Regulator Control Register -->
        <register>
          <name>CPREGCTL</name>
          <displayName>CPREGCTL</displayName>
          <description>Charge-pump Regulator Control Register</description>
          <addressOffset>0x00000118</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000001C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VREFSEL: Reference voltage select -->
            <field>
              <name>VREFSEL</name>
              <description>Reference voltage select</description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1dot13_V</name>
                  <description>1.13V</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot14_V</name>
                  <description>1.14V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot15_V</name>
                  <description>1.15V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot16_V</name>
                  <description>1.16V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot17_V</name>
                  <description>1.17V</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot18_V</name>
                  <description>1.18V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot19_V</name>
                  <description>1.19V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot20_V</name>
                  <description>1.20V</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot21_V</name>
                  <description>1.21V</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot22_V</name>
                  <description>1.22V</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot23_V</name>
                  <description>1.23V</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot24_V</name>
                  <description>1.24V</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot25_V</name>
                  <description>1.25V</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot26_V</name>
                  <description>1.26V</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot27_V</name>
                  <description>1.27V</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot28_V</name>
                  <description>1.28V</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN: Charge-pump regulator enable -->
            <field>
              <name>EN</name>
              <description>Charge-pump regulator enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- RCO0CTL: RCO0 Control Register -->
        <register>
          <name>RCO0CTL</name>
          <displayName>RCO0CTL</displayName>
          <description>RCO0 Control Register</description>
          <addressOffset>0x0000011C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00009B3D</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- FREQTRIM: RCO0 frequency trimming Frequency increases for larger code  -->
            <field>
              <name>FREQTRIM</name>
              <description>RCO0 frequency trimming\nFrequency increases for larger code </description>
              <bitRange>[15:7]</bitRange>
              <access>read-write</access>
            </field>

            <!-- TEMPTRIM: RCO0 frequency temperature trimming Frequency increases with temperature faster for larger trim code -->
            <field>
              <name>TEMPTRIM</name>
              <description>RCO0 frequency temperature trimming\nFrequency increases with temperature faster for larger trim code</description>
              <bitRange>[6:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- CPREGBYP: Bypass internal 1.2V regulator -->
            <field>
              <name>CPREGBYP</name>
              <description>Bypass internal 1.2V regulator</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Connect 1.2V RCO1 gates to internal 1.2V regulator</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Connect 1.2V RCO1 gates to digital 1.2V power rail</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- MODE: RCO0 mode -->
            <field>
              <name>MODE</name>
              <description>RCO0 mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>24MHZ</name>
                  <description>24MHz</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>48MHZ</name>
                  <description>48MHz</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN: RCO0 enable -->
            <field>
              <name>EN</name>
              <description>RCO0 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- RCO1CTL: RCO1 Control Register -->
        <register>
          <name>RCO1CTL</name>
          <displayName>RCO1CTL</displayName>
          <description>RCO1 Control Register</description>
          <addressOffset>0x00000120</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00009B3D</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- FREQTRIM: RCO1 frequency trimming Frequency increases for larger code  -->
            <field>
              <name>FREQTRIM</name>
              <description>RCO1 frequency trimming\nFrequency increases for larger code </description>
              <bitRange>[15:7]</bitRange>
              <access>read-write</access>
            </field>

            <!-- TEMPTRIM: RCO1 frequency temperature trimming Frequency increases with temperature faster for larger trim code -->
            <field>
              <name>TEMPTRIM</name>
              <description>RCO1 frequency temperature trimming\nFrequency increases with temperature faster for larger trim code</description>
              <bitRange>[6:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- CPREGBYP: Bypass internal 1.2V regulator -->
            <field>
              <name>CPREGBYP</name>
              <description>Bypass internal 1.2V regulator</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Connect 1.2V RCO1 gates to internal 1.2V regulator</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Connect 1.2V RCO1 gates to digital 1.2V power rail</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- MODE: RCO1 mode -->
            <field>
              <name>MODE</name>
              <description>RCO1 mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>24MHZ</name>
                  <description>24MHz</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>48MHZ</name>
                  <description>48MHz</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN: RCO1 enable -->
            <field>
              <name>EN</name>
              <description>RCO1 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- XOCTL: Crystal Oscillator Control Register -->
        <register>
          <name>XOCTL</name>
          <displayName>XOCTL</displayName>
          <description>Crystal Oscillator Control Register</description>
          <addressOffset>0x00000124</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00002004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- PRECNT: Pre-counted target value before XO clock is regarded as ready: Target = 1024 * PRECNT -->
            <field>
              <name>PRECNT</name>
              <description>Pre-counted target value before XO clock is regarded as ready: Target = 1024 * PRECNT</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>

            <!-- FASTEN: Enable noise injection for fast startup -->
            <field>
              <name>FASTEN</name>
              <description>Enable noise injection for fast startup</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN: Crystal oscillator clock enable -->
            <field>
              <name>EN</name>
              <description>Crystal oscillator clock enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- PLLCTL0: PLL Control Register 0 -->
        <register>
          <name>PLLCTL0</name>
          <displayName>PLLCTL0</displayName>
          <description>PLL Control Register 0</description>
          <addressOffset>0x00000138</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x17252640</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CPREGBYP: Bypass internal 1.2V regulator for PLL -->
            <field>
              <name>CPREGBYP</name>
              <description>Bypass internal 1.2V regulator for PLL</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Connect 1.2V RCO1 gates to internal 1.2V regulator</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Connect 1.2V RCO1 gates to digital 1.2V power rail</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NIN: PLL input clock dividing ratio (Fin/Fpfd) -->
            <field>
              <name>NIN</name>
              <description>PLL input clock dividing ratio (Fin/Fpfd)</description>
              <bitRange>[27:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1</name>
                  <description>Set to 1 if Fin(MHz) is in [4, 8]:   Fin/Fpfd=1</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Set to 2 if Fin(MHz) is in (8, 16]:   Fin/Fpfd=2</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3</name>
                  <description>Set to 3 if Fin(MHz) is in (16, 24]:   Fin/Fpfd=3</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Set to 4 if Fin(MHz) is in (24, 32]:   Fin/Fpfd=4</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>5</name>
                  <description>Set to 5 if Fin(MHz) is in (32, 40]:   Fin/Fpfd=5</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>6</name>
                  <description>Set to 6 if Fin(MHz) is in (40, 48]:   Fin/Fpfd=6</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>7</name>
                  <description>Set to 1 if Fin(MHz) is in (48, 56]:   Fin/Fpfd=7</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- LOOPCLOSE: PLL mode -->
            <field>
              <name>LOOPCLOSE</name>
              <description>PLL mode</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OPEN_LOOP</name>
                  <description>Open loop</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLOSE_LOOP</name>
                  <description>Close loop</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ICP: PLL charge pump setting Must be set to NFB/(12-FREQTRIM), where NFB is the PLL feedback factor -->
            <field>
              <name>ICP</name>
              <description>PLL charge pump setting\nMust be set to NFB/(12-FREQTRIM), where NFB is the PLL feedback factor</description>
              <bitRange>[17:13]</bitRange>
              <access>read-write</access>
            </field>

            <!-- RCLKSEL: PLL reference clock select -->
            <field>
              <name>RCLKSEL</name>
              <description>PLL reference clock select</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RCO0</name>
                  <description>CLK_RCO0 (RC oscillator 0)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>XO</name>
                  <description>CLK_XO (Crystal oscillator)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FREQTRIM: PLL frequency trimming VCO free-run frequency increases with larger code -->
            <field>
              <name>FREQTRIM</name>
              <description>PLL frequency trimming\nVCO free-run frequency increases with larger code</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
            </field>

            <!-- FCALWIN: PLL frequency calibration time window For each calibration cycle, keep it as 1 until FCALRDY=1 and release it as 0 -->
            <field>
              <name>FCALWIN</name>
              <description>PLL frequency calibration time window\nFor each calibration cycle, keep it as 1 until FCALRDY=1 and release it as 0</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Window is disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Window is enabled</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FCALEN: PLL frequency calibration enable -->
            <field>
              <name>FCALEN</name>
              <description>PLL frequency calibration enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DSMLSB: LSB dithering method for delta-sigma divider -->
            <field>
              <name>DSMLSB</name>
              <description>LSB dithering method for delta-sigma divider</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>KEEP_1</name>
                  <description>Keep as 1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USE_RANDOM_BINARY</name>
                  <description>Use 7-th order pseudo-random binary sequence</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CSDRST: Reset PLL cycle slip detection output -->
            <field>
              <name>CSDRST</name>
              <description>Reset PLL cycle slip detection output</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the reset</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RESET</name>
                  <description>Reset</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CSDEN: PLL cycle slip detection enable -->
            <field>
              <name>CSDEN</name>
              <description>PLL cycle slip detection enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PWMCLKEN: PLL PWM clock output enable -->
            <field>
              <name>PWMCLKEN</name>
              <description>PLL PWM clock output enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DCLKEN: PLL digital clock output enable -->
            <field>
              <name>DCLKEN</name>
              <description>PLL digital clock output enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ACLKEN: PLL analog clock output enable -->
            <field>
              <name>ACLKEN</name>
              <description>PLL analog clock output enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN: PLL enable -->
            <field>
              <name>EN</name>
              <description>PLL enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- PLLCTL1: PLL Control Register 1 -->
        <register>
          <name>PLLCTL1</name>
          <displayName>PLLCTL1</displayName>
          <description>PLL Control Register 1</description>
          <addressOffset>0x0000013C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x7F4B0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- ND2A: Digital clock to analog clock dividing ratio (FDIG/FANA) -->
            <field>
              <name>ND2A</name>
              <description>Digital clock to analog clock dividing ratio (FDIG/FANA)</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>4</name>
                  <description>Divide by 4</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>8</name>
                  <description>Divide by 8</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>16</name>
                  <description>Divide by 16</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>32</name>
                  <description>Divide by 32</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>64</name>
                  <description>Divide by 64</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>128</name>
                  <description>Divide by 128</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>256</name>
                  <description>Divide by 256</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>512</name>
                  <description>Divide by 512</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPWM: VCO to PWM clock dividing ratio (FVCO/FPWM) -->
            <field>
              <name>NPWM</name>
              <description>VCO to PWM clock dividing ratio (FVCO/FPWM)</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1</name>
                  <description>Divide by 1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Divide by 2</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3</name>
                  <description>Divide by 3</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Divide by 4</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NDIG: VCO to digital clock dividing ratio (FVCO/FDIG) -->
            <field>
              <name>NDIG</name>
              <description>VCO to digital clock dividing ratio (FVCO/FDIG)</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1</name>
                  <description>Divide by 1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Divide by 2</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3</name>
                  <description>Divide by 3</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>Divide by 4</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NFBINTG: Integral part of feedback dividing ratio NFB (Feedback dividing ratio) = NFBINTG + NFBFRAC/65536 -->
            <field>
              <name>NFBINTG</name>
              <description>Integral part of feedback dividing ratio\nNFB (Feedback dividing ratio) = NFBINTG + NFBFRAC/65536</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>

            <!-- NFBFRAC: Fractional part of feedback dividing ratio NFB (Feedback dividing ratio) = NFBINTG + NFBFRAC/65536 -->
            <field>
              <name>NFBFRAC</name>
              <description>Fractional part of feedback dividing ratio\nNFB (Feedback dividing ratio) = NFBINTG + NFBFRAC/65536</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- WDT0CLKCTL: WDT0 Clock Control Register -->
        <register>
          <name>WDT0CLKCTL</name>
          <displayName>WDT0CLKCTL</displayName>
          <description>WDT0 Clock Control Register</description>
          <addressOffset>0x00000164</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DBGRUN: WDT0 clock keeps running when CPU is halted Recommend setting this bit to 0 only when in debug and setting this bit to 1 in normal operation.  Note: Debug operation and CPU fault exceptions both can cause CPU halted. -->
            <field>
              <name>DBGRUN</name>
              <description>WDT0 clock keeps running when CPU is halted\nRecommend setting this bit to 0 only when in debug and setting this bit to 1 in normal operation.\n\nNote: Debug operation and CPU fault exceptions both can cause CPU halted.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>WDT0 clock does not run when CPU is halted</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>WDT0 clock runs even when CPU is halted</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- WDT1CLKCTL: WDT1 Clock Control Register -->
        <register>
          <name>WDT1CLKCTL</name>
          <displayName>WDT1CLKCTL</displayName>
          <description>WDT1 Clock Control Register</description>
          <addressOffset>0x00000168</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EN: Clock output enable -->
            <field>
              <name>EN</name>
              <description>Clock output enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable clock output</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable clock output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DBGRUN: WDT1 clock keeps running when CPU is halted Recommend setting this bit to 0 only when in debug and setting this bit to 1 in normal operation.  Note: Debug operation and CPU fault exceptions both can cause CPU halted. -->
            <field>
              <name>DBGRUN</name>
              <description>WDT1 clock keeps running when CPU is halted\nRecommend setting this bit to 0 only when in debug and setting this bit to 1 in normal operation.\n\nNote: Debug operation and CPU fault exceptions both can cause CPU halted.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>WDT1 clock does not run when CPU is halted</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>WDT1 clock runs even when CPU is halted</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DIV: Clock dividing ratio -->
            <field>
              <name>DIV</name>
              <description>Clock dividing ratio</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>GLOBAL</name>
      <description>NONE</description>
      <groupName>GLOBAL</groupName>
      <baseAddress>0x4000B000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x174</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>

        <!-- MEMPCE: Memory Parity Check Enable Register -->
        <register>
          <name>MEMPCE</name>
          <displayName>MEMPCE</displayName>
          <description>Memory Parity Check Enable Register</description>
          <addressOffset>0x000000BC</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- GLBPCE: Global parity check enable -->
            <field>
              <name>GLBPCE</name>
              <description>Global parity check enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable parity check for all memories</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Prerequisite to enable parity check for all memories</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RAM16KPCE: 16K RAM parity check enable -->
            <field>
              <name>RAM16KPCE</name>
              <description>16K RAM parity check enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable parity check for 16K RAM</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable parity check for 16K RAM when GLBPCE=1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- RAM32KPCE: 32K RAM parity check enable -->
            <field>
              <name>RAM32KPCE</name>
              <description>32K RAM parity check enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable parity check for 32K RAM</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable parity check for 32K RAM when GLBPCE=1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ROMPCE: ROM parity check enable -->
            <field>
              <name>ROMPCE</name>
              <description>ROM parity check enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable parity check for ROM</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable parity check for ROM when GLBPCE=1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIOIE[2]: GPIO Interrupt Enable Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GPIOIE[%s]</name>
          <displayName>GPIOIE[%s]</displayName>
          <description>GPIO Interrupt Enable Register 0</description>
          <addressOffset>0x000000C4</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- GPIO17: GPIO17 interrupt enable -->
            <field>
              <name>GPIO17</name>
              <description>GPIO17 interrupt enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO16: GPIO16 interrupt enable -->
            <field>
              <name>GPIO16</name>
              <description>GPIO16 interrupt enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO15: GPIO15 interrupt enable -->
            <field>
              <name>GPIO15</name>
              <description>GPIO15 interrupt enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO14: GPIO14 interrupt enable -->
            <field>
              <name>GPIO14</name>
              <description>GPIO14 interrupt enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO13: GPIO13 interrupt enable -->
            <field>
              <name>GPIO13</name>
              <description>GPIO13 interrupt enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO12: GPIO12 interrupt enable -->
            <field>
              <name>GPIO12</name>
              <description>GPIO12 interrupt enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO11: GPIO11 interrupt enable -->
            <field>
              <name>GPIO11</name>
              <description>GPIO11 interrupt enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO10: GPIO10 interrupt enable -->
            <field>
              <name>GPIO10</name>
              <description>GPIO10 interrupt enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO9: GPIO9 interrupt enable -->
            <field>
              <name>GPIO9</name>
              <description>GPIO9 interrupt enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO8: GPIO8 interrupt enable -->
            <field>
              <name>GPIO8</name>
              <description>GPIO8 interrupt enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO7: GPIO7 interrupt enable -->
            <field>
              <name>GPIO7</name>
              <description>GPIO7 interrupt enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO6: GPIO6 interrupt enable -->
            <field>
              <name>GPIO6</name>
              <description>GPIO6 interrupt enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO5: GPIO5 interrupt enable -->
            <field>
              <name>GPIO5</name>
              <description>GPIO5 interrupt enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO4: GPIO4 interrupt enable -->
            <field>
              <name>GPIO4</name>
              <description>GPIO4 interrupt enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO3: GPIO3 interrupt enable -->
            <field>
              <name>GPIO3</name>
              <description>GPIO3 interrupt enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO2: GPIO2 interrupt enable -->
            <field>
              <name>GPIO2</name>
              <description>GPIO2 interrupt enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO1: GPIO1 interrupt enable -->
            <field>
              <name>GPIO1</name>
              <description>GPIO1 interrupt enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO0: GPIO0 interrupt enable -->
            <field>
              <name>GPIO0</name>
              <description>GPIO0 interrupt enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIOIC[2]: GPIO Interrupt Clear Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GPIOIC[%s]</name>
          <displayName>GPIOIC[%s]</displayName>
          <description>GPIO Interrupt Clear Register 0</description>
          <addressOffset>0x000000CC</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- GPIO17: GPIO17 interrupt clear -->
            <field>
              <name>GPIO17</name>
              <description>GPIO17 interrupt clear</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO16: GPIO16 interrupt clear -->
            <field>
              <name>GPIO16</name>
              <description>GPIO16 interrupt clear</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO15: GPIO15 interrupt clear -->
            <field>
              <name>GPIO15</name>
              <description>GPIO15 interrupt clear</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO14: GPIO14 interrupt clear -->
            <field>
              <name>GPIO14</name>
              <description>GPIO14 interrupt clear</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO13: GPIO13 interrupt clear -->
            <field>
              <name>GPIO13</name>
              <description>GPIO13 interrupt clear</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO12: GPIO12 interrupt clear -->
            <field>
              <name>GPIO12</name>
              <description>GPIO12 interrupt clear</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO11: GPIO11 interrupt clear -->
            <field>
              <name>GPIO11</name>
              <description>GPIO11 interrupt clear</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO10: GPIO10 interrupt clear -->
            <field>
              <name>GPIO10</name>
              <description>GPIO10 interrupt clear</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO9: GPIO9 interrupt clear -->
            <field>
              <name>GPIO9</name>
              <description>GPIO9 interrupt clear</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO8: GPIO8 interrupt clear -->
            <field>
              <name>GPIO8</name>
              <description>GPIO8 interrupt clear</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO7: GPIO7 interrupt clear -->
            <field>
              <name>GPIO7</name>
              <description>GPIO7 interrupt clear</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO6: GPIO6 interrupt clear -->
            <field>
              <name>GPIO6</name>
              <description>GPIO6 interrupt clear</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO5: GPIO5 interrupt clear -->
            <field>
              <name>GPIO5</name>
              <description>GPIO5 interrupt clear</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO4: GPIO4 interrupt clear -->
            <field>
              <name>GPIO4</name>
              <description>GPIO4 interrupt clear</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO3: GPIO3 interrupt clear -->
            <field>
              <name>GPIO3</name>
              <description>GPIO3 interrupt clear</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO2: GPIO2 interrupt clear -->
            <field>
              <name>GPIO2</name>
              <description>GPIO2 interrupt clear</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO1: GPIO1 interrupt clear -->
            <field>
              <name>GPIO1</name>
              <description>GPIO1 interrupt clear</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO0: GPIO0 interrupt clear -->
            <field>
              <name>GPIO0</name>
              <description>GPIO0 interrupt clear</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the clear</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Clear the interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIOIFRC[2]: GPIO Interrupt Force Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GPIOIFRC[%s]</name>
          <displayName>GPIOIFRC[%s]</displayName>
          <description>GPIO Interrupt Force Register 0</description>
          <addressOffset>0x000000D4</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- GPIO17: GPIO17 interrupt force -->
            <field>
              <name>GPIO17</name>
              <description>GPIO17 interrupt force</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO16: GPIO16 interrupt force -->
            <field>
              <name>GPIO16</name>
              <description>GPIO16 interrupt force</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO15: GPIO15 interrupt force -->
            <field>
              <name>GPIO15</name>
              <description>GPIO15 interrupt force</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO14: GPIO14 interrupt force -->
            <field>
              <name>GPIO14</name>
              <description>GPIO14 interrupt force</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO13: GPIO13 interrupt force -->
            <field>
              <name>GPIO13</name>
              <description>GPIO13 interrupt force</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO12: GPIO12 interrupt force -->
            <field>
              <name>GPIO12</name>
              <description>GPIO12 interrupt force</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO11: GPIO11 interrupt force -->
            <field>
              <name>GPIO11</name>
              <description>GPIO11 interrupt force</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO10: GPIO10 interrupt force -->
            <field>
              <name>GPIO10</name>
              <description>GPIO10 interrupt force</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO9: GPIO9 interrupt force -->
            <field>
              <name>GPIO9</name>
              <description>GPIO9 interrupt force</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO8: GPIO8 interrupt force -->
            <field>
              <name>GPIO8</name>
              <description>GPIO8 interrupt force</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO7: GPIO7 interrupt force -->
            <field>
              <name>GPIO7</name>
              <description>GPIO7 interrupt force</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO6: GPIO6 interrupt force -->
            <field>
              <name>GPIO6</name>
              <description>GPIO6 interrupt force</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO5: GPIO5 interrupt force -->
            <field>
              <name>GPIO5</name>
              <description>GPIO5 interrupt force</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO4: GPIO4 interrupt force -->
            <field>
              <name>GPIO4</name>
              <description>GPIO4 interrupt force</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO3: GPIO3 interrupt force -->
            <field>
              <name>GPIO3</name>
              <description>GPIO3 interrupt force</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO2: GPIO2 interrupt force -->
            <field>
              <name>GPIO2</name>
              <description>GPIO2 interrupt force</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO1: GPIO1 interrupt force -->
            <field>
              <name>GPIO1</name>
              <description>GPIO1 interrupt force</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO0: GPIO0 interrupt force -->
            <field>
              <name>GPIO0</name>
              <description>GPIO0 interrupt force</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RELEASE</name>
                  <description>Release the force</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Force an interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIOINTINV[2]: GPIO Interrupt Polarity Inversion Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>2</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>GPIOINTINV[%s]</name>
          <displayName>GPIOINTINV[%s]</displayName>
          <description>GPIO Interrupt Polarity Inversion Register 0</description>
          <addressOffset>0x000000DC</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- GPIO17: GPIO17 interrupt polarity inversion -->
            <field>
              <name>GPIO17</name>
              <description>GPIO17 interrupt polarity inversion</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO16: GPIO16 interrupt polarity inversion -->
            <field>
              <name>GPIO16</name>
              <description>GPIO16 interrupt polarity inversion</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO15: GPIO15 interrupt polarity inversion -->
            <field>
              <name>GPIO15</name>
              <description>GPIO15 interrupt polarity inversion</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO14: GPIO14 interrupt polarity inversion -->
            <field>
              <name>GPIO14</name>
              <description>GPIO14 interrupt polarity inversion</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO13: GPIO13 interrupt polarity inversion -->
            <field>
              <name>GPIO13</name>
              <description>GPIO13 interrupt polarity inversion</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO12: GPIO12 interrupt polarity inversion -->
            <field>
              <name>GPIO12</name>
              <description>GPIO12 interrupt polarity inversion</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO11: GPIO11 interrupt polarity inversion -->
            <field>
              <name>GPIO11</name>
              <description>GPIO11 interrupt polarity inversion</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO10: GPIO10 interrupt polarity inversion -->
            <field>
              <name>GPIO10</name>
              <description>GPIO10 interrupt polarity inversion</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO9: GPIO9 interrupt polarity inversion -->
            <field>
              <name>GPIO9</name>
              <description>GPIO9 interrupt polarity inversion</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO8: GPIO8 interrupt polarity inversion -->
            <field>
              <name>GPIO8</name>
              <description>GPIO8 interrupt polarity inversion</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO7: GPIO7 interrupt polarity inversion -->
            <field>
              <name>GPIO7</name>
              <description>GPIO7 interrupt polarity inversion</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO6: GPIO6 interrupt polarity inversion -->
            <field>
              <name>GPIO6</name>
              <description>GPIO6 interrupt polarity inversion</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO5: GPIO5 interrupt polarity inversion -->
            <field>
              <name>GPIO5</name>
              <description>GPIO5 interrupt polarity inversion</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO4: GPIO4 interrupt polarity inversion -->
            <field>
              <name>GPIO4</name>
              <description>GPIO4 interrupt polarity inversion</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO3: GPIO3 interrupt polarity inversion -->
            <field>
              <name>GPIO3</name>
              <description>GPIO3 interrupt polarity inversion</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO2: GPIO2 interrupt polarity inversion -->
            <field>
              <name>GPIO2</name>
              <description>GPIO2 interrupt polarity inversion</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO1: GPIO1 interrupt polarity inversion -->
            <field>
              <name>GPIO1</name>
              <description>GPIO1 interrupt polarity inversion</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- GPIO0: GPIO0 interrupt polarity inversion -->
            <field>
              <name>GPIO0</name>
              <description>GPIO0 interrupt polarity inversion</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HIGH_ACTIVE</name>
                  <description>Resume polarity (interrupt when high)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOW_ACTIVE</name>
                  <description>Invert polarity (interrupt when low)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIOMISC: GPIO Miscellaneous Control Register -->
        <register>
          <name>GPIOMISC</name>
          <displayName>GPIOMISC</displayName>
          <description>GPIO Miscellaneous Control Register</description>
          <addressOffset>0x00000108</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- EXTSOCSEL: EXTSOC event source select -->
            <field>
              <name>EXTSOCSEL</name>
              <description>EXTSOC event source select</description>
              <bitRange>[28:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EVENT</name>
                  <description>0 (No EXTSOC event)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO0</name>
                  <description>GPIO0</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO1</name>
                  <description>GPIO1</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO2</name>
                  <description>GPIO2</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO3</name>
                  <description>GPIO3</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO4</name>
                  <description>GPIO4</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO5</name>
                  <description>GPIO5</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO6</name>
                  <description>GPIO6</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO7</name>
                  <description>GPIO7</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO8</name>
                  <description>GPIO8</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO9</name>
                  <description>GPIO9</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO10</name>
                  <description>GPIO10</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO11</name>
                  <description>GPIO11</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO12</name>
                  <description>GPIO12</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO13</name>
                  <description>GPIO13</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO14</name>
                  <description>GPIO14</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO15</name>
                  <description>GPIO15</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO16</name>
                  <description>GPIO16</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO17</name>
                  <description>GPIO17</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO18</name>
                  <description>GPIO18</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO19</name>
                  <description>GPIO19</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO20</name>
                  <description>GPIO20</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO21</name>
                  <description>GPIO21</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO22</name>
                  <description>GPIO22</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO23</name>
                  <description>GPIO23</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO24</name>
                  <description>GPIO24</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO25</name>
                  <description>GPIO25</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO26</name>
                  <description>GPIO26</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO27</name>
                  <description>GPIO27</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO28</name>
                  <description>GPIO28</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO29</name>
                  <description>GPIO29</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO30</name>
                  <description>GPIO30</description>
                  <value>0x1F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO31</name>
                  <description>GPIO31</description>
                  <value>0x20</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO32</name>
                  <description>GPIO32</description>
                  <value>0x21</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO33</name>
                  <description>GPIO33</description>
                  <value>0x22</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO34</name>
                  <description>GPIO34</description>
                  <value>0x23</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO35</name>
                  <description>GPIO35</description>
                  <value>0x24</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ECAPSEL: ECAP event source select -->
            <field>
              <name>ECAPSEL</name>
              <description>ECAP event source select</description>
              <bitRange>[21:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EVENT</name>
                  <description>0 (No ECAP event)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO0</name>
                  <description>GPIO0</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO1</name>
                  <description>GPIO1</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO2</name>
                  <description>GPIO2</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO3</name>
                  <description>GPIO3</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO4</name>
                  <description>GPIO4</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO5</name>
                  <description>GPIO5</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO6</name>
                  <description>GPIO6</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO7</name>
                  <description>GPIO7</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO8</name>
                  <description>GPIO8</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO9</name>
                  <description>GPIO9</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO10</name>
                  <description>GPIO10</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO11</name>
                  <description>GPIO11</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO12</name>
                  <description>GPIO12</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO13</name>
                  <description>GPIO13</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO14</name>
                  <description>GPIO14</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO15</name>
                  <description>GPIO15</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO16</name>
                  <description>GPIO16</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO17</name>
                  <description>GPIO17</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO18</name>
                  <description>GPIO18</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO19</name>
                  <description>GPIO19</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO20</name>
                  <description>GPIO20</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO21</name>
                  <description>GPIO21</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO22</name>
                  <description>GPIO22</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO23</name>
                  <description>GPIO23</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO24</name>
                  <description>GPIO24</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO25</name>
                  <description>GPIO25</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO26</name>
                  <description>GPIO26</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO27</name>
                  <description>GPIO27</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO28</name>
                  <description>GPIO28</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO29</name>
                  <description>GPIO29</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO30</name>
                  <description>GPIO30</description>
                  <value>0x1F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO31</name>
                  <description>GPIO31</description>
                  <value>0x20</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO32</name>
                  <description>GPIO32</description>
                  <value>0x21</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO33</name>
                  <description>GPIO33</description>
                  <value>0x22</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO34</name>
                  <description>GPIO34</description>
                  <value>0x23</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO35</name>
                  <description>GPIO35</description>
                  <value>0x24</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TZ5SEL: TZ5 event source select -->
            <field>
              <name>TZ5SEL</name>
              <description>TZ5 event source select</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EVENT</name>
                  <description>0 (No TZ5 event)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO4</name>
                  <description>GPIO4</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO9</name>
                  <description>GPIO9</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO14</name>
                  <description>GPIO14</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO19</name>
                  <description>GPIO19</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO24</name>
                  <description>GPIO24</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO29</name>
                  <description>GPIO29</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO34</name>
                  <description>GPIO34</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TZ4SEL: TZ4 event source select -->
            <field>
              <name>TZ4SEL</name>
              <description>TZ4 event source select</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EVENT</name>
                  <description>0 (No TZ4 event)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO3</name>
                  <description>GPIO3</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO8</name>
                  <description>GPIO8</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO13</name>
                  <description>GPIO13</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO18</name>
                  <description>GPIO18</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO23</name>
                  <description>GPIO23</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO28</name>
                  <description>GPIO28</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO33</name>
                  <description>GPIO33</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TZ3SEL: TZ3 event source select -->
            <field>
              <name>TZ3SEL</name>
              <description>TZ3 event source select</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EVENT</name>
                  <description>0 (No TZ3 event)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO2</name>
                  <description>GPIO2</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO7</name>
                  <description>GPIO7</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO12</name>
                  <description>GPIO12</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO17</name>
                  <description>GPIO17</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO22</name>
                  <description>GPIO22</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO27</name>
                  <description>GPIO27</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO32</name>
                  <description>GPIO32</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TZ2SEL: TZ2 event source select -->
            <field>
              <name>TZ2SEL</name>
              <description>TZ2 event source select</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EVENT</name>
                  <description>0 (No TZ2 event)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO1</name>
                  <description>GPIO1</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO6</name>
                  <description>GPIO6</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO11</name>
                  <description>GPIO11</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO16</name>
                  <description>GPIO16</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO21</name>
                  <description>GPIO21</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO26</name>
                  <description>GPIO26</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO31</name>
                  <description>GPIO31</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TZ1SEL: TZ1 event source select -->
            <field>
              <name>TZ1SEL</name>
              <description>TZ1 event source select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EVENT</name>
                  <description>0 (No TZ1 event)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO0</name>
                  <description>GPIO0</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO5</name>
                  <description>GPIO5</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO10</name>
                  <description>GPIO10</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO15</name>
                  <description>GPIO15</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO20</name>
                  <description>GPIO20</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO25</name>
                  <description>GPIO25</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO30</name>
                  <description>GPIO30</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- TMREXTSEL: Timer External Event Select Register -->
        <register>
          <name>TMREXTSEL</name>
          <displayName>TMREXTSEL</displayName>
          <description>Timer External Event Select Register</description>
          <addressOffset>0x0000010C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- TMR2: TIMER2 event source select -->
            <field>
              <name>TMR2</name>
              <description>TIMER2 event source select</description>
              <bitRange>[20:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EVENT</name>
                  <description>0 (No TIMER2 event)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO0</name>
                  <description>GPIO0</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO1</name>
                  <description>GPIO1</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO2</name>
                  <description>GPIO2</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO3</name>
                  <description>GPIO3</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO4</name>
                  <description>GPIO4</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO5</name>
                  <description>GPIO5</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO6</name>
                  <description>GPIO6</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO7</name>
                  <description>GPIO7</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO8</name>
                  <description>GPIO8</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO9</name>
                  <description>GPIO9</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO10</name>
                  <description>GPIO10</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO11</name>
                  <description>GPIO11</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO12</name>
                  <description>GPIO12</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO13</name>
                  <description>GPIO13</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO14</name>
                  <description>GPIO14</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO15</name>
                  <description>GPIO15</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO16</name>
                  <description>GPIO16</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO17</name>
                  <description>GPIO17</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO18</name>
                  <description>GPIO18</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO19</name>
                  <description>GPIO19</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO20</name>
                  <description>GPIO20</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO21</name>
                  <description>GPIO21</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO22</name>
                  <description>GPIO22</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO23</name>
                  <description>GPIO23</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO24</name>
                  <description>GPIO24</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO25</name>
                  <description>GPIO25</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO26</name>
                  <description>GPIO26</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO27</name>
                  <description>GPIO27</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO28</name>
                  <description>GPIO28</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO29</name>
                  <description>GPIO29</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO30</name>
                  <description>GPIO30</description>
                  <value>0x1F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO31</name>
                  <description>GPIO31</description>
                  <value>0x20</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO32</name>
                  <description>GPIO32</description>
                  <value>0x21</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO33</name>
                  <description>GPIO33</description>
                  <value>0x22</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO34</name>
                  <description>GPIO34</description>
                  <value>0x23</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO35</name>
                  <description>GPIO35</description>
                  <value>0x24</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TMR1: TIMER1 event source select -->
            <field>
              <name>TMR1</name>
              <description>TIMER1 event source select</description>
              <bitRange>[13:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EVENT</name>
                  <description>0 (No TIMER1 event)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO0</name>
                  <description>GPIO0</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO1</name>
                  <description>GPIO1</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO2</name>
                  <description>GPIO2</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO3</name>
                  <description>GPIO3</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO4</name>
                  <description>GPIO4</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO5</name>
                  <description>GPIO5</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO6</name>
                  <description>GPIO6</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO7</name>
                  <description>GPIO7</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO8</name>
                  <description>GPIO8</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO9</name>
                  <description>GPIO9</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO10</name>
                  <description>GPIO10</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO11</name>
                  <description>GPIO11</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO12</name>
                  <description>GPIO12</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO13</name>
                  <description>GPIO13</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO14</name>
                  <description>GPIO14</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO15</name>
                  <description>GPIO15</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO16</name>
                  <description>GPIO16</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO17</name>
                  <description>GPIO17</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO18</name>
                  <description>GPIO18</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO19</name>
                  <description>GPIO19</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO20</name>
                  <description>GPIO20</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO21</name>
                  <description>GPIO21</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO22</name>
                  <description>GPIO22</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO23</name>
                  <description>GPIO23</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO24</name>
                  <description>GPIO24</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO25</name>
                  <description>GPIO25</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO26</name>
                  <description>GPIO26</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO27</name>
                  <description>GPIO27</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO28</name>
                  <description>GPIO28</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO29</name>
                  <description>GPIO29</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO30</name>
                  <description>GPIO30</description>
                  <value>0x1F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO31</name>
                  <description>GPIO31</description>
                  <value>0x20</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO32</name>
                  <description>GPIO32</description>
                  <value>0x21</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO33</name>
                  <description>GPIO33</description>
                  <value>0x22</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO34</name>
                  <description>GPIO34</description>
                  <value>0x23</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO35</name>
                  <description>GPIO35</description>
                  <value>0x24</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TMR0: TIMER0 event source select -->
            <field>
              <name>TMR0</name>
              <description>TIMER0 event source select</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EVENT</name>
                  <description>0 (No TIMER0 event)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO0</name>
                  <description>GPIO0</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO1</name>
                  <description>GPIO1</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO2</name>
                  <description>GPIO2</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO3</name>
                  <description>GPIO3</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO4</name>
                  <description>GPIO4</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO5</name>
                  <description>GPIO5</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO6</name>
                  <description>GPIO6</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO7</name>
                  <description>GPIO7</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO8</name>
                  <description>GPIO8</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO9</name>
                  <description>GPIO9</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO10</name>
                  <description>GPIO10</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO11</name>
                  <description>GPIO11</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO12</name>
                  <description>GPIO12</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO13</name>
                  <description>GPIO13</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO14</name>
                  <description>GPIO14</description>
                  <value>0xF</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO15</name>
                  <description>GPIO15</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO16</name>
                  <description>GPIO16</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO17</name>
                  <description>GPIO17</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO18</name>
                  <description>GPIO18</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO19</name>
                  <description>GPIO19</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO20</name>
                  <description>GPIO20</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO21</name>
                  <description>GPIO21</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO22</name>
                  <description>GPIO22</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO23</name>
                  <description>GPIO23</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO24</name>
                  <description>GPIO24</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO25</name>
                  <description>GPIO25</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO26</name>
                  <description>GPIO26</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO27</name>
                  <description>GPIO27</description>
                  <value>0x1C</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO28</name>
                  <description>GPIO28</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO29</name>
                  <description>GPIO29</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO30</name>
                  <description>GPIO30</description>
                  <value>0x1F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO31</name>
                  <description>GPIO31</description>
                  <value>0x20</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO32</name>
                  <description>GPIO32</description>
                  <value>0x21</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO33</name>
                  <description>GPIO33</description>
                  <value>0x22</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO34</name>
                  <description>GPIO34</description>
                  <value>0x23</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO35</name>
                  <description>GPIO35</description>
                  <value>0x24</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- PWMFRCSYNC: Global PWM Force Synchronization Register -->
        <register>
          <name>PWMFRCSYNC</name>
          <displayName>PWMFRCSYNC</displayName>
          <description>Global PWM Force Synchronization Register</description>
          <addressOffset>0x0000016C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- PWM6SYNC: Software forced synchronization on PWM6 -->
            <field>
              <name>PWM6SYNC</name>
              <description>Software forced synchronization on PWM6</description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect.\nAlways readback 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Write a 1 will force a SYNC event on PWM6.\nThis bit is self-cleared</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PWM5SYNC: Software forced synchronization on PWM5 -->
            <field>
              <name>PWM5SYNC</name>
              <description>Software forced synchronization on PWM5</description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect.\nAlways readback 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Write a 1 will force a SYNC event on PWM5.\nThis bit is self-cleared</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PWM4SYNC: Software forced synchronization on PWM4 -->
            <field>
              <name>PWM4SYNC</name>
              <description>Software forced synchronization on PWM4</description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect.\nAlways readback 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Write a 1 will force a SYNC event on PWM4.\nThis bit is self-cleared</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PWM3SYNC: Software forced synchronization on PWM3 -->
            <field>
              <name>PWM3SYNC</name>
              <description>Software forced synchronization on PWM3</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect.\nAlways readback 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Write a 1 will force a SYNC event on PWM3.\nThis bit is self-cleared</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PWM2SYNC: Software forced synchronization on PWM2 -->
            <field>
              <name>PWM2SYNC</name>
              <description>Software forced synchronization on PWM2</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect.\nAlways readback 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Write a 1 will force a SYNC event on PWM2.\nThis bit is self-cleared</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PWM1SYNC: Software forced synchronization on PWM1 -->
            <field>
              <name>PWM1SYNC</name>
              <description>Software forced synchronization on PWM1</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect.\nAlways readback 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Write a 1 will force a SYNC event on PWM1.\nThis bit is self-cleared</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- PWM0SYNC: Software forced synchronization on PWM0 -->
            <field>
              <name>PWM0SYNC</name>
              <description>Software forced synchronization on PWM0</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect.\nAlways readback 0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Write a 1 will force a SYNC event on PWM0.\nThis bit is self-cleared</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>POWER</name>
      <description>Split from GLOBAL</description>
      <groupName>POWER</groupName>
      <baseAddress>0x4000B000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x174</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>

        <!-- BGCTL: Bandgap Control Register -->
        <register>
          <name>BGCTL</name>
          <displayName>BGCTL</displayName>
          <description>Bandgap Control Register</description>
          <addressOffset>0x00000148</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000001EE</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- ADCBGTEMPTRIM: ADCBG temperature coefficient trimming Optimize this code to minimize temperature dependency -->
            <field>
              <name>ADCBGTEMPTRIM</name>
              <description>ADCBG temperature coefficient trimming\nOptimize this code to minimize temperature dependency</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>

            <!-- ADCBGDIS: ADCBG disable -->
            <field>
              <name>ADCBGDIS</name>
              <description>ADCBG disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENABLE_ADC_BANDGAP</name>
                  <description>Enable ADC bandgap</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE_ADC_BANDGAP</name>
                  <description>Disable ADC bandgap</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TEMPTRIM: SYSBG temperature coefficient trimming Optimize this code to minimize temperature dependency -->
            <field>
              <name>TEMPTRIM</name>
              <description>SYSBG temperature coefficient trimming\nOptimize this code to minimize temperature dependency</description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- BODVCAP12CTL: VCAP12 BOD Control Register -->
        <register>
          <name>BODVCAP12CTL</name>
          <displayName>BODVCAP12CTL</displayName>
          <description>VCAP12 BOD Control Register</description>
          <addressOffset>0x0000014C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000023EF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- LOBODRSTEN: Enable reset when VCAP12 is too low -->
            <field>
              <name>LOBODRSTEN</name>
              <description>Enable reset when VCAP12 is too low</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- HIBODRSTEN: Enable reset when VCAP12 is too high -->
            <field>
              <name>HIBODRSTEN</name>
              <description>Enable reset when VCAP12 is too high</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- LOBODL2HVTH: Select the threshold voltage for VCAP12 too low detection when VCAP12 varies from low to high. -->
            <field>
              <name>LOBODL2HVTH</name>
              <description>Select the threshold voltage for VCAP12 too low detection when VCAP12 varies from low to high.</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1dot06_V</name>
                  <description>1.06V</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot04_V</name>
                  <description>1.04V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot02_V</name>
                  <description>1.02V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot00_V</name>
                  <description>1.00V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0dot98_V</name>
                  <description>0.98V</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0dot96_V</name>
                  <description>0.96V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0dot94_V</name>
                  <description>0.94V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0dot92_V</name>
                  <description>0.92V</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- LOBODH2LVTH: Select the threshold voltage for VCAP12 too low detection when VCAP12 varies from high to low. -->
            <field>
              <name>LOBODH2LVTH</name>
              <description>Select the threshold voltage for VCAP12 too low detection when VCAP12 varies from high to low.</description>
              <bitRange>[12:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1dot06_V</name>
                  <description>1.06V</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot04_V</name>
                  <description>1.04V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot02_V</name>
                  <description>1.02V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot00_V</name>
                  <description>1.00V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0dot98_V</name>
                  <description>0.98V</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0dot96_V</name>
                  <description>0.96V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0dot94_V</name>
                  <description>0.94V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0dot92_V</name>
                  <description>0.92V</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- HIBODH2LVTH: Select the threshold voltage for VCAP12 too high detection when VCAP12 varies from high to low. -->
            <field>
              <name>HIBODH2LVTH</name>
              <description>Select the threshold voltage for VCAP12 too high detection when VCAP12 varies from high to low.</description>
              <bitRange>[9:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1dot50_V</name>
                  <description>1.50V</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot48_V</name>
                  <description>1.48V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot45_V</name>
                  <description>1.45V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot43_V</name>
                  <description>1.43V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot41_V</name>
                  <description>1.41V</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot39_V</name>
                  <description>1.39V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot37_V</name>
                  <description>1.37V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot35_V</name>
                  <description>1.35V</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- HIBODL2HVTH: Select the threshold voltage for VCAP12 too high detection when VCAP12 varies from low to high. -->
            <field>
              <name>HIBODL2HVTH</name>
              <description>Select the threshold voltage for VCAP12 too high detection when VCAP12 varies from low to high.</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1dot50_V</name>
                  <description>1.50V</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot48_V</name>
                  <description>1.48V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot45_V</name>
                  <description>1.45V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot43_V</name>
                  <description>1.43V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot41_V</name>
                  <description>1.41V</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot39_V</name>
                  <description>1.39V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot37_V</name>
                  <description>1.37V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot35_V</name>
                  <description>1.35V</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- LOBODOM: VCAP12_TOO_LOW BOD output mask -->
            <field>
              <name>LOBODOM</name>
              <description>VCAP12_TOO_LOW BOD output mask</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>VCAP12_TOO_LOW follows the BOD result</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>VCAP12_TOO_LOW is masked as 0</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- HIBODOM: VCAP12_TOO_HIGH BOD output mask -->
            <field>
              <name>HIBODOM</name>
              <description>VCAP12_TOO_HIGH BOD output mask</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>VCAP12_TOO_HIGH follows the BOD result</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>VCAP12_TOO_HIGH is masked as 0</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- LOBODEN: VCAP12_TOO_LOW BOD enable -->
            <field>
              <name>LOBODEN</name>
              <description>VCAP12_TOO_LOW BOD enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- HIBODEN: VCAP12_TOO_HIGH BOD enable -->
            <field>
              <name>HIBODEN</name>
              <description>VCAP12_TOO_HIGH BOD enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- BODVDDCTL: VDD BOD Control Register -->
        <register>
          <name>BODVDDCTL</name>
          <displayName>BODVDDCTL</displayName>
          <description>VDD BOD Control Register</description>
          <addressOffset>0x00000150</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000046CF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- LOBODRSTEN: Enable reset when VDD is too low -->
            <field>
              <name>LOBODRSTEN</name>
              <description>Enable reset when VDD is too low</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- HIBODRSTEN: Enable reset when VDD is too high -->
            <field>
              <name>HIBODRSTEN</name>
              <description>Enable reset when VDD is too high</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- LOBODL2HVTH: Select the threshold voltage for VDD too low detection when VDD varies from low to high. -->
            <field>
              <name>LOBODL2HVTH</name>
              <description>Select the threshold voltage for VDD too low detection when VDD varies from low to high.</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>3dot11_V</name>
                  <description>3.11V</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot02_V</name>
                  <description>3.02V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot93_V</name>
                  <description>2.93V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot85_V</name>
                  <description>2.85V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot78_V</name>
                  <description>2.78V</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot71_V</name>
                  <description>2.71V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot64_V</name>
                  <description>2.64V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot58_V</name>
                  <description>2.58V</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- LOBODH2LVTH: Select the threshold voltage for VDD too low detection when VDD varies from high to low. -->
            <field>
              <name>LOBODH2LVTH</name>
              <description>Select the threshold voltage for VDD too low detection when VDD varies from high to low.</description>
              <bitRange>[12:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>3dot11_V</name>
                  <description>3.11V</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot02_V</name>
                  <description>3.02V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot93_V</name>
                  <description>2.93V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot85_V</name>
                  <description>2.85V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot78_V</name>
                  <description>2.78V</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot71_V</name>
                  <description>2.71V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot64_V</name>
                  <description>2.64V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2dot58_V</name>
                  <description>2.58V</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- HIBODH2LVTH: Select the threshold voltage for VDD too high detection when VDD varies from high to low. -->
            <field>
              <name>HIBODH2LVTH</name>
              <description>Select the threshold voltage for VDD too high detection when VDD varies from high to low.</description>
              <bitRange>[9:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>4dot22_V</name>
                  <description>4.22V</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4dot06_V</name>
                  <description>4.06V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot91_V</name>
                  <description>3.91V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot77_V</name>
                  <description>3.77V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot64_V</name>
                  <description>3.64V</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot52_V</name>
                  <description>3.52V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot41_V</name>
                  <description>3.41V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot30_V</name>
                  <description>3.30V</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- HIBODL2HVTH: Select the threshold voltage for VDD too high detection when VDD varies from low to high. -->
            <field>
              <name>HIBODL2HVTH</name>
              <description>Select the threshold voltage for VDD too high detection when VDD varies from low to high.</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>4dot22_V</name>
                  <description>4.22V</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4dot06_V</name>
                  <description>4.06V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot91_V</name>
                  <description>3.91V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot77_V</name>
                  <description>3.77V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot64_V</name>
                  <description>3.64V</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot52_V</name>
                  <description>3.52V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot41_V</name>
                  <description>3.41V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3dot30_V</name>
                  <description>3.30V</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- LOBODOM: VDD_TOO_LOW BOD output mask -->
            <field>
              <name>LOBODOM</name>
              <description>VDD_TOO_LOW BOD output mask</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>VDD_TOO_LOW follows the BOD result</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>VDD_TOO_LOW is masked as 0</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- HIBODOM: VDD_TOO_HIGH BOD output mask -->
            <field>
              <name>HIBODOM</name>
              <description>VDD_TOO_HIGH BOD output mask</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>VDD_TOO_HIGH follows the BOD result</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>VDD_TOO_HIGH is masked as 0</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- LOBODEN: VDD_TOO_LOW BOD enable -->
            <field>
              <name>LOBODEN</name>
              <description>VDD_TOO_LOW BOD enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- HIBODEN: VDD_TOO_HIGH BOD enable -->
            <field>
              <name>HIBODEN</name>
              <description>VDD_TOO_HIGH BOD enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- LDOCTL: LDO Control Register -->
        <register>
          <name>LDOCTL</name>
          <displayName>LDOCTL</displayName>
          <description>LDO Control Register</description>
          <addressOffset>0x00000154</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000006FA</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- LPREFSEL: Low-power reference voltage select for LDO (Valid when VREFEN=0) -->
            <field>
              <name>LPREFSEL</name>
              <description>Low-power reference voltage select for LDO (Valid when VREFEN=0)</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1dot12_V</name>
                  <description>1.12V</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot17_V</name>
                  <description>1.17V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot22_V</name>
                  <description>1.22V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot27_V</name>
                  <description>1.27V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot31_V</name>
                  <description>1.31V</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot36_V</name>
                  <description>1.36V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot41_V</name>
                  <description>1.41V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot45_V</name>
                  <description>1.45V</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- VREFSEL: Reference voltage select for LDO (Valid when VREFEN=1) -->
            <field>
              <name>VREFSEL</name>
              <description>Reference voltage select for LDO (Valid when VREFEN=1)</description>
              <bitRange>[8:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1dot06_V</name>
                  <description>1.06V</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot08_V</name>
                  <description>1.08V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot10_V</name>
                  <description>1.10V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot12_V</name>
                  <description>1.12V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot14_V</name>
                  <description>1.14V</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot16_V</name>
                  <description>1.16V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot18_V</name>
                  <description>1.18V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot20_V</name>
                  <description>1.20V</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot22_V</name>
                  <description>1.22V</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot24_V</name>
                  <description>1.24V</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot26_V</name>
                  <description>1.26V</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot28_V</name>
                  <description>1.28V</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot30_V</name>
                  <description>1.30V</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot32_V</name>
                  <description>1.32V</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot34_V</name>
                  <description>1.34V</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot36_V</name>
                  <description>1.36V</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- VREFEN: Enable high-performance reference for LDO -->
            <field>
              <name>VREFEN</name>
              <description>Enable high-performance reference for LDO</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- BODSTS: BOD Status Register -->
        <register>
          <name>BODSTS</name>
          <displayName>BODSTS</displayName>
          <description>BOD Status Register</description>
          <addressOffset>0x0000015C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CLR: Clear latched BOD status -->
            <field>
              <name>CLR</name>
              <description>Clear latched BOD status</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Write a 0 has no effect.\nAlways readback 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Write a 1 will clear all latched BOD status.\nThis bit is self-cleared to 0.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- VDDTOOLO: Latched VDD_TOO_LOW status -->
            <field>
              <name>VDDTOOLO</name>
              <description>Latched VDD_TOO_LOW status</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>VDD has never been too low</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>VDD is used to be too low</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- VDDTOOHI: Latched VDD_TOO_HIGH status -->
            <field>
              <name>VDDTOOHI</name>
              <description>Latched VDD_TOO_HIGH status</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>VDD has never been too high</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>VDD is used to be too high</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- VCAP12TOOLO: Latched VCAP12_TOO_LOW status -->
            <field>
              <name>VCAP12TOOLO</name>
              <description>Latched VCAP12_TOO_LOW status</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>VCAP12 has never been too low</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>VCAP12 is used to be too low</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- VCAP12TOOHI: Latched VCAP12_TOO_HIGH status -->
            <field>
              <name>VCAP12TOOHI</name>
              <description>Latched VCAP12_TOO_HIGH status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>VCAP12 has never been too high</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>VCAP12 is used to be too high</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- BODCTL: BOD Control Register -->
        <register>
          <name>BODCTL</name>
          <displayName>BODCTL</displayName>
          <description>BOD Control Register</description>
          <addressOffset>0x00000160</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000007</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VREFSEL: BOD reference voltage select -->
            <field>
              <name>VREFSEL</name>
              <description>BOD reference voltage select</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1dot13_V</name>
                  <description>1.13V</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot14_V</name>
                  <description>1.14V</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot15_V</name>
                  <description>1.15V</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot16_V</name>
                  <description>1.16V</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot17_V</name>
                  <description>1.17V</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot18_V</name>
                  <description>1.18V</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot19_V</name>
                  <description>1.19V</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot20_V</name>
                  <description>1.20V</description>
                  <value>0x7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot21_V</name>
                  <description>1.21V</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot22_V</name>
                  <description>1.22V</description>
                  <value>0x9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot23_V</name>
                  <description>1.23V</description>
                  <value>0xA</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot24_V</name>
                  <description>1.24V</description>
                  <value>0xB</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot25_V</name>
                  <description>1.25V</description>
                  <value>0xC</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot26_V</name>
                  <description>1.26V</description>
                  <value>0xD</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot27_V</name>
                  <description>1.27V</description>
                  <value>0xE</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1dot28_V</name>
                  <description>1.28V</description>
                  <value>0xF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>PINMUX</name>
      <description>Split from GLOBAL</description>
      <groupName>PINMUX</groupName>
      <baseAddress>0x4000B000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x174</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>

        <!-- GPIO0: GPIO0 Pin Configuration Register -->
        <register>
          <name>GPIO0</name>
          <displayName>GPIO0</displayName>
          <description>GPIO0 Pin Configuration Register</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007D020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO0</name>
                  <description>GPIO0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART_TXD</name>
                  <description>UART_TXD</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C_SCL</name>
                  <description>I2C_SCL</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO1: GPIO1 Pin Configuration Register -->
        <register>
          <name>GPIO1</name>
          <displayName>GPIO1</displayName>
          <description>GPIO1 Pin Configuration Register</description>
          <addressOffset>0x00000008</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00076880</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC0</name>
                  <description>ADC0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO1</name>
                  <description>GPIO1</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWMSYNCI</name>
                  <description>PWMSYNCI</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWMSYNCO</name>
                  <description>PWMSYNCO</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C_SDA</name>
                  <description>I2C_SDA</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO2: GPIO2 Pin Configuration Register -->
        <register>
          <name>GPIO2</name>
          <displayName>GPIO2</displayName>
          <description>GPIO2 Pin Configuration Register</description>
          <addressOffset>0x0000000C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC1</name>
                  <description>ADC1</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO2</name>
                  <description>GPIO2</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM5B</name>
                  <description>PWM5B</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO3: GPIO3 Pin Configuration Register -->
        <register>
          <name>GPIO3</name>
          <displayName>GPIO3</displayName>
          <description>GPIO3 Pin Configuration Register</description>
          <addressOffset>0x00000010</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC2</name>
                  <description>ADC2</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO3</name>
                  <description>GPIO3</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM5A</name>
                  <description>PWM5A</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO4: GPIO4 Pin Configuration Register -->
        <register>
          <name>GPIO4</name>
          <displayName>GPIO4</displayName>
          <description>GPIO4 Pin Configuration Register</description>
          <addressOffset>0x00000014</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC3</name>
                  <description>ADC3</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO4</name>
                  <description>GPIO4</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM6B</name>
                  <description>PWM6B</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO5: GPIO5 Pin Configuration Register -->
        <register>
          <name>GPIO5</name>
          <displayName>GPIO5</displayName>
          <description>GPIO5 Pin Configuration Register</description>
          <addressOffset>0x00000018</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC4</name>
                  <description>ADC4</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO5</name>
                  <description>GPIO5</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM6A</name>
                  <description>PWM6A</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO6: GPIO6 Pin Configuration Register -->
        <register>
          <name>GPIO6</name>
          <displayName>GPIO6</displayName>
          <description>GPIO6 Pin Configuration Register</description>
          <addressOffset>0x0000001C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC5</name>
                  <description>ADC5</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO6</name>
                  <description>GPIO6</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM4B</name>
                  <description>PWM4B</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO7: GPIO7 Pin Configuration Register -->
        <register>
          <name>GPIO7</name>
          <displayName>GPIO7</displayName>
          <description>GPIO7 Pin Configuration Register</description>
          <addressOffset>0x00000020</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC6</name>
                  <description>ADC6</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO7</name>
                  <description>GPIO7</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM4A</name>
                  <description>PWM4A</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO8: GPIO8 Pin Configuration Register -->
        <register>
          <name>GPIO8</name>
          <displayName>GPIO8</displayName>
          <description>GPIO8 Pin Configuration Register</description>
          <addressOffset>0x00000024</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC7</name>
                  <description>ADC7</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO8</name>
                  <description>GPIO8</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM4A</name>
                  <description>PWM4A</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP0HOUT</name>
                  <description>COMP0HOUT</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO9: GPIO9 Pin Configuration Register -->
        <register>
          <name>GPIO9</name>
          <displayName>GPIO9</displayName>
          <description>GPIO9 Pin Configuration Register</description>
          <addressOffset>0x00000028</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC8</name>
                  <description>ADC8</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO9</name>
                  <description>GPIO9</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM4B</name>
                  <description>PWM4B</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP1HOUT</name>
                  <description>COMP1HOUT</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO10: GPIO10 Pin Configuration Register -->
        <register>
          <name>GPIO10</name>
          <displayName>GPIO10</displayName>
          <description>GPIO10 Pin Configuration Register</description>
          <addressOffset>0x0000002C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC9</name>
                  <description>ADC9</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO10</name>
                  <description>GPIO10</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM6A</name>
                  <description>PWM6A</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP2HOUT</name>
                  <description>COMP2HOUT</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO11: GPIO11 Pin Configuration Register -->
        <register>
          <name>GPIO11</name>
          <displayName>GPIO11</displayName>
          <description>GPIO11 Pin Configuration Register</description>
          <addressOffset>0x00000030</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC10</name>
                  <description>ADC10</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO11</name>
                  <description>GPIO11</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM6B</name>
                  <description>PWM6B</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP0LOUT</name>
                  <description>COMP0LOUT</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO12: GPIO12 Pin Configuration Register -->
        <register>
          <name>GPIO12</name>
          <displayName>GPIO12</displayName>
          <description>GPIO12 Pin Configuration Register</description>
          <addressOffset>0x00000034</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC11</name>
                  <description>ADC11</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO12</name>
                  <description>GPIO12</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM5A</name>
                  <description>PWM5A</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP1LOUT</name>
                  <description>COMP1LOUT</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO13: GPIO13 Pin Configuration Register -->
        <register>
          <name>GPIO13</name>
          <displayName>GPIO13</displayName>
          <description>GPIO13 Pin Configuration Register</description>
          <addressOffset>0x00000038</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC12</name>
                  <description>ADC12</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO13</name>
                  <description>GPIO13</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM5B</name>
                  <description>PWM5B</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP2LOUT</name>
                  <description>COMP2LOUT</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO14: GPIO14 Pin Configuration Register -->
        <register>
          <name>GPIO14</name>
          <displayName>GPIO14</displayName>
          <description>GPIO14 Pin Configuration Register</description>
          <addressOffset>0x0000003C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC13</name>
                  <description>ADC13</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO14</name>
                  <description>GPIO14</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO15: GPIO15 Pin Configuration Register -->
        <register>
          <name>GPIO15</name>
          <displayName>GPIO15</displayName>
          <description>GPIO15 Pin Configuration Register</description>
          <addressOffset>0x00000040</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007C800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC14</name>
                  <description>ADC14</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO15</name>
                  <description>GPIO15</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TDI</name>
                  <description>TDI</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO16: GPIO16 Pin Configuration Register -->
        <register>
          <name>GPIO16</name>
          <displayName>GPIO16</displayName>
          <description>GPIO16 Pin Configuration Register</description>
          <addressOffset>0x00000044</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00078800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC15</name>
                  <description>ADC15</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO16</name>
                  <description>GPIO16</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TMS_SWD</name>
                  <description>TMS/SWD</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO17: GPIO17 Pin Configuration Register -->
        <register>
          <name>GPIO17</name>
          <displayName>GPIO17</displayName>
          <description>GPIO17 Pin Configuration Register</description>
          <addressOffset>0x00000048</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007B800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO17</name>
                  <description>GPIO17</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TDO</name>
                  <description>TDO</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TMS_SWD</name>
                  <description>TMS/SWD</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_FRM</name>
                  <description>SPI_FRM</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM6B</name>
                  <description>PWM6B</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO18: GPIO18 Pin Configuration Register -->
        <register>
          <name>GPIO18</name>
          <displayName>GPIO18</displayName>
          <description>GPIO18 Pin Configuration Register</description>
          <addressOffset>0x0000004C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00061880</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO18</name>
                  <description>GPIO18</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPIMO</name>
                  <description>SPIMO</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCK_SWCK</name>
                  <description>TCK/SWCK</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C_SDA</name>
                  <description>I2C_SDA</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPIMI</name>
                  <description>SPIMI</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM6A</name>
                  <description>PWM6A</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO19: GPIO19 Pin Configuration Register -->
        <register>
          <name>GPIO19</name>
          <displayName>GPIO19</displayName>
          <description>GPIO19 Pin Configuration Register</description>
          <addressOffset>0x00000050</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00077880</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO19</name>
                  <description>GPIO19</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPICLK</name>
                  <description>SPICLK</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART_TXD</name>
                  <description>UART_TXD</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK_TEST</name>
                  <description>CLK_TEST</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C_SCL</name>
                  <description>I2C_SCL</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPICLK</name>
                  <description>SPICLK</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM5B</name>
                  <description>PWM5B</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO20: GPIO20 Pin Configuration Register -->
        <register>
          <name>GPIO20</name>
          <displayName>GPIO20</displayName>
          <description>GPIO20 Pin Configuration Register</description>
          <addressOffset>0x00000054</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007B840</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO20</name>
                  <description>GPIO20</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_FRM</name>
                  <description>SPI_FRM</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART_RXD</name>
                  <description>UART_RXD</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM5A</name>
                  <description>PWM5A</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO21: GPIO21 Pin Configuration Register -->
        <register>
          <name>GPIO21</name>
          <displayName>GPIO21</displayName>
          <description>GPIO21 Pin Configuration Register</description>
          <addressOffset>0x00000058</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO21</name>
                  <description>GPIO21</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPIMI</name>
                  <description>SPIMI</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPISO</name>
                  <description>SPISO</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM4B</name>
                  <description>PWM4B</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO22: GPIO22 Pin Configuration Register -->
        <register>
          <name>GPIO22</name>
          <displayName>GPIO22</displayName>
          <description>GPIO22 Pin Configuration Register</description>
          <addressOffset>0x0000005C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007D800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO22</name>
                  <description>GPIO22</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPIMO</name>
                  <description>SPIMO</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPISI</name>
                  <description>SPISI</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM4A</name>
                  <description>PWM4A</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO23: GPIO23 Pin Configuration Register -->
        <register>
          <name>GPIO23</name>
          <displayName>GPIO23</displayName>
          <description>GPIO23 Pin Configuration Register</description>
          <addressOffset>0x00000060</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007F800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO23</name>
                  <description>GPIO23</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM0B</name>
                  <description>PWM0B</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP0LOUT</name>
                  <description>COMP0LOUT</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO24: GPIO24 Pin Configuration Register -->
        <register>
          <name>GPIO24</name>
          <displayName>GPIO24</displayName>
          <description>GPIO24 Pin Configuration Register</description>
          <addressOffset>0x00000064</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007F800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO24</name>
                  <description>GPIO24</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM0A</name>
                  <description>PWM0A</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ATEST</name>
                  <description>ATEST</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO25: GPIO25 Pin Configuration Register -->
        <register>
          <name>GPIO25</name>
          <displayName>GPIO25</displayName>
          <description>GPIO25 Pin Configuration Register</description>
          <addressOffset>0x00000068</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E008</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TEST</name>
                  <description>TEST</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GPIO25</name>
                  <description>GPIO25</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO26: GPIO26 Pin Configuration Register -->
        <register>
          <name>GPIO26</name>
          <displayName>GPIO26</displayName>
          <description>GPIO26 Pin Configuration Register</description>
          <addressOffset>0x0000006C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO26</name>
                  <description>GPIO26</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C_SDA</name>
                  <description>I2C_SDA</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWMSYNCI</name>
                  <description>PWMSYNCI</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCSOCAO</name>
                  <description>ADCSOCAO</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO27: GPIO27 Pin Configuration Register -->
        <register>
          <name>GPIO27</name>
          <displayName>GPIO27</displayName>
          <description>GPIO27 Pin Configuration Register</description>
          <addressOffset>0x00000070</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007E010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO27</name>
                  <description>GPIO27</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C_SCL</name>
                  <description>I2C_SCL</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWMSYNCO</name>
                  <description>PWMSYNCO</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADCSOCBO</name>
                  <description>ADCSOCBO</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO28: GPIO28 Pin Configuration Register -->
        <register>
          <name>GPIO28</name>
          <displayName>GPIO28</displayName>
          <description>GPIO28 Pin Configuration Register</description>
          <addressOffset>0x00000074</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00077800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO28</name>
                  <description>GPIO28</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM1A</name>
                  <description>PWM1A</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TDI</name>
                  <description>TDI</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO29: GPIO29 Pin Configuration Register -->
        <register>
          <name>GPIO29</name>
          <displayName>GPIO29</displayName>
          <description>GPIO29 Pin Configuration Register</description>
          <addressOffset>0x00000078</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007F800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO29</name>
                  <description>GPIO29</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM1B</name>
                  <description>PWM1B</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>COMP0HOUT</name>
                  <description>COMP0HOUT</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TDO</name>
                  <description>TDO</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAPO</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO30: GPIO30 Pin Configuration Register -->
        <register>
          <name>GPIO30</name>
          <displayName>GPIO30</displayName>
          <description>GPIO30 Pin Configuration Register</description>
          <addressOffset>0x0000007C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00067800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO30</name>
                  <description>GPIO30</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM2A</name>
                  <description>PWM2A</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TMS_SWD</name>
                  <description>TMS/SWD</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TMS_SWD</name>
                  <description>TMS/SWD</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO31: GPIO31 Pin Configuration Register -->
        <register>
          <name>GPIO31</name>
          <displayName>GPIO31</displayName>
          <description>GPIO31 Pin Configuration Register</description>
          <addressOffset>0x00000080</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00067800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO31</name>
                  <description>GPIO31</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM2B</name>
                  <description>PWM2B</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCK_SWCK</name>
                  <description>TCK/SWCK</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO32: GPIO32 Pin Configuration Register -->
        <register>
          <name>GPIO32</name>
          <displayName>GPIO32</displayName>
          <description>GPIO32 Pin Configuration Register</description>
          <addressOffset>0x00000084</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007F800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO32</name>
                  <description>GPIO32</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM3A</name>
                  <description>PWM3A</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWMSYNCI</name>
                  <description>PWMSYNCI</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWMSYNCO</name>
                  <description>PWMSYNCO</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPICLK</name>
                  <description>SPICLK</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO33: GPIO33 Pin Configuration Register -->
        <register>
          <name>GPIO33</name>
          <displayName>GPIO33</displayName>
          <description>GPIO33 Pin Configuration Register</description>
          <addressOffset>0x00000088</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007D820</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO33</name>
                  <description>GPIO33</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM3B</name>
                  <description>PWM3B</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART_RXD</name>
                  <description>UART_RXD</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_FRM</name>
                  <description>SPI_FRM</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO34: GPIO34 Pin Configuration Register -->
        <register>
          <name>GPIO34</name>
          <displayName>GPIO34</displayName>
          <description>GPIO34 Pin Configuration Register</description>
          <addressOffset>0x0000008C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007B040</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO34</name>
                  <description>GPIO34</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART_TXD</name>
                  <description>UART_TXD</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART_RXD</name>
                  <description>UART_RXD</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- GPIO35: GPIO35 Pin Configuration Register -->
        <register>
          <name>GPIO35</name>
          <displayName>GPIO35</displayName>
          <description>GPIO35 Pin Configuration Register</description>
          <addressOffset>0x00000090</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0007C030</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DEGLITCH: Input de-glitch filtering -->
            <field>
              <name>DEGLITCH</name>
              <description>Input de-glitch filtering</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable de-glitch</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable de-glitch</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- NPU: Disable internal pull-up for each channel -->
            <field>
              <name>NPU</name>
              <description>Disable internal pull-up for each channel</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>

            <!-- DEMUX: Default value for each demuxed input channel -->
            <field>
              <name>DEMUX</name>
              <description>Default value for each demuxed input channel</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MUXSEL: Channel select -->
            <field>
              <name>MUXSEL</name>
              <description>Channel select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>GPIO35</name>
                  <description>GPIO35</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART_RXD</name>
                  <description>UART_RXD</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C_SDA</name>
                  <description>I2C_SDA</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART_TXD</name>
                  <description>UART_TXD</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECAPO</name>
                  <description>ECAP output</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral derivedFrom="TIMER0">
      <name>TIMER2</name>
      <baseAddress>0x4000C000</baseAddress>
    </peripheral>

    <peripheral>
      <name>ECAP</name>
      <description>NONE</description>
      <groupName>ECAP</groupName>
      <baseAddress>0x4000D000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x24</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
         <name>ECAP</name>
         <description>ECAP      </description>
         <value>5</value>
      </interrupt>
      <registers>

        <!-- TSCNT: Time-Stamp Counter Register -->
        <register>
          <name>TSCNT</name>
          <displayName>TSCNT</displayName>
          <description>Time-Stamp Counter Register</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Active 32-bit counter register that is used as the capture time-base -->
            <field>
              <name>VAL</name>
              <description>Active 32-bit counter register that is used as the capture time-base</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CNTPHS: Counter Phase Offset Value Register -->
        <register>
          <name>CNTPHS</name>
          <displayName>CNTPHS</displayName>
          <description>Counter Phase Offset Value Register</description>
          <addressOffset>0x00000004</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Counter phase value register that can be programmed for phase lag/lead -->
            <field>
              <name>VAL</name>
              <description>Counter phase value register that can be programmed for phase lag/lead</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CAP0: Capture Register 0 -->
        <register>
          <name>CAP0</name>
          <displayName>CAP0</displayName>
          <description>Capture Register 0</description>
          <addressOffset>0x00000008</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: This register can be loaded by: - Time-Stamp(i.e., counter value) during a capture event - Software - may be useful for test purposes or initialization - APRD shadow register(i.e., CAP2) when used in APWM mode  NOTE: In APWM mode, writing to CAP0/CAP1 active registers also writes the same value to the corresponding shadow registers CAP2/CAP3. This emulates immediate mode. Writing to the shadow registers CAP2/CAP3 invokes the shadow mode. -->
            <field>
              <name>VAL</name>
              <description>This register can be loaded by:\n- Time-Stamp(i.e., counter value) during a capture event\n- Software - may be useful for test purposes or initialization\n- APRD shadow register(i.e., CAP2) when used in APWM mode\n\nNOTE: In APWM mode, writing to CAP0/CAP1 active registers also writes the same value to the corresponding shadow registers CAP2/CAP3. This emulates immediate mode. Writing to the shadow registers CAP2/CAP3 invokes the shadow mode.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CAP1: Capture Register 1 -->
        <register>
          <name>CAP1</name>
          <displayName>CAP1</displayName>
          <description>Capture Register 1</description>
          <addressOffset>0x0000000C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: This register can be loaded by:  - Time-Stamp(i.e., counter value) during a capture event - Software - may be useful for test purposes or initialization - APRD shadow register(i.e., CAP3) when used in APWM mode  NOTE: In APWM mode, writing to CAP0/CAP1 active registers also writes the same value to the corresponding shadow registers CAP2/CAP3. This emulates immediate mode. Writing to the shadow registers CAP2/CAP3 invokes the shadow mode. -->
            <field>
              <name>VAL</name>
              <description>This register can be loaded by: \n- Time-Stamp(i.e., counter value) during a capture event\n- Software - may be useful for test purposes or initialization\n- APRD shadow register(i.e., CAP3) when used in APWM mode\n\nNOTE: In APWM mode, writing to CAP0/CAP1 active registers also writes the same value to the corresponding shadow registers CAP2/CAP3. This emulates immediate mode. Writing to the shadow registers CAP2/CAP3 invokes the shadow mode.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CAP2: Capture Register 2 -->
        <register>
          <name>CAP2</name>
          <displayName>CAP2</displayName>
          <description>Capture Register 2</description>
          <addressOffset>0x00000010</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: In Capture mode, this is a time-stamp capture register. In APWM mode, this is the period shadow (APRD) register. You update the PWM period value through this register. In this mode, CAP2 (APRD) shadows CAP0. -->
            <field>
              <name>VAL</name>
              <description>In Capture mode, this is a time-stamp capture register. In APWM mode, this is the period shadow (APRD) register. You update the PWM period value through this register. In this mode, CAP2 (APRD) shadows CAP0.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CAP3: Capture Register 3 -->
        <register>
          <name>CAP3</name>
          <displayName>CAP3</displayName>
          <description>Capture Register 3</description>
          <addressOffset>0x00000014</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: In Capture mode, this is a time-stamp capture register. In APWM mode, this is the compare shadow (ACMP) register. You update the PWM compare value via this register. In this mode, CAP3 (ACMP) shadows CAP1. -->
            <field>
              <name>VAL</name>
              <description>In Capture mode, this is a time-stamp capture register. In APWM mode, this is the compare shadow (ACMP) register. You update the PWM compare value via this register. In this mode, CAP3 (ACMP) shadows CAP1.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CAPCTL: Capture Control Register -->
        <register>
          <name>CAPCTL</name>
          <displayName>CAPCTL</displayName>
          <description>Capture Control Register</description>
          <addressOffset>0x00000018</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00060000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- APWMPOL: APWM output polarity select. This is applicable only in APWM operating mode. -->
            <field>
              <name>APWMPOL</name>
              <description>APWM output polarity select. This is applicable only in APWM operating mode.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ACTIVE_HIGH</name>
                  <description>Output is active high (i.e., Compare value defines high time)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ACTIVE_LOW</name>
                  <description>Output is active low (i.e., Compare value defines low time)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CAPAPWM: Capture/APWM operating mode select  -->
            <field>
              <name>CAPAPWM</name>
              <description>Capture/APWM operating mode select\n</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CAPTURE_MODE</name>
                  <description>ECAP module operates in capture mode. This mode forces the following configuration:\n- Inhibits TSCNT resets via CNT = PRD event\n- Inhibits shadow loads on CAP0 and CAP1 registers\n- Permits user to enable CAP0-3 register load\n- CAPx/APWMx pin operates as a capture input</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>APWM_MODE</name>
                  <description>ECAP module operates in APWM mode. This mode forces the following configuration:\n- Resets TSCNT on CNT = PRD event (period boundary\n- Permits shadow loading on CAP0 and CAP1 registers\n- Disables loading of time-stamps into CAP0-3 registers\n- CAPx/APWMx pin operates as a APWM output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRCSYNC: Software-forced Counter (TSCNT) Synchronizing. This provides a convenient software method to synchronize some or all ECAP time bases. In APWM mode, the synchronizing can also be done via the CNT = PRD event.  Note: Selection CNT = PRD is meaningful only in APWM mode; however, you can choose it in CAP mode if you find doing so useful. -->
            <field>
              <name>FRCSYNC</name>
              <description>Software-forced Counter (TSCNT) Synchronizing. This provides a convenient software method to synchronize some or all ECAP time bases. In APWM mode, the synchronizing can also be done via the CNT = PRD event.\n\nNote: Selection CNT = PRD is meaningful only in APWM mode; however, you can choose it in CAP mode if you find doing so useful.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Writing a zero has no effect. Reading always returns a zero.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Writing a one forces a TSCNT shadow load of current ECAP module and any ECAP modules down-stream providing the SYNCOSEL bits are 00. After writing a 1, this bit returns to a zero.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SYNCOSEL: Sync-Out Select -->
            <field>
              <name>SYNCOSEL</name>
              <description>Sync-Out Select</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SYNC_IN</name>
                  <description>Select sync-in event to be the sync-out signal (pass through)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CNT_EQU_PRD</name>
                  <description>Select CNT = PRD event to be the sync-out signal</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DISABLE_SYNC_OUT</name>
                  <description>Disable sync out signal</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- SYNCIEN: Counter (TSCNT) Sync-In select mode -->
            <field>
              <name>SYNCIEN</name>
              <description>Counter (TSCNT) Sync-In select mode</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable sync-in option</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable counter (TSCNT) to be loaded from CNTPHS register upon either a SYNCI signal or a S/W force event</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- TSCNTRUN: Time Stamp (TSCNT) Counter Stop (freeze) Control -->
            <field>
              <name>TSCNTRUN</name>
              <description>Time Stamp (TSCNT) Counter Stop (freeze) Control</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STOP_COUNTER</name>
                  <description>TSCNT stopped</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>START_COUNTER</name>
                  <description>TSCNT free-running</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- REARM: One-Shot Re-Arming Control, i.e. wait for stop trigger. Note: The re-arm function is valid in one shot or continuous mode. -->
            <field>
              <name>REARM</name>
              <description>One-Shot Re-Arming Control, i.e. wait for stop trigger. Note: The re-arm function is valid in one shot or continuous mode.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Has no effect (reading always returns a 0)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Arms the one-shot sequence as follows:\n1) Resets the Mod4 counter to zero\n2) Unfreezes the Mod4 counter\n3) Enables capture register loads</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- STOPWRAP: Stop value for one-shot mode This is the number (between 0-3) of captures allowed to occur before the CAP (0-3) registers are frozen, i.e., capture sequence is stopped. Wrap value for continuous mode. This is the number (between 0-3) of the capture register in which the circular buffer wraps around and starts again. Notes: STOP_WRAP is compared to Mod4 counter and, when equal, 2 actions occur: - Mod4 counter is stopped (frozen) - Capture register loads are inhibited In one-shot mode, further interrupt events are blocked until re-armed. -->
            <field>
              <name>STOPWRAP</name>
              <description>Stop value for one-shot mode\nThis is the number (between 0-3) of captures allowed to occur before the CAP (0-3) registers are frozen, i.e., capture sequence is stopped.\nWrap value for continuous mode. This is the number (between 0-3) of the capture register in which the circular buffer wraps around and starts again.\nNotes: STOP_WRAP is compared to Mod4 counter and, when equal, 2 actions occur:\n- Mod4 counter is stopped (frozen)\n- Capture register loads are inhibited\nIn one-shot mode, further interrupt events are blocked until re-armed.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ON_CAPTURE_EVENT0</name>
                  <description>Stop after Capture Event 0 in one-shot mode Wrap after Capture Event 0 in continuous mode</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON_CAPTURE_EVENT1</name>
                  <description>Stop after Capture Event 1 in one-shot mode Wrap after Capture Event 1 in continuous mode</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON_CAPTURE_EVENT2</name>
                  <description>Stop after Capture Event 2 in one-shot mode Wrap after Capture Event 2 in continuous mode</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON_CAPTURE_EVENT3</name>
                  <description>Stop after Capture Event 3 in one-shot mode Wrap after Capture Event 3 in continuous mode</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- MODE: Continuous or one-shot mode control (applicable only in capture mode) -->
            <field>
              <name>MODE</name>
              <description>Continuous or one-shot mode control (applicable only in capture mode)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CONTINOUS_MODE</name>
                  <description>Operate in continuous mode</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONESHOT_MODE</name>
                  <description>Operate in one-Shot mode</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DBGRUN: ECAP counter behaviour when CPU is halted  Note: Debug operation and CPU fault exceptions both can cause CPU halted. -->
            <field>
              <name>DBGRUN</name>
              <description>ECAP counter behaviour when CPU is halted\n\nNote: Debug operation and CPU fault exceptions both can cause CPU halted.</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STOP_IMMEDIATELY</name>
                  <description>TSCNT counter stops immediately when CPU is halted</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STOP_AT_ZERO</name>
                  <description>TSCNT counter runs until = 0 when CPU is halted</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KEEP_RUN</name>
                  <description>TSCNT counter is unaffected when CPU is halted</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EVTDIV: Event Filter prescale select  -->
            <field>
              <name>EVTDIV</name>
              <description>Event Filter prescale select\n</description>
              <bitRange>[13:9]</bitRange>
              <access>read-write</access>
            </field>

            <!-- CAPLDEN: Enable Loading of CAP0-3 registers on a capture event -->
            <field>
              <name>CAPLDEN</name>
              <description>Enable Loading of CAP0-3 registers on a capture event</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CAPTURE_LOAD_DISABLE</name>
                  <description>Disable CAP0-3 register loads at capture event time</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CAPTURE_LOAD_ENABLE</name>
                  <description>Enable CAP0-3 register loads at capture event time</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CNTRST3: Counter Reset on Capture Event 3 -->
            <field>
              <name>CNTRST3</name>
              <description>Counter Reset on Capture Event 3</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_RESET_ON_CAPTURE</name>
                  <description>Do not reset counter on Capture Event 3 (absolute time stamp operation)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RESET_ON_CAPTURE</name>
                  <description>Reset counter after Capture Event 3 time-stamp has been captured (used in difference mode operation)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CAP3POL: Capture Event 3 Polarity select -->
            <field>
              <name>CAP3POL</name>
              <description>Capture Event 3 Polarity select</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_ON_RISING_EDGE</name>
                  <description>Capture Event 3 triggered on a rising edge (RE)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_ON_FALLING_EDGE</name>
                  <description>Capture Event 3 triggered on a falling edge (FE)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CNTRST2: Counter Reset on Capture Event 2 -->
            <field>
              <name>CNTRST2</name>
              <description>Counter Reset on Capture Event 2</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_RESET_ON_CAPTURE</name>
                  <description>Do not reset counter on Capture Event 2 (absolute time stamp)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RESET_ON_CAPTURE</name>
                  <description>Reset counter after Event 2 time-stamp has been captured (used in difference mode operation)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CAP2POL: Capture Event 2 Polarity select -->
            <field>
              <name>CAP2POL</name>
              <description>Capture Event 2 Polarity select</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_ON_RISING_EDGE</name>
                  <description>Capture Event 2 triggered on a rising edge (RE)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_ON_FALLING_EDGE</name>
                  <description>Capture Event 2 triggered on a falling edge (FE)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CNTRST1: Counter Reset on Capture Event 1 -->
            <field>
              <name>CNTRST1</name>
              <description>Counter Reset on Capture Event 1</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_RESET_ON_CAPTURE</name>
                  <description>Do not reset counter on Capture Event 1 (absolute time stamp)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RESET_ON_CAPTURE</name>
                  <description>Reset counter after Event 1 time-stamp has been captured (used in difference mode operation)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CAP1POL: Capture Event 1 Polarity select -->
            <field>
              <name>CAP1POL</name>
              <description>Capture Event 1 Polarity select</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_ON_RISING_EDGE</name>
                  <description>Capture Event 1 triggered on a rising edge (RE)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_ON_FALLING_EDGE</name>
                  <description>Capture Event 1 triggered on a falling edge (FE)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CNTRST0: Counter Reset on Capture Event 0 -->
            <field>
              <name>CNTRST0</name>
              <description>Counter Reset on Capture Event 0</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_RESET_ON_CAPTURE</name>
                  <description>Do not reset counter on Capture Event 0 (absolute time stamp)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RESET_ON_CAPTURE</name>
                  <description>Reset counter after Event 0 time-stamp has been captured (used in difference mode operation)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- CAP0POL: Capture Event 0 Polarity select -->
            <field>
              <name>CAP0POL</name>
              <description>Capture Event 0 Polarity select</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TRIG_ON_RISING_EDGE</name>
                  <description>Capture Event 0 triggered on a rising edge (RE)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TRIG_ON_FALLING_EDGE</name>
                  <description>Capture Event 0 triggered on a falling edge (FE)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- CAPIEIF: Capture Interrupt Enable and Flag Register -->
        <register>
          <name>CAPIEIF</name>
          <displayName>CAPIEIF</displayName>
          <description>Capture Interrupt Enable and Flag Register</description>
          <addressOffset>0x0000001C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000C0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- IECMP: Counter Equal Compare Interrupt Enable -->
            <field>
              <name>IECMP</name>
              <description>Counter Equal Compare Interrupt Enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Compare Equal as an Interrupt source</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Compare Equal as an Interrupt source</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IEPRD: Counter Equal Period Interrupt Enable -->
            <field>
              <name>IEPRD</name>
              <description>Counter Equal Period Interrupt Enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Period Equal as an Interrupt source</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Period Equal as an Interrupt source</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IECNTOVF: Counter Overflow Interrupt Enable -->
            <field>
              <name>IECNTOVF</name>
              <description>Counter Overflow Interrupt Enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disabled counter Overflow as an Interrupt source</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable counter Overflow as an Interrupt source</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IECEVT3: Capture Event 3 Interrupt Enable -->
            <field>
              <name>IECEVT3</name>
              <description>Capture Event 3 Interrupt Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Capture Event 3 as an Interrupt source</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Capture Event 3 as an Interrupt source</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IECEVT2: Capture Event 2 Interrupt Enable -->
            <field>
              <name>IECEVT2</name>
              <description>Capture Event 2 Interrupt Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Capture Event 2 as an Interrupt source</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Capture Event 2 as an Interrupt source</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IECEVT1: Capture Event 1 Interrupt Enable -->
            <field>
              <name>IECEVT1</name>
              <description>Capture Event 1 Interrupt Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Capture Event 1 as an Interrupt source</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Capture Event 1 as an Interrupt source</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IECEVT0: Capture Event 0 Interrupt Enable -->
            <field>
              <name>IECEVT0</name>
              <description>Capture Event 0 Interrupt Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable Capture Event 0 as an Interrupt source</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable Capture Event 0 as an Interrupt source</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IFCMP: Compare Equal Compare Status Flag This flag is active only in APWM mode. -->
            <field>
              <name>IFCMP</name>
              <description>Compare Equal Compare Status Flag\nThis flag is active only in APWM mode.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Indicates no event occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Indicates the counter (TSCNT) reached the compare register value (ACMP)</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IFPRD: Counter Equal Period Status Flag This flag is only active in APWM mode. -->
            <field>
              <name>IFPRD</name>
              <description>Counter Equal Period Status Flag\nThis flag is only active in APWM mode.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Indicates no event occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Indicates the counter (TSCNT) reached the period register value (APRD) and was reset</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IFCNTOVF: Counter Overflow Status Flag. This flag is active in Capture and APWM mode. -->
            <field>
              <name>IFCNTOVF</name>
              <description>Counter Overflow Status Flag.\nThis flag is active in Capture and APWM mode.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Indicates no event occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Indicates the counter (TSCNT) has made the transition from FFFFFFFF to 00000000</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IFCEVT3: Capture Event 3 Status Flag This flag is only active in Capture mode. -->
            <field>
              <name>IFCEVT3</name>
              <description>Capture Event 3 Status Flag\nThis flag is only active in Capture mode.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Indicates no event occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Indicates the fourth event occurred at ECAPx pin</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IFCEVT2: Capture Event 2 Status Flag This flag is active only in Capture mode. -->
            <field>
              <name>IFCEVT2</name>
              <description>Capture Event 2 Status Flag\nThis flag is active only in Capture mode.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Indicates no event occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Indicates the third event occurred at ECAPx pin</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IFCEVT1: Capture Event 1 Status Flag This flag is only active in Capture mode. -->
            <field>
              <name>IFCEVT1</name>
              <description>Capture Event 1 Status Flag\nThis flag is only active in Capture mode.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Indicates no event occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Indicates the second event occurred at ECAPx pin</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IFCEVT0: Capture Event 0 Status Flag This flag is only active in Capture mode. -->
            <field>
              <name>IFCEVT0</name>
              <description>Capture Event 0 Status Flag\nThis flag is only active in Capture mode.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Indicates no event occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Indicates the first event occurred at ECAPx pin</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IFGLB: Global Interrupt Status Flag -->
            <field>
              <name>IFGLB</name>
              <description>Global Interrupt Status Flag</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Indicates no interrupt generated</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Indicates that an interrupt was generated</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- CAPICFRC: Capture Interrupt Clear and Force Register -->
        <register>
          <name>CAPICFRC</name>
          <displayName>CAPICFRC</displayName>
          <description>Capture Interrupt Clear and Force Register</description>
          <addressOffset>0x00000020</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- ICCMP: Counter Equal Compare Status Flag -->
            <field>
              <name>ICCMP</name>
              <description>Counter Equal Compare Status Flag</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Writing a 0 has no effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_CNT_EQU_COMP_FLAG</name>
                  <description>Writing a 1 clears the CNT=CMP flag condition</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ICPRD: Counter Equal Period Status Flag -->
            <field>
              <name>ICPRD</name>
              <description>Counter Equal Period Status Flag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Writing a 0 has no effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_CNT_EQU_PRD_FLAG</name>
                  <description>Writing a 1 clears the CNT=PRD flag condition</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ICCNTOVF: Counter Overflow Status Flag -->
            <field>
              <name>ICCNTOVF</name>
              <description>Counter Overflow Status Flag</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Writing a 0 has no effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_CNT_OVERFLOW_FLAG</name>
                  <description>Writing a 1 clears the CNTOVF flag condition</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ICCEVT3: Capture Event 3 Status Flag -->
            <field>
              <name>ICCEVT3</name>
              <description>Capture Event 3 Status Flag</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Writing a 0 has no effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Writing a 1 clears the CEVT3 flag condition</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ICCEVT2: Capture Event 2 Status Flag -->
            <field>
              <name>ICCEVT2</name>
              <description>Capture Event 2 Status Flag</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Writing a 0 has no effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Writing a 1 clears the CEVT2 flag condition</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ICCEVT1: Capture Event 1 Status Flag  -->
            <field>
              <name>ICCEVT1</name>
              <description>Capture Event 1 Status Flag\n</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Writing a 0 has no effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Writing a 1 clears the CEVT1 flag condition</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ICCEVT0: Capture Event 0 Status Flag -->
            <field>
              <name>ICCEVT0</name>
              <description>Capture Event 0 Status Flag</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Writing a 0 has no effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR</name>
                  <description>Writing a 1 clears the CEVT0 flag condition</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- ICGLB: Global Interrupt Clear Flag -->
            <field>
              <name>ICGLB</name>
              <description>Global Interrupt Clear Flag</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>Writing a 0 has no effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_GLOBAL_INT_FLAG</name>
                  <description>Writing a 1 clears the INT flag and enable further interrupts to be generated if any of the event flags are set to 1</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRCCMP: Force Counter Equal Compare Interrupt -->
            <field>
              <name>FRCCMP</name>
              <description>Force Counter Equal Compare Interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CNT_EQU_COMP</name>
                  <description>Writing a 1 sets the CNT=CMP flag bit</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRCPRD: Force Counter Equal Period Interrupt -->
            <field>
              <name>FRCPRD</name>
              <description>Force Counter Equal Period Interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CNT_EQU_PRD</name>
                  <description>Writing a 1 sets the CNT=PRD flag bit</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRCCNTOVF: Force Counter Overflow -->
            <field>
              <name>FRCCNTOVF</name>
              <description>Force Counter Overflow</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE_CNT_OVERFLOW</name>
                  <description>Writing a 1 sets the CNTOVF flag bit</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRCCEVT3: Force Capture Event 3  -->
            <field>
              <name>FRCCEVT3</name>
              <description>Force Capture Event 3\n</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Writing a 1 sets the CEVT3 flag bit</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRCCEVT2: Force Capture Event 2  -->
            <field>
              <name>FRCCEVT2</name>
              <description>Force Capture Event 2\n</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Writing a 1 sets the CEVT2 flag bit</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRCCEVT1: Force Capture Event 1  -->
            <field>
              <name>FRCCEVT1</name>
              <description>Force Capture Event 1\n</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Writing a 1 sets the CEVT1 flag bit</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- FRCCEVT0: Force Capture Event 0  -->
            <field>
              <name>FRCCEVT0</name>
              <description>Force Capture Event 0\n</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>No effect. Always reads back a 0.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FORCE</name>
                  <description>Sets the CEVT0 flag bit</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>CRC</name>
      <description>NOEN</description>
      <groupName>CRC</groupName>
      <baseAddress>0x41000000</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x20</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
         <name>CRC</name>
         <description>CRC       </description>
         <value>35</value>
      </interrupt>
      <registers>

        <!-- CRCIF: CRC Interrupt Flag Register -->
        <register>
          <name>CRCIF</name>
          <displayName>CRCIF</displayName>
          <description>CRC Interrupt Flag Register</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DONE: CRC calculation done interrupt status after mask  -->
            <field>
              <name>DONE</name>
              <description>CRC calculation done interrupt status after mask\n</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Interrupt is not occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Interrupt is occurred</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- CRCRAWIF: CRC Raw Interrupt Flag Register -->
        <register>
          <name>CRCRAWIF</name>
          <displayName>CRCRAWIF</displayName>
          <description>CRC Raw Interrupt Flag Register</description>
          <addressOffset>0x00000004</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DONE: CRC calculation done interrupt raw status regardless of mask   -->
            <field>
              <name>DONE</name>
              <description>CRC calculation done interrupt raw status regardless of mask\n\n</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>Interrupt is not occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>Interrupt is occurred</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- CRCIC: CRC Interrupt Clear Register -->
        <register>
          <name>CRCIC</name>
          <displayName>CRCIC</displayName>
          <description>CRC Interrupt Clear Register</description>
          <addressOffset>0x00000008</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- DONE: Clearance of CRCIF[0] and CRCRAWIF[0]  -->
            <field>
              <name>DONE</name>
              <description>Clearance of CRCIF[0] and CRCRAWIF[0]\n</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Write &quot;1&quot; will generate a single-cycle pulse that clears both CRCIF[0] and CRCRAWIF[0]</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- CRCINTMSK: CRC Interrupt Mask Register -->
        <register>
          <name>CRCINTMSK</name>
          <displayName>CRCINTMSK</displayName>
          <description>CRC Interrupt Mask Register</description>
          <addressOffset>0x0000000C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- MSKDONE: Mask of interrupt   -->
            <field>
              <name>MSKDONE</name>
              <description>Mask of interrupt\n\n</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Enable generation of IRQ and corresponding CRCIF[0] </description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Disable generation of IRQ and corresponding CRCIF[0]</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- CRCCTL: CRC Control Register -->
        <register>
          <name>CRCCTL</name>
          <displayName>CRCCTL</displayName>
          <description>CRC Control Register</description>
          <addressOffset>0x00000010</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- MODE: CRC mode select -->
            <field>
              <name>MODE</name>
              <description>CRC mode select</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>16_CCITT</name>
                  <description>x**16+x**12+x**5+1 (CRC-16-CCITT, CRC-CCITT)</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>16_IBM</name>
                  <description>x**16+x**15+x**2+1 (CRC-16, CRC-16-IBM, CRC-16-ANSI)</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>16_T10_DIF</name>
                  <description>x**16+x**15+x**11+x**9+x**8+x**7+x**5+x**4+x**2+x+1 (CRC-16-T10-DIF)</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IEEE802_3</name>
                  <description>x**32+x**26+x**23+x**22+x**16+x**12+x**11+x**10+x**8+x**7+x**5+x**4+x**2+x+1 (CRC-32-IEEE802.3)</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>16_DNP</name>
                  <description>x**16+x**13+x**12+x**11+x**10+x**8+x**6+x**5+x**2+1(CRC-16-DNP)</description>
                  <value>0x4</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- EN: CRC calculate enable  -->
            <field>
              <name>EN</name>
              <description>CRC calculate enable\n</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Disable CRC calculation</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Enable CRC calculation, it is automatically cleared when the CRC calculation is finished</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- CRCSTRLEN: CRC Stream Length Register -->
        <register>
          <name>CRCSTRLEN</name>
          <displayName>CRCSTRLEN</displayName>
          <description>CRC Stream Length Register</description>
          <addressOffset>0x00000014</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Input stream length minus 1(in unit of byte)  -->
            <field>
              <name>VAL</name>
              <description>Input stream length minus 1(in unit of byte)\n</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CRCSTRIN: CRC Stream Input Register -->
        <register>
          <name>CRCSTRIN</name>
          <displayName>CRCSTRIN</displayName>
          <description>CRC Stream Input Register</description>
          <addressOffset>0x00000018</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Stream Input data register -->
            <field>
              <name>VAL</name>
              <description>Stream Input data register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- CRCRESULT: CRC Result Register -->
        <register>
          <name>CRCRESULT</name>
          <displayName>CRCRESULT</displayName>
          <description>CRC Result Register</description>
          <addressOffset>0x0000001C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: CRC calculation result -->
            <field>
              <name>VAL</name>
              <description>CRC calculation result</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <peripheral>
      <name>AES</name>
      <description>NONE</description>
      <groupName>AES</groupName>
      <baseAddress>0x41000400</baseAddress>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x6C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
         <name>AES</name>
         <description>AES       </description>
         <value>34</value>
      </interrupt>
      <registers>

        <!-- AESCTL0: AES Control Register 0 -->
        <register>
          <name>AESCTL0</name>
          <displayName>AESCTL0</displayName>
          <description>AES Control Register 0</description>
          <addressOffset>0x00000000</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00004010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- CNTMOD: CTR mode&apos;s counter modular modular=2^128:[7&apos;h0-7&apos;hF] modular=2^ctr_mod: others -->
            <field>
              <name>CNTMOD</name>
              <description>CTR mode&apos;s counter modular\nmodular=2^128:[7&apos;h0-7&apos;hF]\nmodular=2^ctr_mod: others</description>
              <bitRange>[25:19]</bitRange>
              <access>read-write</access>
            </field>

            <!-- MODE: AES running mode -->
            <field>
              <name>MODE</name>
              <description>AES running mode</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECB</name>
                  <description>ECB</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CBC</name>
                  <description>CBC</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CTR</name>
                  <description>CTR</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCM</name>
                  <description>CCM*</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MMO</name>
                  <description>MMO</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BYPASS</name>
                  <description>BYPASS</description>
                  <value>0x7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DECRYPTEN: Decrypt operation. Ignored in MMO and BYPASS Mode. -->
            <field>
              <name>DECRYPTEN</name>
              <description>Decrypt operation. Ignored in MMO and BYPASS Mode.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ENCRYPT</name>
                  <description>Encryption</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DECRYPT</name>
                  <description>Decryption</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OUTMIC: Append MIC/HASH at the end of output stream in CCM* mode encryption/MMO mode.  -->
            <field>
              <name>OUTMIC</name>
              <description>Append MIC/HASH at the end of output stream in CCM* mode encryption/MMO mode.\n</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Not append MIC/HASH at the end of output stream in CCM* mode encryption or MMO mode</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Append MIC/HASH at the end of output stream in CCM* mode encryption or MMO mode</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- MICLEN: Length of MIC field -->
            <field>
              <name>MICLEN</name>
              <description>Length of MIC field</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0BYTE</name>
                  <description>0 bytes</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4BYTE</name>
                  <description>4 bytes</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>8BYTE</name>
                  <description>8 bytes</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>16BYTE</name>
                  <description>16 bytes</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- KEYSIZE: Key size parameter -->
            <field>
              <name>KEYSIZE</name>
              <description>Key size parameter</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>16BYTE</name>
                  <description>16 bytes</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>32BYTE</name>
                  <description>32 bytes</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>24BYTE</name>
                  <description>24 bytes</description>
                  <value>0x2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OUTHDR: Output B0 and l(a) in CCM* mode -->
            <field>
              <name>OUTHDR</name>
              <description>Output B0 and l(a) in CCM* mode</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Don&apos;t output B0 and l(a) at the beginning of output stream</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Output B0 and l(a) at the beginning of output stream</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OUTMSG: Output stream to output FIFO -->
            <field>
              <name>OUTMSG</name>
              <description>Output stream to output FIFO</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DISABLE</name>
                  <description>Block output stream from output FIFO</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ENABLE</name>
                  <description>Forward output stream to output FIFO</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OFIFOCLR: Clear output FIFO -->
            <field>
              <name>OFIFOCLR</name>
              <description>Clear output FIFO</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_OUTPUT_FIFO</name>
                  <description>Write &apos;1&apos; will generate one-cycle pulse to clear output FIFO</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IFIFOCLR: Clear input FIFO -->
            <field>
              <name>IFIFOCLR</name>
              <description>Clear input FIFO</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_INPUT_FIFO</name>
                  <description>Write &apos;1&apos; will generate one-cycle pulse to clear input FIFO</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- START: Start AES -->
            <field>
              <name>START</name>
              <description>Start AES</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AES_START</name>
                  <description>Write &apos;1&apos; will generate one-cycle pulse to start AES operation</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- AESCTL1: AES Control Register 1 -->
        <register>
          <name>AESCTL1</name>
          <displayName>AESCTL1</displayName>
          <description>AES Control Register 1</description>
          <addressOffset>0x00000004</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- RST: Reset AES -->
            <field>
              <name>RST</name>
              <description>Reset AES</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AES_NOT_RESET</name>
                  <description>Un-reset AES</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AES_RESET</name>
                  <description>Reset AES, please set to 0 manually</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- AESSTS: AES Status Register -->
        <register>
          <name>AESSTS</name>
          <displayName>AESSTS</displayName>
          <description>AES Status Register</description>
          <addressOffset>0x00000008</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- OFIFODEPTH: The output FIFO depth -->
            <field>
              <name>OFIFODEPTH</name>
              <description>The output FIFO depth</description>
              <bitRange>[19:17]</bitRange>
              <access>read-only</access>
            </field>

            <!-- IFIFODEPTH: The input FIFO depth -->
            <field>
              <name>IFIFODEPTH</name>
              <description>The input FIFO depth</description>
              <bitRange>[16:14]</bitRange>
              <access>read-only</access>
            </field>

            <!-- ERRCODE: AES operation error status -->
            <field>
              <name>ERRCODE</name>
              <description>AES operation error status</description>
              <bitRange>[13:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_ERROR</name>
                  <description>No operation error</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>1</name>
                  <description>Input stream size less than 16 byte in ECB, CBC and CTR mode</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>2</name>
                  <description>Data is not multiple of 16 bytes in ECB mode or Data is more than 2^13-1 bytes in MMO mode</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>3</name>
                  <description>Data is not multiple of 16 bytes and less than 16 bytes in ECB mode</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>4</name>
                  <description>MIC Mismatch during CCM* Decryption</description>
                  <value>0x4</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OFIFOEMPTY: Output FIFO empty -->
            <field>
              <name>OFIFOEMPTY</name>
              <description>Output FIFO empty</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_EMPTY</name>
                  <description>Output FIFO is not empty</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EMPTY</name>
                  <description>Output FIFO is empty</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- OFIFORDY: Output FIFO is ready to read -->
            <field>
              <name>OFIFORDY</name>
              <description>Output FIFO is ready to read</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_READY</name>
                  <description>Output FIFO is not ready to read</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>READY</name>
                  <description>Output FIFO is ready to read</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IFIFOFULL: Input FIFO full -->
            <field>
              <name>IFIFOFULL</name>
              <description>Input FIFO full</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_FULL</name>
                  <description>Input FIFO is not full</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FULL</name>
                  <description>Input FIFO is full</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DONE: AES operation done  -->
            <field>
              <name>DONE</name>
              <description>AES operation done\n</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OPERATION_NOT_DONE</name>
                  <description>AES operation has not done yet</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OPERATION_DONE</name>
                  <description>AES operation done</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- AESASTRLEN: AES Associate String Length Register -->
        <register>
          <name>AESASTRLEN</name>
          <displayName>AESASTRLEN</displayName>
          <description>AES Associate String Length Register</description>
          <addressOffset>0x0000000C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Size of associate string -->
            <field>
              <name>VAL</name>
              <description>Size of associate string</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- AESMSTRLEN: AES Message String Length Register -->
        <register>
          <name>AESMSTRLEN</name>
          <displayName>AESMSTRLEN</displayName>
          <description>AES Message String Length Register</description>
          <addressOffset>0x00000010</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Size of message string -->
            <field>
              <name>VAL</name>
              <description>Size of message string</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- AESSTRIN: AES Input Message Word Register -->
        <register>
          <name>AESSTRIN</name>
          <displayName>AESSTRIN</displayName>
          <description>AES Input Message Word Register</description>
          <addressOffset>0x00000014</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Input message word -->
            <field>
              <name>VAL</name>
              <description>Input message word</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>

        <!-- AESIV[4]: AES Initial Vector Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>4</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>AESIV[%s]</name>
          <displayName>AESIV[%s]</displayName>
          <description>AES Initial Vector Register 0</description>
          <addressOffset>0x00000018</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Byte 0-3 of initial vector -->
            <field>
              <name>VAL</name>
              <description>Byte 0-3 of initial vector</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- AESKEY[8]: AES Key Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>8</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>AESKEY[%s]</name>
          <displayName>AESKEY[%s]</displayName>
          <description>AES Key Register 0</description>
          <addressOffset>0x00000028</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Byte 0-3 of key -->
            <field>
              <name>VAL</name>
              <description>Byte 0-3 of key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>

        <!-- AESSTROUT: AES Output Message Word Register -->
        <register>
          <name>AESSTROUT</name>
          <displayName>AESSTROUT</displayName>
          <description>AES Output Message Word Register</description>
          <addressOffset>0x00000048</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Output message word -->
            <field>
              <name>VAL</name>
              <description>Output message word</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- AESOV[4]: AES Output Vector Register 0 -->
        <register>
          <!-- dimElementGroup -->
          <dim>4</dim>
          <dimIncrement>4</dimIncrement>
          <!-- end of dimElementGroup -->
          <name>AESOV[%s]</name>
          <displayName>AESOV[%s]</displayName>
          <description>AES Output Vector Register 0</description>
          <addressOffset>0x0000004C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- VAL: Byte 0-3 of output vector -->
            <field>
              <name>VAL</name>
              <description>Byte 0-3 of output vector</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>

        <!-- AESIF: AES Interrupt Status Register -->
        <register>
          <name>AESIF</name>
          <displayName>AESIF</displayName>
          <description>AES Interrupt Status Register</description>
          <addressOffset>0x0000005C</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- OFIFOEMPTY: Status of AES output FIFO empty interrupt -->
            <field>
              <name>OFIFOEMPTY</name>
              <description>Status of AES output FIFO empty interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>AES output FIFO empty interrupt not occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>AES output FIFO empty interrupt occurred</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IFIFOFULL: Status of AES input FIFO full interrupt -->
            <field>
              <name>IFIFOFULL</name>
              <description>Status of AES input FIFO full interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>AES input FIFO full interrupt not occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>AES input FIFO full interrupt occurred</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DONE: Status of AES operation done interrupt -->
            <field>
              <name>DONE</name>
              <description>Status of AES operation done interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>AES operation done interrupt not occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>AES operation done interrupt occurred</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- AESINTMSK: AES Interrupt Mask Register -->
        <register>
          <name>AESINTMSK</name>
          <displayName>AESINTMSK</displayName>
          <description>AES Interrupt Mask Register</description>
          <addressOffset>0x00000060</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000007</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- OFIFOEMPTY: Mask of AES output FIFO empty interrupt  -->
            <field>
              <name>OFIFOEMPTY</name>
              <description>Mask of AES output FIFO empty interrupt\n</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Enable AES output FIFO empty interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Disable AES output FIFO empty interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IFIFOFULL: Mask of AES input FIFO full interrupt -->
            <field>
              <name>IFIFOFULL</name>
              <description>Mask of AES input FIFO full interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Enable AES input FIFO full interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Disable AES input FIFO full interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DONE: Mask of AES operation done interrupt -->
            <field>
              <name>DONE</name>
              <description>Mask of AES operation done interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>UNMASK</name>
                  <description>Enable AES operation done interrupt</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MASK</name>
                  <description>Disable AES operation done interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- AESRAWIF: AES Interrupt RAW status Register -->
        <register>
          <name>AESRAWIF</name>
          <displayName>AESRAWIF</displayName>
          <description>AES Interrupt RAW status Register</description>
          <addressOffset>0x00000064</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- OFIFOEMPTY: AES output FIFO empty interrupt raw status regardless of mask -->
            <field>
              <name>OFIFOEMPTY</name>
              <description>AES output FIFO empty interrupt raw status regardless of mask</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>AES output FIFO empty interrupt not occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>AES output FIFO empty interrupt</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IFIFOFULL: AES input FIFO full interrupt raw status regardless of mask -->
            <field>
              <name>IFIFOFULL</name>
              <description>AES input FIFO full interrupt raw status regardless of mask</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>AES no input FIFO full interrupt not occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>AES no input FIFO full interrupt occurred</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DONE: AES operation done interrupt raw status regardless of mask -->
            <field>
              <name>DONE</name>
              <description>AES operation done interrupt raw status regardless of mask</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NOT_OCCUR</name>
                  <description>AES operation done interrupt not occurred</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OCCUR</name>
                  <description>AES operation done interrupt occurred</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>

        <!-- AESIC: AES Interrupt Clear Register -->
        <register>
          <name>AESIC</name>
          <displayName>AESIC</displayName>
          <description>AES Interrupt Clear Register</description>
          <addressOffset>0x00000068</addressOffset>
          <!-- registerPropertiesGroup --> 
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <!-- end of registerPropertiesGroup -->

          <fields>

            <!-- OFIFOEMPTY: Clearance of AES output FIFO empty interrupt status and raw status -->
            <field>
              <name>OFIFOEMPTY</name>
              <description>Clearance of AES output FIFO empty interrupt status and raw status</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Write &apos;1&apos; will generate a single-cycle pulse that clears both AES output FIFO empty interrupt status and raw status</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- IFIFOFULL: Clearance of AES input FIFO full interrupt status and raw status -->
            <field>
              <name>IFIFOFULL</name>
              <description>Clearance of AES input FIFO full interrupt status and raw status</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Write &apos;1&apos; will generate a single-cycle pulse that clears both AES input FIFO full interrupt status and raw status</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>

            <!-- DONE: Clearance of AES operation done interrupt status and raw status -->
            <field>
              <name>DONE</name>
              <description>Clearance of AES operation done interrupt status and raw status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_EFFECT</name>
                  <description>None</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLEAR_FLAG</name>
                  <description>Write &apos;1&apos; will generate a single-cycle pulse that clears both AES operation done interrupt status and raw status</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>


  </peripherals>
</device>
